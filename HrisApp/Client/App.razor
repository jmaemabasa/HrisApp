@using HrisApp.Client.Pages.Dialog.Auth
@using Microsoft.AspNetCore.Components.Authorization
@inject IMainsService _mainsService
@inject AuthenticationStateProvider AuthenticationStateProvider

<CascadingAuthenticationState>
    <Router AppAssembly="@typeof(App).Assembly">
        <Found Context="routeData">
            <AuthorizeRouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)">
                <NotAuthorized>
                    <div class="d-flex justify-content-center w-100">
                        <img width="600" src="images//401.png" alt="401" />
                    </div>
                    @* <HrisApp.Client.Pages.Dialog.Auth.LoginDialog /> *@
                </NotAuthorized>
            </AuthorizeRouteView>
            <FocusOnNavigate RouteData="@routeData" Selector="h1" />
        </Found>
        <NotFound>
            <PageTitle>Not found</PageTitle>
            <LayoutView Layout="@typeof(MainLayout)">
                <h1>404 Error</h1>
                <p role="alert">Sorry, there's nothing at this address.</p>
            </LayoutView>
        </NotFound>
    </Router>
</CascadingAuthenticationState>

@code {
    #nullable disable
    private AuthenticationState _authenticationState;
    protected override async Task OnInitializedAsync()
    {
        await _mainsService.Set_Http();

        _authenticationState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = _authenticationState.User;
        if (!user.Identity.IsAuthenticated)
        {
            var uri = NavigationManager.ToAbsoluteUri(NavigationManager.Uri);
            var uristring = uri.ToString();
            if (uristring != "http://sonicsales.net:1113/" && uristring != "http://192.168.1.19:1113/" && uristring != "https://localhost:44397/")
            {
                OpenLogin();
            }
        }
    }
    private void OpenLogin()
    {
        var options = new DialogOptions { CloseOnEscapeKey = true, FullWidth = true, MaxWidth = MaxWidth.Small, NoHeader = true };
        DialogService.Show<LoginDialog>("", options);
    }
}

