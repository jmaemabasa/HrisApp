@using Blazored.Toast.Configuration;
@inherits LayoutComponentBase

@inject NavigationManager NavigationManager
@inject ILocalStorageService LocalStorage
@inject AuthenticationStateProvider AuthStateProvider

<MudThemeProvider Theme="MyCustomTheme"/>
<MudDialogProvider />
<MudSnackbarProvider />
@* #EEF1F6  #031a5a*@

<MudLayout>
    <MudAppBar Style="background-color: #27374D; ">
        <MudIconButton Icon="@Icons.Material.Rounded.MenuOpen" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
        @* My Application *@

        <MudSpacer/>
        <MudButton Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.Logout" Style="color: white" OnClick="Logout">Logout</MudButton>

    </MudAppBar>

    <MudDrawer @bind-Open="@_drawerOpen">
        <MudDrawerHeader>
            <MudImage Src="./images/SonicSales.png" Fluid=true Style="width: 80%;" Class="mb-3 mt-1"/>
        </MudDrawerHeader>
        <NavMenu/>
    </MudDrawer>
    <MudMainContent>
        <MudContainer MaxWidth="MaxWidth.ExtraExtraLarge">
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>

<BlazoredToasts Position="ToastPosition.BottomRight" Timeout="10" IconType="IconType.FontAwesome" SuccessClass="success-toast-override" SuccessIcon="fa fa-thumbs-up" ErrorIcon="fa fa-bug"   />

@code {
    bool _drawerOpen = true;

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    async Task Logout()
    {
        await LocalStorage.RemoveItemAsync("token");
        await AuthStateProvider.GetAuthenticationStateAsync();
        NavigationManager.NavigateTo("/");
    }

    MudTheme MyCustomTheme = new MudTheme()
        {
            Palette = new Palette()
            {
                Primary = Colors.Blue.Darken4,
                
                //Define other properties here.
            },

        };
}