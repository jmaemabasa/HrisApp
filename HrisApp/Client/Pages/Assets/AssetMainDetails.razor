@page "/main-asset/details/{id:int}"
@attribute [Authorize(Roles = "HR, System Administrator")]
<PageTitle>Main Asset</PageTitle>

<MudGrid Spacing="3">
    <MudItem xs="12" lg="3">
        <div class="mainassleft" style="margin-top: 10px;">
            <div class="d-flex flex-column justify-content-center ">
                <div class="d-flex justify-content-between align-items-center">
                    <span class="spantitle">Main Asset</span>
                </div>
                <div class="d-flex flex-column gap-2" style="margin-top: 1rem;">
                    <div class="d-flex justify-content-center">
                        <div class="asset-img">
                            <img class="asset-img-img" alt="asset image" src="@ImageData" />
                        </div>
                    </div>
                    <div>
                        <div class="d-flex justify-content-center">
                            <span class="asset-code">@obj.AssetCode</span>
                        </div>
                        <div class="d-flex justify-content-center">
                            @if (obj.AssetStatusId == 2)
                            {
                                <MudChip Style="background: #ced1d4; color: #515254; font-weight: bold;font-size: 11px;margin-bottom: 10px;">@obj.AssetStatus?.Name</MudChip>
                            }
                            else if (obj.AssetStatusId == 3)
                            {
                                <MudChip Style="background: #D8D5E8; color: #7567B8; font-weight: bold;font-size: 11px;margin-bottom: 10px;">@obj.AssetStatus?.Name</MudChip>
                            }
                            else if (obj.AssetStatusId == 4)
                            {
                                <MudChip Style="background: #9caac1; color: #38465e; font-weight: bold;font-size: 11px;margin-bottom: 10px;">@obj.AssetStatus?.Name</MudChip>
                            }
                            else if (obj.AssetStatusId == 5)
                            {
                                <MudChip Style="background: #f5dfa4; color: #e38d0f; font-weight: bold;font-size: 11px;margin-bottom: 10px;">@obj.AssetStatus?.Name</MudChip>
                            }
                            else if (obj.AssetStatusId == 6)
                            {
                                <MudChip Style="background: #EABCBB; color: #be1313; font-weight: bold;font-size: 11px;margin-bottom: 10px;">@obj.AssetStatus?.Name</MudChip>
                            }
                            else
                            {
                                <MudChip Style="background: #C1D4CD; color: #397763; font-weight: bold;font-size: 11px;margin-bottom: 10px;">@obj.AssetStatus?.Name</MudChip>
                            }
                        </div>
                    </div>

                    <div class="divsingledetails">
                        <MudText Align="Align.Start" Style="color: #6A707D;" Typo="Typo.caption">Type</MudText>
                        <MudText Align="Align.Start" Style="color: #757A90; font-weight:bold;" Typo="Typo.body2">@obj.Type?.AType_Name</MudText>
                    </div>
                    <div class="divsingledetails">
                        <MudText Align="Align.Start" Style="color: #6A707D;" Typo="Typo.caption">Category</MudText>
                        <MudText Align="Align.Start" Style="color: #757A90; font-weight:bold;" Typo="Typo.body2">@obj.Category?.ACat_Name</MudText>
                    </div>
                    <div class="divsingledetails">
                        <MudText Align="Align.Start" Style="color: #6A707D;" Typo="Typo.caption">Sub Category</MudText>
                        <MudText Align="Align.Start" Style="color: #757A90; font-weight:bold;" Typo="Typo.body2">@obj.SubCategory?.ASubCat_Name</MudText>
                    </div>
                    <div class="divsingledetails">
                        <MudText Align="Align.Start" Style="color: #6A707D;" Typo="Typo.caption">Location</MudText>
                        <MudText Align="Align.Start" Style="color: #757A90; font-weight:bold;" Typo="Typo.body2">@obj.Area?.Name</MudText>
                    </div>
                    <div class="divsingledetails">
                        <MudText Align="Align.Start" Style="color: #6A707D;" Typo="Typo.caption">Last Checked On</MudText>
                        @{
                            var lastCheck = LASTCHK.Where(e => e.MainAssetId == obj.Id).FirstOrDefault();
                        }
                        @if (lastCheck == null)
                        {
                            <MudText Align="Align.Start" Style="color: #757A90; font-weight:bold;" Typo="Typo.body2">No maintenance yet</MudText>
                        }
                        else
                        {
                            <MudText Align="Align.Start" Style="color: #757A90; font-weight:bold;" Typo="Typo.body2">@lastCheck?.LastCheckDate?.ToString("MMM dd yyyy")</MudText>
                        }


                    </div>
                </div>
            </div>
        </div>
    </MudItem>

    <MudItem xs="12" lg="9">
        <div class="mainassmain">
            <MudTabs Elevation="0" Rounded="true" ApplyEffectsToContainer="true" PanelClass="pa-6" @ref="tabs" @bind-ActivePanelIndex="activeIndex">
                <MudTabPanel TabContent="tabHeader(0)">
                    <div class="mainasssec">
                        <div class="d-flex justify-content-between align-items-center mb-3">
                            <span class="spantitle">Details</span>
                            <AuthorizeView Roles="HR, System Administrator">
                                <Authorized>
                                    <button class="Btn" onclick="@(() => OpenDrawer(Anchor.End, "leftPanelOpen"))">

                                        <div class="sign"><MudIcon Icon="@Icons.Material.Rounded.Edit"></MudIcon></div>

                                        <div class="text">Update</div>
                                    </button>
                                </Authorized>
                            </AuthorizeView>
                        </div>
                        <div class="d-flex flex-column gap-3">
                            <div class="d-flex flex-row gap-4">
                                <MudItem xs="12" sm="6" Class="divsingledetails">
                                    <MudText Align="Align.Start" Style="color: #6A707D;" Typo="Typo.caption">Asset</MudText>
                                    <MudText Align="Align.Start" Style="color: #27374D; font-weight:bold;" Typo="Typo.body2">@obj.AssetCode</MudText>
                                </MudItem>
                                <MudItem xs="12" sm="6" Class="divsingledetails">
                                    <MudText Align="Align.Start" Style="color: #6A707D;" Typo="Typo.caption">Location</MudText>
                                    <MudText Align="Align.Start" Style="color: #757A90; font-weight:bold;" Typo="Typo.body2">@obj.Area?.Name</MudText>
                                </MudItem>
                            </div>
                            <div class="d-flex flex-row gap-4">
                                <MudItem xs="12" sm="4" Class="divsingledetails">
                                    <MudText Align="Align.Start" Style="color: #6A707D;" Typo="Typo.caption">Type</MudText>
                                    <MudText Align="Align.Start" Style="color: #757A90; font-weight:bold;" Typo="Typo.body2">@obj.Type?.AType_Name</MudText>
                                </MudItem>
                                <MudItem xs="12" sm="4" Class="divsingledetails">
                                    <MudText Align="Align.Start" Style="color: #6A707D;" Typo="Typo.caption">Category</MudText>
                                    <MudText Align="Align.Start" Style="color: #757A90; font-weight:bold;" Typo="Typo.body2">@obj.Category?.ACat_Name</MudText>
                                </MudItem>
                                <MudItem xs="12" sm="4" Class="divsingledetails">
                                    <MudText Align="Align.Start" Style="color: #6A707D;" Typo="Typo.caption">Sub Category</MudText>
                                    <MudText Align="Align.Start" Style="color: #757A90; font-weight:bold;" Typo="Typo.body2">@obj.SubCategory?.ASubCat_Name</MudText>
                                </MudItem>
                            </div>
                            <div class="d-flex flex-row gap-4">
                                <MudItem xs="12" sm="4" Class="divsingledetails">
                                    <MudText Align="Align.Start" Style="color: #6A707D;" Typo="Typo.caption">Purchase Date</MudText>
                                    <MudText Align="Align.Start" Style="color: #757A90; font-weight:bold;" Typo="Typo.body2">@obj.PurchaseDate?.ToString("MMM dd yyyy")</MudText>
                                </MudItem>
                                <MudItem xs="12" sm="4" Class="divsingledetails">
                                    <MudText Align="Align.Start" Style="color: #6A707D;" Typo="Typo.caption">Purchase Amount</MudText>
                                    <MudText Align="Align.Start" Style="color: #757A90; font-weight:bold;" Typo="Typo.body2">@obj.PurchaseAmount</MudText>
                                </MudItem>
                                <MudItem xs="12" sm="4" Class="divsingledetails">
                                    <MudText Align="Align.Start" Style="color: #6A707D;" Typo="Typo.caption">End of Life (Months)</MudText>
                                    @{
                                        int eufMonths = 0;
                                        if (!string.IsNullOrEmpty(obj.EUF) && int.TryParse(obj.EUF, out eufMonths))
                                        {
                                            var isEuf = obj.PurchaseDate.HasValue && DateTime.Today > obj.PurchaseDate.Value.AddMonths(eufMonths);
                                            if (isEuf)
                                            {
                                                                            <MudText Align="Align.Start" Style="color: #be1313; font-weight:bold;" Typo="Typo.body2">@eufMonths Months</MudText>
                                            }
                                            else
                                            {
                                                                            <MudText Align="Align.Start" Style="color: #757A90; font-weight:bold;" Typo="Typo.body2">@eufMonths Months</MudText>
                                            }
                                        }
                                        else
                                        {
                                                                        <MudText Align="Align.Start" Style="color: #757A90; font-weight:bold;" Typo="Typo.body2">0 Months</MudText>
                                        }
                                    }
                                </MudItem>
                            </div>
                        </div>
                    </div>

                    <div class="mainasssec" style="margin-top: 25px;">
                        <div class="d-flex justify-content-between align-items-center mb-3">
                            <span class="spantitle">Asset Accessories</span>
                            <AuthorizeView Roles="HR, System Administrator">
                                <Authorized>
                                    <button class="Btn" @onclick="OpenManageAccessories">

                                        <div class="sign"><MudIcon Icon="@Icons.Material.Rounded.Add"></MudIcon></div>

                                        <div class="text">Add</div>
                                    </button>
                                </Authorized>
                            </AuthorizeView>
                        </div>

                        @if (ACCESSORIES.Where(e => e.MainAssetId == obj.Id) == null || ACCESSORIES.Where(e => e.MainAssetId == obj.Id).ToList().Count == 0)
                        {
                            <span style="font-style: italic;">No accessories</span>
                        }
                        else {
                            <div class="d-flex flex-column">
                                @foreach (var item in ACCESSORIES.Where(e => e.MainAssetId == obj.Id))
                                {
                                    <div class="d-flex acc-cont" @onclick="()=>OpenAccessoriesDialog(item.Id)">
                                        <MudItem xs="12" sm="3"><span class="asset">@item.Asset</span></MudItem>
                                        <MudItem xs="12" sm="4"><span>@item.SubCategory?.ASubCat_Name</span></MudItem>
                                        <MudItem xs="12" sm="2"><span>@item.PurchaseDate?.ToString("MMM dd yyyy")</span></MudItem>

                                        @{
                                            var isEuf = item.PurchaseDate.HasValue && DateTime.Today > item.PurchaseDate.Value.AddMonths(Convert.ToInt32(item.EUF));
                                        }

                                        @if (isEuf)
                                        {
                                            <MudItem xs="12" sm="2"><span style="color: #be1313">@item.EUF Months</span></MudItem>
                                        }
                                        else
                                        {
                                            <MudItem xs="12" sm="2"><span>@item.EUF Months</span></MudItem>
                                        }

                                        @if (item.AssetStatusId == 2)
                                        {
                                            <MudItem xs="12" sm="2"><span style="color: gray;">@item.AssetStatus?.Name</span></MudItem>
                                        }
                                        else if (item.AssetStatusId == 3)
                                        {
                                            <MudItem xs="12" sm="2"><span style="color: #7567b8;">@item.AssetStatus?.Name</span></MudItem>
                                        }
                                        else if (item.AssetStatusId == 4)
                                        {
                                            <MudItem xs="12" sm="2"><span style="color: #9caac1;">@item.AssetStatus?.Name</span></MudItem>
                                        }
                                        else if (item.AssetStatusId == 5)
                                        {
                                            <MudItem xs="12" sm="2"><span style="color: #e38d0f;">@item.AssetStatus?.Name</span></MudItem>

                                        }
                                        else if (item.AssetStatusId == 6)
                                        {
                                            <MudItem xs="12" sm="2"><span style="color: #be1313;">@item.AssetStatus?.Name</span></MudItem>
                                        }
                                        else
                                        {
                                            <MudItem xs="12" sm="2"><span style="color: #397763;">@item.AssetStatus?.Name</span></MudItem>
                                        }
                                    </div>
                                }
                            </div>
                        }
                       
                    </div>
                </MudTabPanel>
                <MudTabPanel TabContent="tabHeader(1)">
                    <div class="mainasssec">
                        <div class="d-flex justify-content-between align-items-center mb-3">
                            <span class="spantitle">Details</span>
                            <AuthorizeView Roles="HR, System Administrator">
                                <Authorized>
                                    <button class="Btn" onclick="@(() => OpenDrawer(Anchor.End, "detailsPanelOpen"))">

                                        <div class="sign"><MudIcon Icon="@Icons.Material.Rounded.Edit"></MudIcon></div>

                                        <div class="text">Update</div>
                                    </button>
                                </Authorized>
                            </AuthorizeView>
                        </div>
                        <div class="d-flex flex-column gap-3">
                            <div class="divsingledetails">
                                <MudText Align="Align.Start" Style="color: #6A707D;" Typo="Typo.caption">Workstation Name</MudText>
                                <MudText Align="Align.Start" Style="color: #757A90; font-weight:bold;" Typo="Typo.body2">@obj.WorksationName</MudText>
                            </div>
                            <div class="d-flex flex-row gap-4">
                                <MudItem xs="12" sm="6" Class="divsingledetails">
                                    <MudText Align="Align.Start" Style="color: #6A707D;" Typo="Typo.caption">Brand</MudText>
                                    <MudText Align="Align.Start" Style="color: #757A90; font-weight:bold;" Typo="Typo.body2">@obj.Brand</MudText>
                                </MudItem>
                                <MudItem xs="12" sm="6" Class="divsingledetails">
                                    <MudText Align="Align.Start" Style="color: #6A707D;" Typo="Typo.caption">Model</MudText>
                                    <MudText Align="Align.Start" Style="color: #757A90; font-weight:bold;" Typo="Typo.body2">@obj.Model</MudText>
                                </MudItem>
                            </div>
                            <div class="divsingledetails">
                                <MudText Align="Align.Start" Style="color: #6A707D;" Typo="Typo.caption">Serial</MudText>
                                <MudText Align="Align.Start" Style="color: #757A90; font-weight:bold;" Typo="Typo.body2">@obj.Serial</MudText>
                            </div>
                            <div class="d-flex flex-row gap-4">
                                <MudItem xs="12" sm="6" Class="divsingledetails">
                                    <MudText Align="Align.Start" Style="color: #6A707D;" Typo="Typo.caption">Device ID</MudText>
                                    <MudText Align="Align.Start" Style="color: #757A90; font-weight:bold;" Typo="Typo.body2">@obj.DeviceID</MudText>
                                </MudItem>
                                <MudItem xs="12" sm="6" Class="divsingledetails">
                                    <MudText Align="Align.Start" Style="color: #6A707D;" Typo="Typo.caption">Product ID</MudText>
                                    <MudText Align="Align.Start" Style="color: #757A90; font-weight:bold;" Typo="Typo.body2">@obj.ProductID</MudText>
                                </MudItem>
                            </div>
                            <div class="d-flex flex-row gap-4">
                                <MudItem xs="12" sm="6" Class="divsingledetails">
                                    <MudText Align="Align.Start" Style="color: #6A707D;" Typo="Typo.caption">Processor</MudText>
                                    <MudText Align="Align.Start" Style="color: #757A90; font-weight:bold;" Typo="Typo.body2">@obj.Processor</MudText>
                                </MudItem>
                                <MudItem xs="12" sm="6" Class="divsingledetails">
                                    <MudText Align="Align.Start" Style="color: #6A707D;" Typo="Typo.caption">RAM (GB) Recommended 8</MudText>
                                    <MudText Align="Align.Start" Style="color: #757A90; font-weight:bold;" Typo="Typo.body2">@obj.RAM</MudText>
                                </MudItem>
                            </div>
                            <div class="d-flex flex-row gap-4">
                                <MudItem xs="12" sm="6" Class="divsingledetails">
                                    <MudText Align="Align.Start" Style="color: #6A707D;" Typo="Typo.caption">Storage (GB) Recommended 500</MudText>
                                    <MudText Align="Align.Start" Style="color: #757A90; font-weight:bold;" Typo="Typo.body2">@obj.Storage</MudText>
                                </MudItem>
                                <MudItem xs="12" sm="6" Class="divsingledetails">
                                    <MudText Align="Align.Start" Style="color: #6A707D;" Typo="Typo.caption">Storage Type Recommended SSD</MudText>
                                    <MudText Align="Align.Start" Style="color: #757A90; font-weight:bold;" Typo="Typo.body2">@obj.StorageType</MudText>
                                </MudItem>
                            </div>
                            <div class="d-flex flex-row gap-4">
                                <MudItem xs="12" sm="6" Class="divsingledetails">
                                    <MudText Align="Align.Start" Style="color: #6A707D;" Typo="Typo.caption">Mac Address</MudText>
                                    <MudText Align="Align.Start" Style="color: #757A90; font-weight:bold;" Typo="Typo.body2">@obj.MacAddress</MudText>
                                </MudItem>
                                <MudItem xs="12" sm="6" Class="divsingledetails">
                                    <MudText Align="Align.Start" Style="color: #6A707D;" Typo="Typo.caption">Client IP</MudText>
                                    <MudText Align="Align.Start" Style="color: #757A90; font-weight:bold;" Typo="Typo.body2">@obj.ClientIP</MudText>
                                </MudItem>
                            </div>

                            <div class="d-flex flex-row gap-4">
                                <MudItem xs="12" sm="6" Class="divsingledetails">
                                    <MudText Align="Align.Start" Style="color: #6A707D;" Typo="Typo.caption">Username Admin</MudText>
                                    <MudText Align="Align.Start" Style="color: #757A90; font-weight:bold;" Typo="Typo.body2">@obj.UsernameAdmin</MudText>
                                </MudItem>
                                <MudItem xs="12" sm="6" Class="divsingledetails">
                                    <div class="d-flex justify-content-between">
                                        <div>
                                            <MudText Align="Align.Start" Style="color: #6A707D;" Typo="Typo.caption">Password Admin</MudText>
                                            <MudText Align="Align.Start" Style="color: #757A90; font-weight:bold;" Typo="Typo.body2">@PasswordHolder</MudText>
                                        </div>
                                        <div>
                                            <MudIconButton Icon="@_passwordDisplayIcon" aria-label="show password" OnClick="DisplayPassword" Style="color: #757A90" />
                                        </div>
                                    </div>
                                </MudItem>
                            </div>
                            <div class="divsingledetails">
                                <MudText Align="Align.Start" Style="color: #6A707D;" Typo="Typo.caption">Remarks</MudText>
                                <MudText Align="Align.Start" Style="color: #757A90; font-weight:bold;" Typo="Typo.body2">@obj.Remarks</MudText>
                            </div>
                        </div>
                    </div>
                </MudTabPanel>
                <MudTabPanel TabContent="tabHeader(2)">
                    <div class="mainasssec">
                        <div class="d-flex justify-content-between align-items-center mb-3">
                            <span class="spantitle">Currently Assigned To</span>
                            @if (obj.EmployeeId == null)
                            {
                                <AuthorizeView Roles="HR, System Administrator">
                                    <Authorized>
                                        <button class="Btn" onclick="@(() => OpenDrawer(Anchor.End, "assignPanelOpen"))">

                                            <div class="sign"><MudIcon Icon="@Icons.Material.Rounded.AssignmentInd"></MudIcon></div>

                                            <div class="text">Assign</div>
                                        </button>
                                    </Authorized>
                                </AuthorizeView>
                            }
                            else
                            {
                                <AuthorizeView Roles="HR, System Administrator">
                                    <Authorized>
                                        <button class="btn-returned" onclick="@(() => OpenDrawer(Anchor.End, "assignReturnPanelOpen"))">
                                            <MudIcon Icon="@Icons.Material.Rounded.SwipeLeftAlt" Class="me-1"></MudIcon> Returned?
                                        </button>
                                    </Authorized>
                                </AuthorizeView>
                            }
                        </div>
                        <div class="container-fluid">
                            <div class="row">
                                @if (obj.EmployeeId == null)
                                {
                                    <span style="font-style: italic;">Not currently used</span>
                                }
                                else
                                {
                                    <div class="col d-flex">
                                        <div class="d-flex flex-column gap-3 w-100">
                                            <div class="divsingledetails">
                                                <MudText Align="Align.Start" Style="color: #6A707D;" Typo="Typo.caption">Employee Name</MudText>
                                                <MudText Align="Align.Start" Style="color: #757A90; font-weight:bold;" Typo="Typo.body2">@obj.Employee?.FirstName @obj.Employee?.LastName</MudText>
                                            </div>
                                            <div class="divsingledetails">
                                                <MudText Align="Align.Start" Style="color: #6A707D;" Typo="Typo.caption">Division / Department</MudText>
                                                <MudText Align="Align.Start" Style="color: #757A90; font-weight:bold;" Typo="Typo.body2">@obj.Employee?.Division?.Name / @obj.Employee?.Department?.Name</MudText>
                                            </div>
                                            <div class="d-flex gap-3">
                                                <div class="divsingledetails flex-grow-1">
                                                    <MudText Align="Align.Start" Style="color: #6A707D;" Typo="Typo.caption">Date Released</MudText>
                                                    <MudText Align="Align.Start" Style="color: #757A90; font-weight:bold;" Typo="Typo.body2">@obj.AssignedDateReleased?.ToString("MMM dd yyyy")</MudText>
                                                </div>
                                                <div class="divsingledetails flex-grow-1">
                                                    <MudText Align="Align.Start" Style="color: #6A707D;" Typo="Typo.caption">Date To Return</MudText>
                                                    <MudText Align="Align.Start" Style="color: #757A90; font-weight:bold;" Typo="Typo.body2">@obj.AssignedDateToReturn?.ToString("MMM dd yyyy")</MudText>
                                                </div>
                                            </div>

                                        </div>
                                    </div>
                                    <div class="col-12 col-md-2">
                                        <img class="emp-img" alt="employee image" src="@ImageEmployee" style="width: 100%; height: 197px; object-fit: cover;" />
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                    <div class="mainasssec" style="margin-top: 25px;">
                        <div class="d-flex justify-content-between align-items-center mb-3">
                            <span class="spantitle">Assigned History</span>
                        </div>
                        <div class="d-flex flex-column gap-3">
                            @if (MAINHISTORY.Where(e => e.EndDate != null && e.MainAssetId == obj.Id) == null || MAINHISTORY.Where(e => e.EndDate != null && e.MainAssetId == obj.Id).ToList().Count == 0)
                            {
                                <span style="font-style: italic;">Never been used</span>
                            }
                            else
                            {
                                <MudTable Class="stable" Height="323px" Items="MAINHISTORY.Where(e => e.EndDate != null && e.MainAssetId == obj.Id)" Context="item" SortLabel="Sort By" FixedHeader="true" Elevation="0" HorizontalScrollbar="true" Dense="true" Hover="true" Bordered="false" Striped="true">
                                    <HeaderContent>
                                        <MudTh Class="" Style="background: #e9ecef; font-weight: bold; font-size: 15px;">Asset</MudTh>
                                        <MudTh Class="" Style="background: #e9ecef; font-weight: bold; font-size: 15px;">Assigned To</MudTh>
                                        <MudTh Class="" Style="background: #e9ecef; font-weight: bold; font-size: 15px;">Date Released</MudTh>
                                        <MudTh Class="" Style="background: #e9ecef; font-weight: bold; font-size: 15px;">Date Returned</MudTh>
                                    </HeaderContent>
                                    <RowTemplate>
                                        <MudTd DataLabel=""><b>@item.MainAsset?.AssetCode</b></MudTd>
                                        <MudTd DataLabel="">
                                            <EmployeeNamePosition verify="@item.Employee?.Verify_Id" />
                                        </MudTd>
                                        <MudTd DataLabel="">@item.AssignedDateReleased?.ToString("MMM dd yyyy")</MudTd>
                                        <MudTd DataLabel="">@item.EndDate?.ToString("MMM dd yyyy")</MudTd>
                                    </RowTemplate>
                                    <PagerContent>
                                        <MudTablePager PageSizeOptions="new int[] { 5, 25, int.MaxValue }" InfoFormat="@($"Right {infoFormat}")" HorizontalAlignment="HorizontalAlignment.Right" />
                                    </PagerContent>
                                </MudTable>
                            }
                        </div>
                    </div>
                </MudTabPanel>
                <MudTabPanel TabContent="tabHeader(3)">
                    <div class="mainasssec">
                        <div class="d-flex justify-content-between align-items-center mb-3">
                            <span class="spantitle">Last Check On</span>
                            <AuthorizeView Roles="HR, System Administrator">
                                <Authorized>
                                    <button class="Btn" onclick="@(() => OpenDrawer(Anchor.End, "mtsChkPanelOpen"))">

                                        <div class="sign"><MudIcon Icon="@Icons.Material.Rounded.Check"></MudIcon></div>

                                        <div class="text">Checked?</div>
                                    </button>
                                </Authorized>
                            </AuthorizeView>
                        </div>
                        <div class="d-flex flex-column gap-3">
                            @if (LASTCHK.Where(e => e.MainAssetId == obj.Id) == null || LASTCHK.Where(e => e.MainAssetId == obj.Id).ToList().Count == 0)
                            {
                                <span style="font-style: italic;">No maintenance yet</span>
                            }
                            else
                            {
                                <MudTable Class="stable" Height="590px" Items="LASTCHK.Where(e => e.MainAssetId == obj.Id)" Context="item" SortLabel="Sort By" FixedHeader="true" Elevation="0" HorizontalScrollbar="true" Dense="false" Hover="true" Bordered="false" Striped="true">
                                    <HeaderContent>
                                        <MudTh Class="col-4" Style="background: #e9ecef; font-weight: bold; font-size: 15px;">Asset</MudTh>
                                        <MudTh Class="col-4" Style="background: #e9ecef; font-weight: bold; font-size: 15px;">Last Checked On</MudTh>
                                        <MudTh Class="col-4" Style="background: #e9ecef; font-weight: bold; font-size: 15px;">Remarks</MudTh>
                                    </HeaderContent>
                                    <RowTemplate>
                                        <MudTd DataLabel=""><b>@item.MainAsset?.AssetCode</b></MudTd>
                                        <MudTd DataLabel="">@item.LastCheckDate?.ToString("MMM dd yyyy")</MudTd>
                                        <MudTd DataLabel="">
                                            @if (item.Remarks.Length > 40)
                                            {
                                                <div class="ellipsis-clickable" data-remarks="@item.Remarks" data-max-length="40" style="cursor: pointer">@TruncateString(item.Remarks, 40)</div>
                                            }
                                            else
                                            {
                                                @item.Remarks
                                            }
                                        </MudTd>
                                    </RowTemplate>
                                    <PagerContent>
                                        <MudTablePager PageSizeOptions="new int[] { 10, 25, int.MaxValue }" InfoFormat="@($"Right {infoFormat}")" HorizontalAlignment="HorizontalAlignment.Right" />
                                    </PagerContent>
                                </MudTable>
                            }
                        </div>
                    </div>
                </MudTabPanel>
                <MudTabPanel TabContent="tabHeader(4)">
                    <AssetMainMultiImage MainAssetId="@obj.Id" MainAssetCode="@obj.AssetCode" JMCode="@obj.Code" Catid="@obj.CategoryId" SubCatid="obj.SubCategoryId" OnFileAdded="@RefreshPdfFileList" />
                    <div class="" Style="margin-top: 1rem;">
                        @if (ImgByAssetList.Any())
                        {
                            <div class="d-flex gap-3 flex-wrap">

                                @foreach (var item in ImgByAssetList)
                                {
                                    var ssrcc = item.Split("xxJMGWAPAxx")[0];
                                    var ssrccalt = item.Split("xxJMGWAPAxx")[1];
                                    <div class="imgassetdiv">
                                        <img id="myImg" class="imgasset" src="@ssrcc" alt="@ssrccalt" />
                                        <div class="topright">
                                            <MudTooltip Text="Remove">
                                            <button type="button" class="btn assetdelteimg" onclick="@(() => DeleteAssetImg(ssrccalt, obj.AssetCode))">
                                                 <MudIcon Icon="@Icons.Material.Rounded.Delete" />
                                            </button>
                                            </MudTooltip>
                                        </div>
                                        <div class="middle">
                                            <div class="textsss">
                                                <MudTooltip Text="View">
                                                    <MudIcon Icon="@Icons.Material.Rounded.ZoomIn" Style="font-size: 4rem;" />
                                                </MudTooltip>
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>

                        }
                        else
                        {
                            <span style="font-style: italic;">No Images found!</span>
                        }

                    </div>
                </MudTabPanel>
            </MudTabs>
        </div>
    </MudItem>
</MudGrid>

<!-- The Modal -->
<div id="myModal" class="modal">
    <span id="closemodalimg" class="close">&times;</span>
    <img class="modal-content" id="img01">
    <div id="caption"></div>
</div>

<MudDrawer @bind-Open="@leftPanelOpen" Width="500px" Height="100%" Anchor="@anchor" Elevation="1" Variant="@DrawerVariant.Temporary" Style=" margin: 10px;">
    <div class="d-flex flex-column gap-2 drawerdetails">
        <span>Update</span>
        <div class="flex-grow-1">
            <MudText Align="Align.Start" Style="color: #6A707D;" Typo="Typo.caption">Asset Code</MudText>
            <MudTextField @bind-Value="obj.AssetCode" Variant="Variant.Outlined" Margin="Margin.Dense" />
        </div>
        <div class="flex-grow-1">
            <MudText Align="Align.Start" Style="color: #6A707D;" Typo="Typo.caption">Type</MudText>
            <MudSelect @bind-Value="obj.TypeId" Variant="Variant.Outlined" Margin="Margin.Dense">
                <MudSelectItem Disabled="true" Value="0">Select</MudSelectItem>
                @foreach (var sec in TYPES)
                {
                    <MudSelectItem Value="@sec.Id">@sec.AType_Name</MudSelectItem>
                }
            </MudSelect>
        </div>
        <div class="flex-grow-1">
            <MudText Align="Align.Start" Style="color: #6A707D;" Typo="Typo.caption">Category</MudText>
            <MudSelect @bind-Value="obj.CategoryId" Variant="Variant.Outlined" Margin="Margin.Dense">
                <MudSelectItem Disabled="true" Value="0">Select</MudSelectItem>
                @foreach (var sec in CAT)
                {
                    <MudSelectItem Value="@sec.Id">@sec.ACat_Name</MudSelectItem>
                }
            </MudSelect>
        </div>
        <div class="flex-grow-1">
            <MudText Align="Align.Start" Style="color: #6A707D;" Typo="Typo.caption">Sub Category</MudText>
            <MudSelect @bind-Value="obj.SubCategoryId" Variant="Variant.Outlined" Margin="Margin.Dense">
                <MudSelectItem Disabled="true" Value="0">Select</MudSelectItem>
                @foreach (var sec in SUBCAT.Where(e => e.CategoryId == obj.CategoryId))
                {
                    <MudSelectItem Value="@sec.Id">@sec.ASubCat_Name</MudSelectItem>
                }
            </MudSelect>
        </div>
        <div class="flex-grow-1">
            <MudText Align="Align.Start" Style="color: #6A707D;" Typo="Typo.caption">Location</MudText>
            <MudSelect @bind-Value="obj.AreaId" Variant="Variant.Outlined" Margin="Margin.Dense" Style="margin-bottom: 5px;">
                <MudSelectItem Disabled="true" Value="0">Select</MudSelectItem>
                @foreach (var sec in AREA)
                {
                    <MudSelectItem Value="@sec.Id">@sec.Name</MudSelectItem>
                }
            </MudSelect>
        </div>
        <div class="row">
            <div class="col-12 col-lg-6">
                <MudText Align="Align.Start" Style="color: #6A707D;" Typo="Typo.caption">Purchase Date</MudText>
                <MudDatePicker Editable="true" @bind-Date="obj.PurchaseDate" Mask="@(new DateMask("MM/dd/yyyy"))" DateFormat="MM/dd/yyyy" Variant="Variant.Outlined" Margin="Margin.Dense" />
            </div>
            <div class="col-12 col-lg-6">
                <MudText Align="Align.Start" Style="color: #6A707D;" Typo="Typo.caption">Purchase Amount</MudText>
                <MudTextField @bind-Value="obj.PurchaseAmount" Variant="Variant.Outlined" Margin="Margin.Dense" />
            </div>
        </div>
        <div class="flex-grow-1">
            <MudText Align="Align.Start" Style="color: #6A707D;" Typo="Typo.caption">End of Useful Life (Months)</MudText>
            <MudTextField @bind-Value="obj.EUF" Mask="@(new PatternMask("00000"))" Variant="Variant.Outlined" Margin="Margin.Dense" Style="margin-bottom: 5px;" />
        </div>
        <div class="flex-grow-1">
            <MudText Align="Align.Start" Style="color: #6A707D;" Typo="Typo.caption">Status</MudText>
            <MudSelect @bind-Value="obj.AssetStatusId" Variant="Variant.Outlined" Margin="Margin.Dense">
                <MudSelectItem Disabled="true" Value="0">Select</MudSelectItem>
                @foreach (var sec in STATUS)
                {
                    <MudSelectItem Value="@sec.Id">@sec.Name</MudSelectItem>
                }
            </MudSelect>
        </div>
        @if (obj.AssetStatusId != 1 && obj.AssetStatusId != 2)
        {
            <div class="flex-grow-1">
                <MudText Align="Align.Start" Style="color: #6A707D;" Typo="Typo.caption">
                    @{
                        var tes = STATUS.Where(e => e.Id == obj.AssetStatusId).FirstOrDefault();
                    }
                    @tes?.Name DATE
                </MudText>
                <MudDatePicker Editable="true" @bind-Date="obj.StatusDate" Mask="@(new DateMask("MM/dd/yyyy"))" DateFormat="MM/dd/yyyy" Variant="Variant.Outlined" Margin="Margin.Dense" />
            </div>
        }
        <div class="d-flex justify-content-center">
            <button type="button" class="btn btn-save" @onclick="SaveUpdate">Save</button>
        </div>
    </div>
</MudDrawer>

<MudDrawer @bind-Open="@detailsPanelOpen" Width="500px" Height="100%" Anchor="@anchor" Elevation="1" Variant="@DrawerVariant.Temporary" Style=" margin: 10px;">
    <div class="d-flex flex-column gap-2 drawerdetails">
        <span>Update</span>
        <div class="flex-grow-1">
            <MudText Align="Align.Start" Style="color: #6A707D;" Typo="Typo.caption">Workstation Name</MudText>
            <MudTextField @bind-Value="obj.WorksationName" Variant="Variant.Outlined" Margin="Margin.Dense" />
        </div>
        <div class="row">
            <div class="col-12 col-lg-6">
                <MudText Align="Align.Start" Style="color: #6A707D;" Typo="Typo.caption">Brand</MudText>
                <MudTextField @bind-Value="obj.Brand" Variant="Variant.Outlined" Margin="Margin.Dense" />
            </div>
            <div class="col-12 col-lg-6">
                <MudText Align="Align.Start" Style="color: #6A707D;" Typo="Typo.caption">Model</MudText>
                <MudTextField @bind-Value="obj.Model" Variant="Variant.Outlined" Margin="Margin.Dense" />
            </div>
        </div>
        <div class="flex-grow-1">
            <MudText Align="Align.Start" Style="color: #6A707D;" Typo="Typo.caption">Serial</MudText>
            <MudTextField @bind-Value="obj.Serial" Variant="Variant.Outlined" Margin="Margin.Dense" />
        </div>
        <div class="flex-grow-1">
            <MudText Align="Align.Start" Style="color: #6A707D;" Typo="Typo.caption">Device ID</MudText>
            <MudTextField @bind-Value="obj.DeviceID" Variant="Variant.Outlined" Margin="Margin.Dense" />
        </div>
        <div class="flex-grow-1">
            <MudText Align="Align.Start" Style="color: #6A707D;" Typo="Typo.caption">Product ID</MudText>
            <MudTextField @bind-Value="obj.ProductID" Variant="Variant.Outlined" Margin="Margin.Dense" />
        </div>
        <div class="row">
            <div class="col-12 col-lg-6">
                <MudText Align="Align.Start" Style="color: #6A707D;" Typo="Typo.caption">Processor</MudText>
                <MudTextField @bind-Value="obj.Processor" Variant="Variant.Outlined" Margin="Margin.Dense" />
            </div>
            <div class="col-12 col-lg-6">
                <MudText Align="Align.Start" Style="color: #6A707D;" Typo="Typo.caption">RAM (GB) Recommended 8</MudText>
                <MudTextField @bind-Value="obj.RAM" Mask="@(new PatternMask("000000000"))" Variant="Variant.Outlined" Margin="Margin.Dense" />
            </div>
        </div>
        <div class="row">
            <div class="col-12 col-lg-6">
                <MudText Align="Align.Start" Style="color: #6A707D;" Typo="Typo.caption">Storage (GB) Recommended 500</MudText>
                <MudTextField @bind-Value="obj.Storage" Mask="@(new PatternMask("000000000"))" Variant="Variant.Outlined" Margin="Margin.Dense" />
            </div>
            <div class="col-12 col-lg-6">
                <MudText Align="Align.Start" Style="color: #6A707D;" Typo="Typo.caption">Storage Type Recommended SSD</MudText>
                <MudSelect @bind-Value="obj.StorageType" Variant="Variant.Outlined" Margin="Margin.Dense">
                    <MudSelectItem Value="@("SSD")" />
                    <MudSelectItem Value="@("HDD")" />
                    <MudSelectItem Value="@("NVME")" />
                </MudSelect>
            </div>
        </div>
        <div class="row">
            <div class="col-12 col-lg-6">
                <MudText Align="Align.Start" Style="color: #6A707D;" Typo="Typo.caption">Mac Address</MudText>
                <MudTextField @bind-Value="obj.MacAddress" Mask="@MacAddMask" Variant="Variant.Outlined" Margin="Margin.Dense" />
            </div>
            <div class="col-12 col-lg-6">
                <MudText Align="Align.Start" Style="color: #6A707D;" Typo="Typo.caption">Client IP</MudText>
                <MudTextField @bind-Value="obj.ClientIP" Variant="Variant.Outlined" Margin="Margin.Dense" />
            </div>
        </div>
        <div class="row">
            <div class="col-12 col-lg-6">
                <MudText Align="Align.Start" Style="color: #6A707D;" Typo="Typo.caption">Username Admin</MudText>
                <MudTextField @bind-Value="obj.UsernameAdmin" Variant="Variant.Outlined" Margin="Margin.Dense" />
            </div>
            <div class="col-12 col-lg-6">
                <MudText Align="Align.Start" Style="color: #6A707D;" Typo="Typo.caption">Password Admin</MudText>
                <MudTextField @bind-Value="obj.PasswordAdmin" Variant="Variant.Outlined" Margin="Margin.Dense" Adornment="Adornment.End" InputType="@_passwordInput" AdornmentIcon="@_passwordInputIcon" OnAdornmentClick="ButtonShowPassword" AdornmentAriaLabel="Show Password" />
            </div>
        </div>
        <div class="flex-grow-1">
            <MudText Align="Align.Start" Style="color: #6A707D;" Typo="Typo.caption">Remarks</MudText>
            <MudTextField @bind-Value="obj.Remarks" Variant="Variant.Outlined" Margin="Margin.Dense" />
        </div>
        <div class="d-flex justify-content-center">
            <button type="button" class="btn btn-save" @onclick="SaveUpdate">Save</button>
        </div>
    </div>
</MudDrawer>

<MudDrawer @bind-Open="@assignPanelOpen" Width="500px" Height="100%" Anchor="@anchor" Elevation="1" Variant="@DrawerVariant.Temporary" Style=" margin: 10px;">
    <div class="d-flex flex-column gap-2 drawerdetails">
        <span>Assign Employee to @obj.WorksationName</span>
        @if (obj.EmployeeId == null)
        {
            <div class="flex-grow-1">
                <MudText Align="Align.Start" Style="color: #6A707D;" Typo="Typo.caption">Division</MudText>
                <MudSelect T="int" ValueChanged="OnDivChange" Variant="Variant.Outlined" Margin="Margin.Dense">
                    <MudSelectItem Disabled="true" Value="0">Select</MudSelectItem>
                    @foreach (var sec in DIVISION)
                    {
                        <MudSelectItem Value="@sec.Id">@sec.Name</MudSelectItem>
                    }
                </MudSelect>
            </div>
            <div class="flex-grow-1">
                <MudText Align="Align.Start" Style="color: #6A707D;" Typo="Typo.caption">Department</MudText>
                <MudSelect T="int" ValueChanged="OnDepChange" Disabled="isdisableDept" Variant="Variant.Outlined" Margin="Margin.Dense">
                    <MudSelectItem Disabled="true" Value="0">Select</MudSelectItem>
                    @foreach (var sec in DEPARTMENT.Where(e => e.DivisionId == divid))
                    {
                        <MudSelectItem Value="@sec.Id">@sec.Name</MudSelectItem>
                    }
                </MudSelect>
            </div>
            <div class="flex-grow-1">
                <MudText Align="Align.Start" Style="color: #6A707D;" Typo="Typo.caption">Employee</MudText>
                <MudSelect @bind-Value="empid" Disabled="isdisableEmp" Variant="Variant.Outlined" Margin="Margin.Dense">
                    <MudSelectItem Disabled="true" Value="0">Select</MudSelectItem>
                    @foreach (var sec in EMPLOYEE.Where(e => e.DivisionId == divid && e.DepartmentId == deptid && e.StatusId == 1))
                    {
                        <MudSelectItem Value="@sec.Id">@sec.FirstName @sec.LastName</MudSelectItem>
                    }
                </MudSelect>
            </div>
            <div class="flex-grow-1">
                <MudText Align="Align.Start" Style="color: #6A707D;" Typo="Typo.caption">Date Released</MudText>
                <MudDatePicker Editable="true" @bind-Date="obj.AssignedDateReleased" Mask="@(new DateMask("MM/dd/yyyy"))" DateFormat="MM/dd/yyyy" Variant="Variant.Outlined" Margin="Margin.Dense" />
            </div>
        }
        else
        {
            <div class="flex-grow-1">
                <MudText Align="Align.Start" Style="color: #6A707D;" Typo="Typo.caption">Division</MudText>
                <MudSelect @bind-Value="divid" Variant="Variant.Outlined" Margin="Margin.Dense">
                    @foreach (var sec in DIVISION)
                    {
                        <MudSelectItem Value="@sec.Id">@sec.Name</MudSelectItem>
                    }
                </MudSelect>
            </div>
            <div class="flex-grow-1">
                <MudText Align="Align.Start" Style="color: #6A707D;" Typo="Typo.caption">Department</MudText>
                <MudSelect @bind-Value="deptid" Variant="Variant.Outlined" Margin="Margin.Dense">
                    @foreach (var sec in DEPARTMENT.Where(e => e.DivisionId == divid))
                    {
                        <MudSelectItem Value="@sec.Id">@sec.Name</MudSelectItem>
                    }
                </MudSelect>
            </div>
            <div class="flex-grow-1">
                <MudText Align="Align.Start" Style="color: #6A707D;" Typo="Typo.caption">Employee</MudText>
                <MudSelect @bind-Value="empid" Variant="Variant.Outlined" Margin="Margin.Dense">
                    @foreach (var sec in EMPLOYEE.Where(e => e.DivisionId == divid && e.DepartmentId == deptid && e.StatusId == 1))
                    {
                        <MudSelectItem Value="@sec.Id">@sec.FirstName @sec.LastName</MudSelectItem>
                    }
                </MudSelect>
            </div>
            <div class="flex-grow-1">
                <MudText Align="Align.Start" Style="color: #6A707D;" Typo="Typo.caption">Date Released</MudText>
                <MudDatePicker Editable="true" @bind-Date="obj.AssignedDateReleased" Mask="@(new DateMask("MM/dd/yyyy"))" DateFormat="MM/dd/yyyy" Variant="Variant.Outlined" Margin="Margin.Dense" />
            </div>
        }
        <div class="d-flex justify-content-center">
            <button type="button" class="btn btn-save" @onclick="SaveAssignEmp">Save</button>
        </div>
    </div>
</MudDrawer>

<MudDrawer @bind-Open="@assignReturnPanelOpen" Width="500px" Height="100%" Anchor="@anchor" Elevation="1" Variant="@DrawerVariant.Temporary" Style=" margin: 10px;">
    <div class="d-flex flex-column gap-2 drawerdetails">
        <span>Return Asset</span>
        <div class="flex-grow-1">
            <MudText Align="Align.Start" Style="color: #6A707D;" Typo="Typo.caption">Date Returned</MudText>
            <MudDatePicker Editable="true" @bind-Date="assetHistoryObj.EndDate" Mask="@(new DateMask("MM/dd/yyyy"))" DateFormat="MM/dd/yyyy" Variant="Variant.Outlined" Margin="Margin.Dense" />
        </div>
        <div class="d-flex justify-content-center">
            <button type="button" class="btn btn-save" @onclick="SaveAssignDateReturned">Save</button>
        </div>
    </div>
</MudDrawer>

<MudDrawer @bind-Open="@mtsChkPanelOpen" Width="500px" Height="100%" Anchor="@anchor" Elevation="1" Variant="@DrawerVariant.Temporary" Style=" margin: 10px;">
    <div class="d-flex flex-column gap-2 drawerdetails">
        <span>Maintenance</span>
        <div class="flex-grow-1">
            <MudText Align="Align.Start" Style="color: #6A707D;" Typo="Typo.caption">Last Checked On</MudText>
            <MudDatePicker Editable="true" @bind-Date="lastchkObj.LastCheckDate" Mask="@(new DateMask("MM/dd/yyyy"))" DateFormat="MM/dd/yyyy" Variant="Variant.Outlined" Margin="Margin.Dense" />
        </div>
        <div class="flex-grow-1">
            <MudText Align="Align.Start" Style="color: #6A707D;" Typo="Typo.caption">Remarks</MudText>
            <MudTextField @bind-Value="lastchkObj.Remarks" Variant="Variant.Outlined" Margin="Margin.Dense" Lines="2" />
        </div>
        <div class="d-flex justify-content-center">
            <button type="button" class="btn btn-save" @onclick="SaveLastChkDate">Save</button>
        </div>
    </div>
</MudDrawer>


<script>
    $(document).ready(function () {
        $(document).on('click', '.ellipsis-clickable', function () {
            var $this = $(this);
            var remarks = $this.data('remarks');
            var maxLength = $this.data('maxLength');
            var currentText = $this.text();

            if (currentText === remarks) {
                // Text is already full, truncate it
                $this.text(truncateString(remarks, maxLength));
            } else {
                // Text is truncated, display full remarks
                $this.text(remarks);
            }
        });

        function truncateString(value, maxLength) {
            return value.length <= maxLength ? value : value.substring(0, maxLength) + "...";
        }
    });

    $(document).ready(function () {
        $(document).on('click', '.textsss', function () {
            console.log("yawa");
            $('#myModal').css("display", "block");
            $('#myModal').css('z-index', 999999999);
            $('#img01').attr('src', $(this).parentsUntil("imgassetdiv").children(".imgasset").attr('src'));
            $('#caption').text($(this).parentsUntil("imgassetdiv").children(".imgasset").attr('alt'));
        });

        $(document).on('click', '.imgasset', function () {
            console.log("yawa");
            $('#myModal').css("display", "block");
            $('#myModal').css('z-index', 999999999);
            $('#img01').attr('src', $(this).attr('src'));
            $('#caption').text($(this).attr('alt'));
        });

        $(document).on('click', '#closemodalimg', function () {
            $('#myModal').css("display", "none");
        });

        $(document).keydown(function (event) {
            if (event.keyCode == 27) {
                $('#myModal').css("display", "none");
            }
        });
    });
</script>