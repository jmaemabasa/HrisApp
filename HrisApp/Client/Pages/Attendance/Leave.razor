@page "/leave"
@inject ILeaveService LeaveService
<PageTitle>Leave Management</PageTitle>


<div class="mb-5">
    <div class="d-flex flex-row mt-5 justify-content-between align-items-center">
        <span style="font-size: x-large;font-weight: 600;color: #424242;">Leave Management</span>
        <AuthorizeView Roles="HR, System Administrator">
            <Authorized>
                    <MudButton Variant="Variant.Filled" Size="Size.Medium" StartIcon="@Icons.Material.Rounded.Add" Class="btnadd"> Leave Type</MudButton>
            </Authorized>
        </AuthorizeView>
    </div>
</div>

<div class="box w-auto">
    @if (_leaveTypesList == null || _leaveTypesList.Count == 0)
    {
        <MudProgressLinear Color="Color.Secondary" Indeterminate="true" Class="my-7" />
        <MudSkeleton SkeletonType="SkeletonType.Rectangle" Height="auto" />
        <MudCardContent>
            <MudSkeleton Width="30%" Height="42px;" />
            <MudSkeleton Width="80%" />
            <MudSkeleton Width="100%" />
        </MudCardContent>
        <MudCardActions>
            <MudSkeleton Width="64px" Height="40px" Class="ml-2" />
            <MudSkeleton Width="105px" Height="40px" Class="ml-3" />
        </MudCardActions>
        <MudOverlay Visible="isVisible" DarkBackground="true" Absolute="true">
            <MudProgressCircular Color="Color.Secondary" Indeterminate="true" />
        </MudOverlay>
    }
    else
    {
        <MudTable Class="stable d-flex justify-content-between align-content-between flex-column h-100" Items="_leaveTypesList" Context="obj" SortLabel="Sort By" FixedHeader="true" Elevation="0" HorizontalScrollbar="true" Dense="true" Hover="true" Bordered="false" Striped="true" @bind-SelectedItem="selectedItem1">
            <HeaderContent>
                <MudTh Class="" Style="background: #e9ecef; font-weight: bold; font-size: 16px;">Name</MudTh>
                <MudTh Class="" Style="background: #e9ecef; font-weight: bold; font-size: 16px;">Statistical Rule</MudTh>
                <MudTh Class="" Style="background: #e9ecef; font-weight: bold; font-size: 16px;">Action</MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd DataLabel="">@obj.Name</MudTd>
                <MudTd DataLabel="">@obj.Unit @obj.Description</MudTd>
                <MudTd>
                    <AuthorizeView Roles="System Administrator">
                        <Authorized>
                            <MudTooltip Text="Update">
                                <MudIconButton Class="btnedit" Icon="@Icons.Material.Rounded.Edit" aria-label="Edit"></MudIconButton>
                            </MudTooltip>
                        </Authorized>
                        <NotAuthorized>
                            <MudIconButton Disabled Class="btnedit" Icon="@Icons.Material.Rounded.Edit" aria-label="Edit"></MudIconButton>
                         </NotAuthorized>
                     </AuthorizeView>
                 </MudTd>
             </RowTemplate>
             <PagerContent>
                 <MudTablePager PageSizeOptions="new int[] { 10, 25, int.MaxValue }" InfoFormat="@($"Right {infoFormat}")" HorizontalAlignment="HorizontalAlignment.Right" />
             </PagerContent>
         </MudTable>
    }
</div>
@code {
    public List<LeaveTypesT> _leaveTypesList = new();
    private LeaveTypesT selectedItem1 = null;
    private string infoFormat = "{first_item}-{last_item} of {all_items}";

    protected override async Task OnInitializedAsync()
    {
        await LeaveService.GetLeave();

        _leaveTypesList = LeaveService.LeaveTypesTs;
    }

    private bool isVisible;
    public async void OpenOverlay()
    {
        isVisible = true;
        await Task.Delay(3000);
        isVisible = false;
        StateHasChanged();
    }
}
