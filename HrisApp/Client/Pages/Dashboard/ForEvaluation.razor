@page "/evaluation"
@inject IEmployeeService EmployeeService
@inject IForEvalService ForEvalService
@inject NavigationManager NavManager
@inject IJSRuntime JSRuntime

@attribute [Authorize(Roles = "System Administrator, HR")]

<PageTitle>Performance Evaluation</PageTitle>


<div class="mb-5">
    <div class="d-flex flex-row mt-5 justify-content-between align-items-center">
        <div class="d-flex align-items-center">    
            <MudIcon Icon="@Icons.Material.TwoTone.ContentPasteSearch" Style="font-size: 2.2em;margin-right: 10px;color: #E38D0F;" />
            <span style="font-size: x-large;font-weight: 600;color: #424242;">Employees For Performance Evaluation : <span style="color: #E38D0F">@_totalCountEval</span></span>
        </div>
        <span style="font-size: x-large; color: #424242;">@DateTime.Now.ToString("dddd, dd MMMM yyyy")</span>
    </div>
</div>

<div class="box w-auto">
    <MudGrid>
        <MudItem xs="12">
            <div>
                <fieldset class="p-3">
                    <legend class="float-none w-auto p-2 mb-0">For Performance Evaluation | 1st Month</legend>
                    @if (EmpFirstEval == null || EmpFirstEval.Count == 0)
                    {
                        <span class="evaltitle">No employees for performance evaluation.</span>
                    }
                    else
                    {
                        <MudTable Class="stable" Items="@EmpFirstEval" Context="employe" SortLabel="Sort By" FixedHeader="true" Elevation="0" Height="193px" HorizontalScrollbar="true" Dense="true" Hover="true" Bordered="false" Striped="true" Virtualize="true">
                            <HeaderContent>
                                <MudTh Class="col-2" Style="background: #e9ecef; font-weight: bold; font-size: 14px;">Full Name</MudTh>
                                <MudTh Class="col-2" Style="background: #e9ecef; font-weight: bold; font-size: 14px;">ID No</MudTh>
                                <MudTh Class="col-3" Style="background: #e9ecef; font-weight: bold; font-size: 14px;">Division</MudTh>
                                <MudTh Class="col-3" Style="background: #e9ecef; font-weight: bold; font-size: 14px;">Department</MudTh>
                                <MudTh Style="background: #e9ecef; font-weight: bold; font-size: 14px;">Date Hired</MudTh>
                                <MudTh Style="background: #e9ecef; font-weight: bold; font-size: 14px; text-align: center">Status</MudTh>
                            </HeaderContent>
                            <RowTemplate>
                                <MudTd Class="cursor-pointer" @onclick="(() => NavToEmpD(employe.Id))" DataLabel="Full Name">
                                    <EmployeeNamePosition verify="@employe.Verify_Id"/>
                                </MudTd>
                                <MudTd Class="cursor-pointer" @onclick="(() => NavToEmpD(employe.Id))" DataLabel="ID No."><EmployeeIDNo verify="@employe.Verify_Id"/> </MudTd>
                                <MudTd Class="cursor-pointer" @onclick="(() => NavToEmpD(employe.Id))" DataLabel="Division"><EmployeeDivision verify="@employe.Verify_Id"/> </MudTd>
                                <MudTd Class="cursor-pointer" @onclick="(() => NavToEmpD(employe.Id))" DataLabel="Department"><EmployeeDepartment verify="@employe.Verify_Id"/> </MudTd>
                                <MudTd Class="cursor-pointer" @onclick="(() => NavToEmpD(employe.Id))" DataLabel="Date Hired">@employe.DateHired.ToString("MM/dd/yyyy")</MudTd>
                                <MudTd Style="text-align: center" Class="cursor-pointer" @onclick="(() => NavToEmpD(employe.Id))" DataLabel="Status">
                                    @if (employe.Eval1Status != "Done")
                                    {
                                        <MudChip Class="chipPending">@employe.Eval1Status</MudChip>
                                    }
                                    else
                                    {
                                        <MudChip Class="chipDone">@employe.Eval1Status</MudChip>
                                    }
                                </MudTd>
                            </RowTemplate>
                        </MudTable>
                    }
                </fieldset>
            </div>
        </MudItem>
        <MudItem xs="12">
            <div>
                <fieldset class="p-3">
                    <legend class="float-none w-auto p-2 mb-0">For Performance Evaluation | 2nd Month</legend>
                    @if (EmpSecondEval == null || EmpSecondEval.Count == 0)
                    {
                        <span class="evaltitle">No employees for performance evaluation.</span>
                    }
                    else
                    {
                        <MudTable Class="stable" Items="@EmpSecondEval" Context="employe" SortLabel="Sort By" FixedHeader="true" Elevation="0" Height="193px" HorizontalScrollbar="true" Dense="true" Hover="true" Bordered="false" Striped="true" Virtualize="true">
                            <HeaderContent>
                                <MudTh Class="col-2" Style="background: #e9ecef; font-weight: bold; font-size: 14px;">Full Name</MudTh>
                                <MudTh Class="col-2" Style="background: #e9ecef; font-weight: bold; font-size: 14px;">ID No</MudTh>
                                <MudTh Class="col-3" Style="background: #e9ecef; font-weight: bold; font-size: 14px;">Division</MudTh>
                                <MudTh Class="col-3" Style="background: #e9ecef; font-weight: bold; font-size: 14px;">Department</MudTh>
                                <MudTh Style="background: #e9ecef; font-weight: bold; font-size: 14px;">Date Hired</MudTh>
                                <MudTh Style="background: #e9ecef; font-weight: bold; font-size: 14px; text-align: center">Status</MudTh>
                            </HeaderContent>
                            <RowTemplate>
                                <MudTd Class="cursor-pointer" @onclick="(() => NavToEmpD(employe.Id))" DataLabel="Full Name">
                                    <EmployeeNamePosition verify="@employe.Verify_Id" />
                                </MudTd>
                                <MudTd Class="cursor-pointer" @onclick="(() => NavToEmpD(employe.Id))" DataLabel="ID No."><EmployeeIDNo verify="@employe.Verify_Id" /> </MudTd>
                                <MudTd Class="cursor-pointer" @onclick="(() => NavToEmpD(employe.Id))" DataLabel="Division"><EmployeeDivision verify="@employe.Verify_Id" /> </MudTd>
                                <MudTd Class="cursor-pointer" @onclick="(() => NavToEmpD(employe.Id))" DataLabel="Department"><EmployeeDepartment verify="@employe.Verify_Id" /> </MudTd>
                                <MudTd Class="cursor-pointer" @onclick="(() => NavToEmpD(employe.Id))" DataLabel="Date Hired">@employe.DateHired.ToString("MM/dd/yyyy")</MudTd>
                                <MudTd Style="text-align: center" Class="cursor-pointer" @onclick="(() => NavToEmpD(employe.Id))" DataLabel="Status">
                                    @if (employe.Eval2Status != "Done")
                                    {
                                        <MudChip Class="chipPending">@employe.Eval2Status</MudChip>
                                    }
                                    else
                                    {
                                        <MudChip Class="chipDone">@employe.Eval2Status</MudChip>
                                    }
                                </MudTd>
                            </RowTemplate>
                        </MudTable>
                    }
                </fieldset>
            </div>
        </MudItem>
        <MudItem xs="12">
            <div>
                <fieldset class="p-3">
                    <legend class="float-none w-auto p-2 mb-0">For Performance Evaluation | 3rd Month</legend>
                    @if (EmpThirdEval == null || EmpThirdEval.Count == 0)
                    {
                        <span class="evaltitle">No employees for performance evaluation.</span>
                    }
                    else
                    {
                        <MudTable Class="stable" Items="@EmpThirdEval" Context="employe" SortLabel="Sort By" FixedHeader="true" Elevation="0" Height="193px" HorizontalScrollbar="true" Dense="true" Hover="true" Bordered="false" Striped="true" Virtualize="true">
                            <HeaderContent>
                                <MudTh Class="col-2" Style="background: #e9ecef; font-weight: bold; font-size: 14px;">Full Name</MudTh>
                                <MudTh Class="col-2" Style="background: #e9ecef; font-weight: bold; font-size: 14px;">ID No</MudTh>
                                <MudTh Class="col-3" Style="background: #e9ecef; font-weight: bold; font-size: 14px;">Division</MudTh>
                                <MudTh Class="col-3" Style="background: #e9ecef; font-weight: bold; font-size: 14px;">Department</MudTh>
                                <MudTh Style="background: #e9ecef; font-weight: bold; font-size: 14px;">Date Hired</MudTh>
                                <MudTh Style="background: #e9ecef; font-weight: bold; font-size: 14px; text-align: center">Status</MudTh>
                            </HeaderContent>
                            <RowTemplate>
                                <MudTd Class="cursor-pointer" @onclick="(() => NavToEmpD(employe.Id))" DataLabel="Full Name">
                                    <EmployeeNamePosition verify="@employe.Verify_Id" />
                                </MudTd>
                                <MudTd Class="cursor-pointer" @onclick="(() => NavToEmpD(employe.Id))" DataLabel="ID No."><EmployeeIDNo verify="@employe.Verify_Id" /> </MudTd>
                                <MudTd Class="cursor-pointer" @onclick="(() => NavToEmpD(employe.Id))" DataLabel="Division"><EmployeeDivision verify="@employe.Verify_Id" /> </MudTd>
                                <MudTd Class="cursor-pointer" @onclick="(() => NavToEmpD(employe.Id))" DataLabel="Department"><EmployeeDepartment verify="@employe.Verify_Id" /> </MudTd>
                                <MudTd Class="cursor-pointer" @onclick="(() => NavToEmpD(employe.Id))" DataLabel="Date Hired">@employe.DateHired.ToString("MM/dd/yyyy")</MudTd>
                                <MudTd Style="text-align: center" Class="cursor-pointer" @onclick="(() => NavToEmpD(employe.Id))" DataLabel="Status">
                                    @if (employe.Eval3Status != "Done")
                                    {
                                        <MudChip Class="chipPending">@employe.Eval3Status</MudChip>
                                    }
                                    else
                                    {
                                        <MudChip Class="chipDone">@employe.Eval3Status</MudChip>
                                    }
                                </MudTd>
                            </RowTemplate>
                        </MudTable>
                    }
                </fieldset>
            </div>
        </MudItem>
        <MudItem xs="12">
            <div>
                <fieldset class="p-3">
                    <legend class="float-none w-auto p-2 mb-0">For Performance Evaluation | 4th Month</legend>
                    @if (EmpFourthEval == null || EmpFourthEval.Count == 0)
                    {
                        <span class="evaltitle">No employees for performance evaluation.</span>
                    }
                    else
                    {
                        <MudTable Class="stable" Items="@EmpFourthEval" Context="employe" SortLabel="Sort By" FixedHeader="true" Elevation="0" Height="193px" HorizontalScrollbar="true" Dense="true" Hover="true" Bordered="false" Striped="true" Virtualize="true">
                            <HeaderContent>
                                <MudTh Class="col-2" Style="background: #e9ecef; font-weight: bold; font-size: 14px;">Full Name</MudTh>
                                <MudTh Class="col-2" Style="background: #e9ecef; font-weight: bold; font-size: 14px;">ID No</MudTh>
                                <MudTh Class="col-3" Style="background: #e9ecef; font-weight: bold; font-size: 14px;">Division</MudTh>
                                <MudTh Class="col-3" Style="background: #e9ecef; font-weight: bold; font-size: 14px;">Department</MudTh>
                                <MudTh Style="background: #e9ecef; font-weight: bold; font-size: 14px;">Date Hired</MudTh>
                                <MudTh Style="background: #e9ecef; font-weight: bold; font-size: 14px; text-align: center">Status</MudTh>
                            </HeaderContent>
                            <RowTemplate>
                                <MudTd Class="cursor-pointer" @onclick="(() => NavToEmpD(employe.Id))" DataLabel="Full Name">
                                    <EmployeeNamePosition verify="@employe.Verify_Id" />
                                </MudTd>
                                <MudTd Class="cursor-pointer" @onclick="(() => NavToEmpD(employe.Id))" DataLabel="ID No."><EmployeeIDNo verify="@employe.Verify_Id" /> </MudTd>
                                <MudTd Class="cursor-pointer" @onclick="(() => NavToEmpD(employe.Id))" DataLabel="Division"><EmployeeDivision verify="@employe.Verify_Id" /> </MudTd>
                                <MudTd Class="cursor-pointer" @onclick="(() => NavToEmpD(employe.Id))" DataLabel="Department"><EmployeeDepartment verify="@employe.Verify_Id" /> </MudTd>
                                <MudTd Class="cursor-pointer" @onclick="(() => NavToEmpD(employe.Id))" DataLabel="Date Hired">@employe.DateHired.ToString("MM/dd/yyyy")</MudTd>
                                <MudTd Style="text-align: center" Class="cursor-pointer" @onclick="(() => NavToEmpD(employe.Id))" DataLabel="Status">
                                    @if (employe.Eval4Status != "Done")
                                    {
                                        <MudChip Class="chipPending">@employe.Eval4Status</MudChip>
                                    }
                                    else
                                    {
                                        <MudChip Class="chipDone">@employe.Eval4Status</MudChip>
                                    }
                                </MudTd>
                            </RowTemplate>
                        </MudTable>
                    }
                </fieldset>
            </div>
        </MudItem>
        <MudItem xs="12">
            <div>
                <fieldset class="p-3">
                    <legend class="float-none w-auto p-2 mb-0">For Performance Evaluation | 5th Month</legend>
                    @if (EmpFifthEval == null || EmpFifthEval.Count == 0)
                    {
                        <span class="evaltitle">No employees for performance evaluation.</span>
                    }
                    else
                    {
                        <MudTable Class="stable" Items="@EmpFifthEval" Context="employe" SortLabel="Sort By" FixedHeader="true" Elevation="0" Height="193px" HorizontalScrollbar="true" Dense="true" Hover="true" Bordered="false" Striped="true" Virtualize="true">
                            <HeaderContent>
                                <MudTh Class="col-2" Style="background: #e9ecef; font-weight: bold; font-size: 14px;">Full Name</MudTh>
                                <MudTh Class="col-2" Style="background: #e9ecef; font-weight: bold; font-size: 14px;">ID No</MudTh>
                                <MudTh Class="col-3" Style="background: #e9ecef; font-weight: bold; font-size: 14px;">Division</MudTh>
                                <MudTh Class="col-3" Style="background: #e9ecef; font-weight: bold; font-size: 14px;">Department</MudTh>
                                <MudTh Style="background: #e9ecef; font-weight: bold; font-size: 14px;">Date Hired</MudTh>
                                <MudTh Style="background: #e9ecef; font-weight: bold; font-size: 14px; text-align: center">Status</MudTh>
                            </HeaderContent>
                            <RowTemplate>
                                <MudTd Class="cursor-pointer" @onclick="(() => NavToEmpD(employe.Id))" DataLabel="Full Name">
                                    <EmployeeNamePosition verify="@employe.Verify_Id" />
                                </MudTd>
                                <MudTd Class="cursor-pointer" @onclick="(() => NavToEmpD(employe.Id))" DataLabel="ID No."><EmployeeIDNo verify="@employe.Verify_Id" /> </MudTd>
                                <MudTd Class="cursor-pointer" @onclick="(() => NavToEmpD(employe.Id))" DataLabel="Division"><EmployeeDivision verify="@employe.Verify_Id" /> </MudTd>
                                <MudTd Class="cursor-pointer" @onclick="(() => NavToEmpD(employe.Id))" DataLabel="Department"><EmployeeDepartment verify="@employe.Verify_Id" /> </MudTd>
                                <MudTd Class="cursor-pointer" @onclick="(() => NavToEmpD(employe.Id))" DataLabel="Date Hired">@employe.DateHired.ToString("MM/dd/yyyy")</MudTd>
                                <MudTd Style="text-align: center" Class="cursor-pointer" @onclick="(() => NavToEmpD(employe.Id))" DataLabel="Status">
                                    @if (employe.Eval5Status != "Done")
                                    {
                                        <MudChip Class="chipPending">@employe.Eval5Status</MudChip>
                                    }
                                    else
                                    {
                                        <MudChip Class="chipDone">@employe.Eval5Status</MudChip>
                                    }
                                </MudTd>
                            </RowTemplate>
                        </MudTable>
                    }
                </fieldset>
            </div>
        </MudItem>
        <MudItem xs="12">
            <div>
                <fieldset class="p-3">
                    <legend class="float-none w-auto p-2 mb-0">For Performance Evaluation | 6th Month</legend>
                    @if (EmpSixEval == null || EmpSixEval.Count == 0)
                    {
                        <span class="evaltitle">No employees for performance evaluation.</span>
                    }
                    else
                    {
                        <MudTable Class="stable" Items="@EmpSixEval" Context="employe" SortLabel="Sort By" FixedHeader="true" Elevation="0" Height="193px" HorizontalScrollbar="true" Dense="true" Hover="true" Bordered="false" Striped="true" Virtualize="true">
                            <HeaderContent>
                                <MudTh Class="col-2" Style="background: #e9ecef; font-weight: bold; font-size: 14px;">Full Name</MudTh>
                                <MudTh Class="col-2" Style="background: #e9ecef; font-weight: bold; font-size: 14px;">ID No</MudTh>
                                <MudTh Class="col-3" Style="background: #e9ecef; font-weight: bold; font-size: 14px;">Division</MudTh>
                                <MudTh Class="col-3" Style="background: #e9ecef; font-weight: bold; font-size: 14px;">Department</MudTh>
                                <MudTh Style="background: #e9ecef; font-weight: bold; font-size: 14px;">Date Hired</MudTh>
                                <MudTh Style="background: #e9ecef; font-weight: bold; font-size: 14px; text-align: center">Status</MudTh>
                            </HeaderContent>
                            <RowTemplate>
                                <MudTd Class="cursor-pointer" @onclick="(() => NavToEmpD(employe.Id))" DataLabel="Full Name">
                                    <EmployeeNamePosition verify="@employe.Verify_Id" />
                                </MudTd>
                                <MudTd Class="cursor-pointer" @onclick="(() => NavToEmpD(employe.Id))" DataLabel="ID No."><EmployeeIDNo verify="@employe.Verify_Id" /> </MudTd>
                                <MudTd Class="cursor-pointer" @onclick="(() => NavToEmpD(employe.Id))" DataLabel="Division"><EmployeeDivision verify="@employe.Verify_Id" /> </MudTd>
                                <MudTd Class="cursor-pointer" @onclick="(() => NavToEmpD(employe.Id))" DataLabel="Department"><EmployeeDepartment verify="@employe.Verify_Id" /> </MudTd>
                                <MudTd Class="cursor-pointer" @onclick="(() => NavToEmpD(employe.Id))" DataLabel="Date Hired">@employe.DateHired.ToString("MM/dd/yyyy")</MudTd>
                                <MudTd Class="cursor-pointer" @onclick="(() => NavToEmpD(employe.Id))" DataLabel="Status">
                                    @if (employe.Eval6Status != "Done")
                                    {
                                        <MudChip Class="chipPending">@employe.Eval6Status</MudChip>
                                    }
                                    else
                                    {
                                        <MudChip Class="chipDone">@employe.Eval6Status</MudChip>
                                    }
                                </MudTd>
                            </RowTemplate>
                        </MudTable>
                    }
                </fieldset>
            </div>
        </MudItem>
    </MudGrid>

</div>

@code {
    private string _totalCountEval = "0";
    // public List<EmployeeT> EmpFirstEval = new(); //first
    // public List<EmployeeT> EmpSecondEval = new(); //second
    // public List<EmployeeT> EmpThirdEval = new(); //third
    // public List<EmployeeT> EmpFourthEval = new(); //fourth
    // public List<EmployeeT> EmpFifthEval = new(); //fifth
    // public List<EmployeeT> EmpSixEval = new(); //sixth

    public List<Emp_EvaluationT> EmpFirstEval = new(); //first
    public List<Emp_EvaluationT> EmpSecondEval = new(); //second
    public List<Emp_EvaluationT> EmpThirdEval = new(); //third
    public List<Emp_EvaluationT> EmpFourthEval = new(); //fourth
    public List<Emp_EvaluationT> EmpFifthEval = new(); //fifth
    public List<Emp_EvaluationT> EmpSixEval = new(); //sixth

    string finalValStatus ="";

    protected override async Task OnInitializedAsync()
    {
        await ForEvalService.GetForEval();
        await EmployeeService.GetEmployee();

        // EmpFirstEval = EmployeeService.EmployeeTs.Where(e => e.DateHired >= DateTime.Now.AddMonths(-2)).ToList();
        // EmpSecondEval = EmployeeService.EmployeeTs.Where(e => e.DateHired >= DateTime.Now.AddMonths(-3) && e.DateHired <= DateTime.Now.AddMonths(-2)).ToList();
        // EmpThirdEval = EmployeeService.EmployeeTs.Where(e => e.DateHired >= DateTime.Now.AddMonths(-4) && e.DateHired <= DateTime.Now.AddMonths(-3)).ToList().ToList();
        // EmpFourthEval = EmployeeService.EmployeeTs.Where(e => e.DateHired >= DateTime.Now.AddMonths(-5) && e.DateHired <= DateTime.Now.AddMonths(-4)).ToList().ToList();
        // EmpFifthEval = EmployeeService.EmployeeTs.Where(e => e.DateHired >= DateTime.Now.AddMonths(-6) && e.DateHired <= DateTime.Now.AddMonths(-5)).ToList().ToList();
        // EmpSixEval = EmployeeService.EmployeeTs.Where(e => e.DateHired >= DateTime.Now.AddMonths(-7) && e.DateHired <= DateTime.Now.AddMonths(-6)).ToList().ToList();

        Console.WriteLine("list count" + ForEvalService.Emp_EvaluationTs.Count());
        foreach (var item in ForEvalService.Emp_EvaluationTs.Where(e => e.EvalStatus != "Done"))
        {
            int calculateMonth = 0;
            int totalMonth = 12;
            DateTime todayDate = DateTime.Now;

            calculateMonth = todayDate.Month - item.DateHired.Month;

            if (calculateMonth < 0)
            {
                item.TimesEvaluate += 1;
                calculateMonth += totalMonth;
                Console.WriteLine("calmonth " + calculateMonth);

            }
            else if (calculateMonth > 0)
            {
                item.TimesEvaluate += 1;
                Console.WriteLine("calmonth " + calculateMonth);
            }

            switch (calculateMonth)
            {
                case 0:

                case 1:
                    if (item.TimesEvaluate > 1)
                    {
                        EmpFirstEval.Add(item);
                    }
                    else
                    {
                        EmpFirstEval.Add(item);
                    }
                    break;

                case 2:
                    if (item.TimesEvaluate > 1)
                    {
                        EmpSecondEval.Add(item);
                    }
                    else
                    {
                        EmpSecondEval.Add(item);
                    }
                    break;
                case 3:
                    if (item.TimesEvaluate > 1)
                    {

                        EmpThirdEval.Add(item);
                    }
                    else
                    {
                        EmpThirdEval.Add(item);
                    }
                    break;
                case 4:
                    if (item.TimesEvaluate > 1)
                    {

                        EmpFourthEval.Add(item);
                    }
                    else
                    {
                        EmpFourthEval.Add(item);
                    }
                    break;
                case 5:
                    if (item.TimesEvaluate > 1)
                    {
                        EmpFifthEval.Add(item);
                    }
                    else
                    {
                        EmpFifthEval.Add(item);
                    }
                    break;
                case 6:
                    if (item.TimesEvaluate > 1)
                    {
                        EmpSixEval.Add(item);}
                    else
                    {
                        EmpSixEval.Add(item);
                    }
                    break;
                default:
                    break;

            }
        }

        _totalCountEval = ForEvalService.Emp_EvaluationTs
            .Count(e => e.EvalStatus != "Done")
            .ToString();
    }

    public async Task<string> SetValStatus(string verifyId) {

        return await ForEvalService.GetStatusPerEmp(verifyId);
    }

    public void NavToEmpD(int id) { 
        NavManager.NavigateTo($"/employee/edit/{id}"); 
    }

    public string CapitalizeFirstLetter(string input)
    {
        if (string.IsNullOrEmpty(input))
        {
            return input;
        }

        return char.ToUpper(input[0]) + input[1..];
    }
}
