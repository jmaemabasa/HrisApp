@page "/vacancy"
@inject IEmployeeService EmployeeService
@inject IDepartmentService DepartmentService
@inject IPositionService PositionService
@inject ISectionService SectionService
<PageTitle>Vacancies</PageTitle>

<div class="mb-5">
    <div class="d-flex flex-row mt-5 justify-content-between align-items-center">
        <span style="font-size: x-large;font-weight: 600;color: #424242;">Vacancies as of Today : <span style="color: #E38D0F">@_totalVacancy</span></span>
        <span style="font-size: x-large; color: #424242;">@DateTime.Now.ToString("dddd, dd MMMM yyyy")</span>
    </div>
</div>

<div class="box w-auto">

    <MudGrid Justify="Justify.FlexStart" Spacing="5">
        @try
        {
            @foreach (var department in DepartmentService.DepartmentTs)
            {
                var departmentVacancies = allPositions
                .Where(position => position.DepartmentId == department.Id)
                .Select(position =>
                {
                    var vacancy = position.Plantilla - positionCounts[position.Id];
                    return vacancy;
                })
                .Sum();

                if (departmentVacancies > 0)
                {
                    <MudItem xs="12" sm="3">
                        <MudCard Class="carddep" Elevation="0">
                            <MudCardContent Class="carddepcontent">
                                <div class="d-flex justify-content-center gap-2" style="background-color: #F5F5FA;position: sticky;top: 0;margin-bottom: 5px;">
                                    <div class="d-flex align-items-start gap-2" style="padding: 7px 0 10px 0;">
                                        <MudIcon Icon="@Icons.Material.TwoTone.Diversity3" Style="font-size: 1.4rem; color: #E38D0F" />
                                        <span style="color: #424242; font-size: 16px; font-weight: bold">@department.Name</span>
                                    </div>
                                </div>
                                <div>
                                    @{
                                        var departmentHasSection = SectionService.SectionTs.Any(s => s.DepartmentId == department.Id);
                                    }
                                    @if (departmentHasSection)
                                    {
                                        @foreach (var position in allPositions.Where(p => p.DepartmentId == department.Id && p.SectionId == 0))
                                        {
                                            var vacancy = position.Plantilla - positionCounts[position.Id];

                                            if (vacancy > 0)
                                            {
                                                <div class="divsingledetails d-flex justify-content-between mb-2">
                                                    <MudText Class="txt" Align="Align.Start" Typo="Typo.caption">@position.Name</MudText>
                                                    <div class="d-flex w-25 justify-content-between">
                                                        <MudText Class="txt" Align="Align.Start" Typo="Typo.caption">:</MudText>
                                                        <MudText Class="txt" Style="color: #292727; font-weight:bold;" Typo="Typo.body2">@vacancy</MudText>
                                                    </div>
                                                </div>
                                            }
                                        }
                                        var sections = SectionService.SectionTs.Where(s => s.DepartmentId == department.Id);
                                        @if (sections.Any())
                                        {
                                            @foreach (var sect in sections)
                                            {
                                                var sectionVacancies = allPositions
                                                .Where(s => s.DepartmentId == department.Id && s.SectionId == sect.Id)
                                                .Select(s =>
                                                {
                                                    var vacancy = s.Plantilla - positionCounts[s.Id];
                                                    return vacancy;
                                                })
                                                .Sum();
                                                if (sectionVacancies > 0)
                                                {
                                                    <div class="d-flex align-items-center gap-2 mb-2">
                                                        <MudIcon Icon="@Icons.Material.TwoTone.Diversity2" Style="font-size: 1.2rem; color: #F1BC3A" />
                                                        <span style="font-size: 15px;">@sect.Name</span>
                                                    </div>
                                                    @foreach (var position in allPositions.Where(p => p.SectionId == sect.Id))
                                                    {
                                                        var vacancy = position.Plantilla - positionCounts[position.Id];

                                                        if (vacancy > 0)
                                                        {
                                                            <div class="divsingledetails d-flex justify-content-between mb-2 ms-3">
                                                                <MudText Class="txt" Align="Align.Start" Typo="Typo.caption">@position.Name</MudText>
                                                                <div class="d-flex w-25 justify-content-between">
                                                                    <MudText Class="txt" Align="Align.Start" Typo="Typo.caption">:</MudText>
                                                                    <MudText Class="txt" Style="color: #292727; font-weight:bold;" Typo="Typo.body2">@vacancy</MudText>
                                                                </div>
                                                            </div>
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                    else
                                    {
                                        @foreach (var position in allPositions.Where(p => p.DepartmentId == department.Id))
                                        {
                                            var vacancy = position.Plantilla - positionCounts[position.Id];

                                            if (vacancy > 0)
                                            {
                                                <div class="divsingledetails d-flex justify-content-between mb-2">
                                                    <MudText Class="txt" Align="Align.Start" Typo="Typo.caption">@position.Name</MudText>
                                                    <div class="d-flex w-25 justify-content-between">
                                                        <MudText Class="txt" Align="Align.Start" Typo="Typo.caption">:</MudText>
                                                        <MudText Class="txt" Style="color: #292727; font-weight:bold;" Typo="Typo.body2">@vacancy</MudText>
                                                    </div>
                                                </div>
                                            }
                                        }
                                    }
                                </div>
                            </MudCardContent>
                        </MudCard>
                    </MudItem>
                }
            }
        }
        catch (Exception)
        {
            Console.WriteLine("");
        }
    </MudGrid>


</div>
