@page "/employee/add"
@inject IDivisionService DivisionService
@inject IDepartmentService DepartmentService
@inject ISectionService SectionService
@inject IPositionService PositionService
@inject IAddressService AddressService
@inject IAreaService AreaService
@inject IEmployeeService EmployeeService
@inject IToastService _toastService
@inject IImageService ImageService
@inject IEducationService EducationService
@inject IPayrollService PayrollService
@inject ILicenseTrainingService LicenseTrainingService
@inject IEmploymentDateService EmploymentDateService
@inject IStaticService StaticService
@inject NavigationManager NavigationManager
@inject SweetAlertService Swal
@inject IToastService _toastService
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime
@inject GlobalConfigService GlobalConfigService
@inject AuditlogGlobal AuditlogGlobal

@* @attribute [Authorize(Roles = "HR")] *@
<PageTitle>Add Employee</PageTitle>
<div class="topnav d-flex justify-content-end align-items-center z-60">
    <MudButton OnClick="backbtn" Size="Size.Medium">Back</MudButton>
</div>
<div class="tabdiv">

    <MudTabs Elevation="0" Rounded="true" ApplyEffectsToContainer="true" PanelClass="pa-6" @ref="tabs" @bind-ActivePanelIndex="activeIndex" Centered=true >

        @* ====================================================================================  JOB  ==================================================================================== *@
        <MudTabPanel TabContent="tabHeader(0)">
            <MudGrid>                
                <MudItem xs="12" lg="2"  style="z-index: 99">
                    <span class="spantitle mb-3">Image</span>
                    @if (imgBase64 == "./images/addIconImage.png")
                    {
                        <MudFileUpload T="IBrowserFile" OnFilesChanged="uploadImage" Accept="image/*" capture Style="margin-top: 35px">
                            <ButtonTemplate>
                                <MudButton Class="@imguploadclass" DisableElevation HtmlTag="label" Variant="Variant.Outlined" for="@context">
                                    <div style="height: 240px; display: flex; justify-content: center; align-items: center; ">
                                        <MudImage Src="@imgBase64" Style="height: 100px; width: 100px; " />
                                    </div>
                                </MudButton>
                            </ButtonTemplate>
                         </MudFileUpload>
                    }
                    else
                    {
                        <MudFileUpload T="IBrowserFile" OnFilesChanged="uploadImage" Accept="image/*" capture Style="margin-top: 35px">
                            <ButtonTemplate>
                                <MudButton Class="w-100 btnimagewithimage" DisableElevation HtmlTag="label" for="@context">
                                     <div style="height: 240px; display: flex; justify-content: center; align-items: center;  border-radius: 20px; padding:10px 0 10px 0">
                                         <MudImage Src="@imgBase64" Style="height: 95%; width: auto; max-width:100%; border-radius: 20px; border: none; " />
                                     </div>
                                 </MudButton>
                             </ButtonTemplate>
                         </MudFileUpload>
                    }
                </MudItem>
                <EditForm Model="employee" OnValidSubmit="() => Activate(1)" class="d-flex flex-column flex-grow-1" style="margin-top: 13px;">
                    <DataAnnotationsValidator />
                
                    <MudItem xs="12" Class="paddingitem">
                        <span class="spantitle">Personal Information</span>
                        <MudCard Class="mdcard1 lfmargin" Elevation="0">
                            <MudCardContent>
                                <MudText Typo="Typo.body2">First Name</MudText>
                                <MudStack Row="true" Class="mb-2">
                                     <MudItem xs="12"><InputText class="txf1 w-100" @bind-Value="employee.FirstName" /></MudItem>
                                </MudStack>
                                <ValidationMessage For="@(() => employee.FirstName)" class="mb-2"/>  

                                <MudText Typo="Typo.body2">Middle Name</MudText>
                                <MudStack Row="true" Class="mb-2">
                                    <MudItem xs="12"><InputText Class="txf1 w-100" @bind-Value="employee.MiddleName" /></MudItem>
                                </MudStack>
                                <ValidationMessage For="@(() => employee.MiddleName)" class="mb-2"/>  

                                <MudText Typo="Typo.body2">Last Name</MudText>
                                <MudStack Row="true" Class="mb-2">
                                    <MudItem xs="12"><InputText Class="txf1 w-100" @bind-Value="employee.LastName" /></MudItem>
                                </MudStack>
                                <ValidationMessage For="@(() => employee.LastName)" class="mb-2"/>  

                                <MudText Typo="Typo.body2">Email</MudText>
                                <MudStack Row="true" Class="mb-2">
                                     <MudItem xs="12">
                                            <InputText Class="txf1 w-100" @bind-Value="employee.Email" />
                                    </MudItem>
                                </MudStack>
                                    <ValidationMessage For="@(() => employee.Email)" class="mb-2" />
                                </MudCardContent>
                        </MudCard>
                    </MudItem>
                        <MudItem xs="12" Class="mt-3 paddingitem" >
                        <span class="spantitle">Work Information</span>
                         <MudCard Class="mdcard1" Elevation="0">
                             <MudCardContent>
                                 <div class="d-flex flex-column flex-grow-1 mb-3">
                                     <div class="d-flex flex-wrap gap-lg-4 gap-sm-2">
                                         <div class="flex-grow-1">
                                             <MudText Typo="Typo.body2">Company ID No.</MudText>
                                             <InputText Class="txf1 w-100 mt-1" @bind-Value="employee.EmployeeNo" />
                                             <ValidationMessage For="@(() => employee.EmployeeNo)" class="mb-2" />
                                         </div>
                                         <div class="flex-grow-1">
                                             <MudText Typo="Typo.body2">Area of Assignment</MudText>
                                                <MudSelect Class="@slectClasss" @bind-Value="employee.AreaId" DisableUnderLine Margin="Margin.Dense">
                                                 <MudSelectItem Value=0 Disabled>---Select---</MudSelectItem>
                                                @foreach (var area in AreasL)
                                                {
                                                    <MudSelectItem Value="@area.Id">@area.Name</MudSelectItem>
                                                }
                                            </MudSelect>
                                                <ValidationMessage For="@(() => employee.AreaId)" class="mb-2" />
                                         </div>
                                        <div class="flex-grow-1">
                                            <MudText Typo="Typo.body2">Status</MudText>
                                            <MudSelect Class="@slectClasss" @bind-Value="employee.StatusId" DisableUnderLine Margin="Margin.Dense">
                                                 <MudSelectItem Value=0 Disabled>---Select---</MudSelectItem>
                                                @foreach (var status in StatusL.Where(s => s.Id == 1))
                                                {
                                                    <MudSelectItem Value="@status.Id">@status.Name</MudSelectItem>
                                                }
                                            </MudSelect>
                                             <ValidationMessage For="@(() => employee.StatusId)" class="mb-2" />
                                         </div>
                                     </div>
                                 </div>
                                <div class="d-flex flex-column flex-grow-1 mb-3">
                                        <div class="d-flex flex-wrap gap-lg-4 gap-sm-2 align-items-center">
                                            <div class="flex-grow-1">
                                                <MudText Typo="Typo.body2">Employment Status</MudText>
                                                <MudSelect Class="@slectClasss" @bind-Value="employee.EmploymentStatusId" DisableUnderLine Margin="Margin.Dense">
                                                     <MudSelectItem Value=0  Disabled >---Select---</MudSelectItem>
                                                     @foreach (var status in EmploymentStatusL)
                                                    {
                                                        <MudSelectItem Value="@status.Id">@status.Name</MudSelectItem>
                                                    }
                                                </MudSelect>
                                                 <ValidationMessage For="@(() => employee.EmploymentStatusId)" class="mb-2" />
                                            </div>
                                            @if (employee.EmploymentStatusId == 1)
                                            {
                                                <div class="flex-grow-1">
                                                <MudText Typo="Typo.body2">Date Hired (mm/dd/yyyy)</MudText>
                                                    <MudDatePicker Class="txf" DisableUnderLine Date="DateHired" DateChanged="HandleDateHiredChanged" Margin="Margin.Dense" />
                                                 </div>
                                                 <div class="flex-grow-1">
                                                     <MudText Typo="Typo.body2">Regularization Date (mm/dd/yyyy)</MudText>
                                                    <MudDatePicker Class="txf" @bind-Date="RegularDate" DisableUnderLine Margin="Margin.Dense"/>
                                                 </div>
                                            }
                                            else if (employee.EmploymentStatusId == 2) {
                                                <div class="flex-grow-1">
                                                    <MudText Typo="Typo.body2">Date Hired (mm/dd/yyyy)</MudText>
                                                <MudDatePicker DateChanged="HandleDateHiredChanged" Date="DateHired" Class="txf" DisableUnderLine Margin="Margin.Dense" />
                                                </div>
                                                <div class="flex-grow-1">
                                                     <MudText Typo="Typo.body2">Probation Start Date (mm/dd/yyyy)</MudText>
                                                <MudDatePicker @bind-Date="ProbStart" Class="txf" DisableUnderLine Margin="Margin.Dense" />
                                                </div>
                                                <div class="flex-grow-1">
                                                     <MudText Typo="Typo.body2">Probation End Date (mm/dd/yyyy)</MudText>
                                                    <MudDatePicker @bind-Date="ProbEnd" Class="txf" DisableUnderLine Margin="Margin.Dense" />
                                                </div>
                                            }
                                            else if (employee.EmploymentStatusId == 3) {
                                                <div class="flex-grow-1">
                                                 <MudText Typo="Typo.body2">Date Hired (mm/dd/yyyy)</MudText>
                                                <MudDatePicker @bind-Date="DateHired" Class="txf" DisableUnderLine Margin="Margin.Dense" />
                                                </div>
                                                <div class="flex-grow-1">
                                                     <MudText Typo="Typo.body2">Casual Start Date (mm/dd/yyyy)</MudText>
                                                    <MudDatePicker @bind-Date="CasualStart" Class="txf" DisableUnderLine Margin="Margin.Dense" />
                                                </div>
                                                <div class="flex-grow-1">
                                                     <MudText Typo="Typo.body2">Casual End Date (mm/dd/yyyy)</MudText>
                                                    <MudDatePicker @bind-Date="CasualEnd" Class="txf" DisableUnderLine Margin="Margin.Dense" />
                                                </div>
                                            }
                                            else if (employee.EmploymentStatusId == 4) {
                                                <div class="flex-grow-1">
                                                      <MudText Typo="Typo.body2">Date Hired (mm/dd/yyyy)</MudText>
                                                <MudDatePicker @bind-Date="DateHired" Class="txf" DisableUnderLine Margin="Margin.Dense" />
                                                </div>
                                                <div class="flex-grow-1">
                                                     <MudText Typo="Typo.body2">Fixed Term Start Date (mm/dd/yyyy)</MudText>
                                                    <MudDatePicker @bind-Date="FixedStart" Class="txf" DisableUnderLine Margin="Margin.Dense" />
                                                </div>
                                                <div class="flex-grow-1">
                                                     <MudText Typo="Typo.body2">Fixed Term End Date (mm/dd/yyyy)</MudText>
                                                    <MudDatePicker @bind-Date="FixedEnd" Class="txf" DisableUnderLine Margin="Margin.Dense" />
                                                </div>
                                            }
                                            else if (employee.EmploymentStatusId == 5) {
                                                <div class="flex-grow-1">
                                                     <MudText Typo="Typo.body2">Date Hired (mm/dd/yyyy)</MudText>
                                                    <MudDatePicker @bind-Date="DateHired" Class="txf" DisableUnderLine Margin="Margin.Dense" />
                                                </div>
                                                <div class="flex-grow-1">
                                                     <MudText Typo="Typo.body2">Project Based Start Date (mm/dd/yyyy)</MudText>
                                                    <MudDatePicker @bind-Date="ProjStart" Class="txf" DisableUnderLine Margin="Margin.Dense" />
                                                </div>
                                                <div class="flex-grow-1">
                                                     <MudText Typo="Typo.body2">Project Based End Date (mm/dd/yyyy)</MudText>
                                                    <MudDatePicker @bind-Date="ProjEnd" Class="txf" DisableUnderLine Margin="Margin.Dense" />
                                                </div>
                                            }
                                            else
                                            {
                                             <div class="flex-grow-1">
                                                  <MudText Typo="Typo.body2">Date Hired (mm/dd/yyyy)</MudText>
                                                 <MudDatePicker Class="txf" Mask="@(new DateMask("MM/dd/yyyy"))" DateFormat="MM/dd/yyyy" Disabled DisableUnderLine Editable="true" Date="DateHired" DateChanged="HandleDateHiredChanged" Margin="Margin.Dense" />
                                             </div>
                                             <div class="flex-grow-1">
                                                 <MudText Typo="Typo.body2">Regularization Date (mm/dd/yyyy)</MudText>
                                                <MudDatePicker Class="txf" @bind-Date="RegularDate" Mask="@(new DateMask("MM/dd/yyyy"))" Disabled DateFormat="MM/dd/yyyy" DisableUnderLine Editable="true" Margin="Margin.Dense" />
                                             </div>
                                            }
                                    </div>
                                 </div>
                                <div class="d-flex flex-column flex-grow-1 mb-3">
                                    <div class="d-flex flex-wrap gap-lg-4 gap-sm-2">
                                        @{
                                            var departmentHasSection = employee.DepartmentId != 0 && SectionService.SectionTs.Any(s => s.DepartmentId == employee.DepartmentId);
                                        }
                                        @if (departmentHasSection)
                                        {
                                            <div class="flex-grow-1">
                                                <MudText Typo="Typo.body2">Division</MudText>
                                                <MudSelect Class="@slectClasss" DisableUnderLine @bind-Value="employee.DivisionId" Margin="Margin.Dense">
                                                     <MudSelectItem Value=0 Disabled>---Select---</MudSelectItem>
                                                 @foreach (var div in DivisionsL)
                                                    {
                                                        <MudSelectItem Value="@div.Id">@div.Name</MudSelectItem>
                                                    }
                                                </MudSelect>
                                            </div>
                                            <div class="flex-grow-1">
                                                <MudText Typo="Typo.body2">Department</MudText>
                                                <MudSelect Class="@slectClasss" DisableUnderLine @bind-Value="employee.DepartmentId" Margin="Margin.Dense">
                                                     <MudSelectItem Value=0 Disabled>---Select---</MudSelectItem>
                                                 @foreach (var dep in DepartmentsL.Where(d => d.DivisionId == employee.DivisionId))
                                                    {
                                                        <MudSelectItem Value="@dep.Id">@dep.Name</MudSelectItem>
                                                    }
                                                </MudSelect>
                                            </div>
                                            @if (departmentHasSection)
                                            {
                                                var sections = employee.DepartmentId != 0 ? SectionService.SectionTs.Where(s => s.DepartmentId == employee.DepartmentId) : Enumerable.Empty<SectionT>();
                                                <div class="flex-grow-1">
                                                    <MudText Typo="Typo.body2">Section</MudText>
                                                    <MudSelect Class="@slectClasss" DisableUnderLine @bind-Value="employee.SectionId" Margin="Margin.Dense">
                                                         <MudSelectItem Value=0 Disabled>---Select---</MudSelectItem>
                                                     @if (sections.Any())
                                                        {
                                                            @foreach (var sect in sections)
                                                            {
                                                                <MudSelectItem Value="@sect.Id">@sect.Name</MudSelectItem>
                                                            }
                                                        }
                                                        else
                                                        {
                                                            <MudSelectItem Value="0">&nbsp;</MudSelectItem>
                                                        }
                                                    </MudSelect>
                                                </div>
                                                <div class="flex-grow-1">
                                                    <MudText Typo="Typo.body2">Position</MudText>
                                                        <MudSelect Class="@slectClasss" DisableUnderLine @bind-Value="employee.PositionId" Margin="Margin.Dense">
                                                         <MudSelectItem Value=0 Disabled>---Select---</MudSelectItem>
                                                     @foreach (var pos in PositionsL.Where(d => d.DivisionId == employee.DivisionId && d.DepartmentId == employee.DepartmentId && d.SectionId == employee.SectionId))
                                                        {
                                                            <MudSelectItem Value="@pos.Id">@pos.Name</MudSelectItem>
                                                        }
                                                    </MudSelect>
                                                </div>
                                            }
                                        }
                                        else {
                                            <div class="flex-grow-1">
                                                <MudText Typo="Typo.body2">Division</MudText>
                                                <MudSelect @bind-Value="employee.DivisionId" Class="@slectClasss" DisableUnderLine Margin="Margin.Dense">
                                                     <MudSelectItem Value=0 Disabled>---Select---</MudSelectItem>
                                                 @foreach (var div in DivisionsL)
                                                    {
                                                        <MudSelectItem Value="@div.Id">@div.Name</MudSelectItem>
                                                    }
                                                </MudSelect>
                                            </div>
                                            <div class="flex-grow-1">
                                                <MudText Typo="Typo.body2">Department</MudText>
                                                <MudSelect @bind-Value="employee.DepartmentId" Class="@slectClasss" DisableUnderLine Margin="Margin.Dense">
                                                     <MudSelectItem Value=0 Disabled>---Select---</MudSelectItem>
                                                 @foreach (var dep in DepartmentsL.Where(d => d.DivisionId == employee.DivisionId))
                                                    {
                                                        <MudSelectItem Value="@dep.Id">@dep.Name</MudSelectItem>
                                                    }
                                                </MudSelect>
                                            </div>
                                            <div class="flex-grow-1">
                                                <MudText Typo="Typo.body2">Position</MudText>
                                                    <MudSelect @bind-Value="employee.PositionId" Class="@slectClasss" DisableUnderLine Margin="Margin.Dense">
                                                     <MudSelectItem Value=0 Disabled>---Select---</MudSelectItem>
                                                 @foreach (var pos in PositionsL.Where(d => d.DepartmentId == employee.DepartmentId))
                                                    {
                                                        <MudSelectItem Value="@pos.Id">@pos.Name</MudSelectItem>
                                                    }
                                                </MudSelect>
                                            </div>
                                        }                                
                                        </div>
                                </div>
                                <MudItem xs="12" Class="d-flex justify-content-end mt-5">
                                    <MudButton EndIcon="@Icons.Material.Rounded.NavigateNext" Class="btnnext" ButtonType="ButtonType.Submit">NEXT</MudButton>
                                </MudItem>
                            </MudCardContent>
                        </MudCard>
                    </MudItem>
                </EditForm>
            </MudGrid>
        </MudTabPanel>

        @* ====================================================================================  PERSONAL  ==================================================================================== *@
        <MudTabPanel TabContent="tabHeader(1)">
            <MudGrid>
                <EditForm Model="employee" OnValidSubmit="ActivateAddressField" class="d-flex flex-column flex-grow-1" style="margin-top: 13px;">
                    <DataAnnotationsValidator />

                    <MudItem xs="12" >
                            <span class="spantitle">Personal Details</span>
                            <MudCard Class="mdcard1" Elevation="0">
                                <MudCardContent>
                                <MudGrid Class="d-flex align-items-center">
                                    <MudItem xs="12" sm="4">
                                         <MudText Typo="Typo.body2">First Name</MudText>
                                                <InputText Class="txf1 w-100 mt-1" @bind-Value="employee.FirstName" />
                                            <ValidationMessage For="@(() => employee.FirstName)" class="mb-2 valmessage" />
                                    </MudItem>
                                    <MudItem xs="12" sm="4">
                                        <MudText Typo="Typo.body2">Middle Name</MudText>
                                                 <InputText Class="txf1 w-100 mt-1" @bind-Value="employee.MiddleName" />
                                                <ValidationMessage For="@(() => employee.MiddleName)" class="mb-2 valmessage" />
                                    </MudItem>
                                    <MudItem xs="12" sm="3">
                                        <MudText Typo="Typo.body2">Last Name</MudText>
                                                 <InputText Class="txf1 w-100 mt-1" @bind-Value="employee.LastName" />
                                                <ValidationMessage For="@(() => employee.LastName)" class="mb-2 valmessage" />
                                    </MudItem>
                                    <MudItem xs="12" sm="1">
                                         <MudText Typo="Typo.body2">Suffix</MudText>
                                                 <InputText Class="txf1 w-100 mt-1" @bind-Value="employee.Extension" />
                                                 <ValidationMessage For="@(() => employee.Extension)" class="mb-2 valmessage" />
                                    </MudItem>
                                    <MudItem xs="12" sm="4">
                                        <MudText Typo="Typo.body2">Birthdate (mm/dd/yyyy)</MudText>
                                                 <MudDatePicker Class="txf" DisableUnderLine @bind-Date="bday" Mask="@(new DateMask("MM/dd/yyyy"))" DateFormat="MM/dd/yyyy" Editable="true" Margin="Margin.Dense" />
                                    </MudItem>
                                    <MudItem xs="12" sm="4">
                                        <MudText Typo="Typo.body2">Age</MudText>
                                                 <MudTextField Class="txf" DisableUnderLine Value="@CalculateAge(bday)" ReadOnly="true" Margin="Margin.Dense" />
                                    </MudItem>
                                    <MudItem xs="12" sm="4">
                                         <MudText Typo="Typo.body2">Gender</MudText>
                                         <MudSelect Class="@_slectClasssGender" DisableUnderLine @bind-Value="employee.GenderId" Margin="Margin.Dense">
                                             <MudSelectItem Value=0 Disabled>---Select---</MudSelectItem>
                                            @foreach (var gender in GendersL)
                                            {
                                                <MudSelectItem Value="@gender.Id">@gender.Name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudItem>
                                    <MudItem xs="12" sm="4">
                                        <MudText Typo="Typo.body2">Civil Status</MudText>
                                        <MudSelect Class="@_slectClasssCV" @bind-Value="employee.CivilStatusId" DisableUnderLine Margin="Margin.Dense">
                                             @*//gibago nako class*@
                                             <MudSelectItem Value=0 Disabled>---Select---</MudSelectItem>
                                            @foreach (var cs in CivilStatusL)
                                            {
                                                <MudSelectItem Value="@cs.Id">@cs.Name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudItem>
                                    <MudItem xs="12" sm="4">
                                        <MudText Typo="Typo.body2">Nationality</MudText>
                                        <InputText Class="@_txfieldClasssNat" @bind-Value="employee.Nationality" />
                                        <ValidationMessage For="@(() => employee.Nationality)" class="mb-2 valmessage" />
                                    </MudItem>
                                     <MudItem xs="12" sm="4">
                                        <MudText Typo="Typo.body2">Religion</MudText>
                                        <MudSelect @bind-Value="employee.ReligionId" Class="@_slectClasssReli" DisableUnderLine Margin="Margin.Dense">
                                             <MudSelectItem Value=0 Disabled>---Select---</MudSelectItem>
                                            @foreach (var rel in ReligionsL)
                                            {
                                                <MudSelectItem Value="@rel.Id">@rel.Name</MudSelectItem>
                                            }
                                        </MudSelect>
                                     </MudItem>
                                     <MudItem xs="12" sm="4">
                                        <MudText Typo="Typo.body2">Mobile #</MudText>
                                        <MudNumericField HideSpinButtons="true" @bind-Value="employee.MobileNumber" Class="@_txfieldClasssMN" DisableUnderLine Margin="Margin.Dense" Adornment="Adornment.Start" AdornmentText="+63" MaxLength="10" For="@(() => employee.MobileNumber)" />
                                     </MudItem>
                                     <MudItem xs="12" sm="4">
                                        <MudText Typo="Typo.body2">Weight(kg)</MudText>
                                                 <InputNumber Class="txf1 w-100 mt-1" @bind-Value="employee.Weight" />
                                     </MudItem>
                                    <MudItem xs="12" sm="4">
                                         <MudText Typo="Typo.body2">Height(cm)</MudText>
                                         <InputNumber Class="txf1 w-100 mt-1" @bind-Value="employee.Height" />
                                    </MudItem>
                                </MudGrid>
                                
                                   
                                 </MudCardContent>
                             </MudCard>
                    </MudItem>
                     <MudItem xs="12">
                         <div class="d-flex flex-grow-1 justify-content-center">
                             <MudDivider DividerType="DividerType.Middle" Class="my-2 w-25 justify-content-center" Style="border: 2px solid #78909C; border-radius: 5px;" />
                         </div>
                     </MudItem>
                    <MudItem xs="12">
                        <span class="spantitle">Person to Notify in Case of Emergency</span>
                         <MudCard Class="mdcard1" Elevation="0">
                            <MudCardContent>
                                <div class="d-flex flex-column flex-grow-1 mb-3">
                                    <div class="d-flex flex-wrap gap-lg-4 gap-sm-2 mb-2 align-items-center">
                                        <div class="flex-grow-1">
                                             <MudText Typo="Typo.body2">Name</MudText>
                                             <InputText Class="@_txfieldClasssEN" @bind-Value="employee.EmerName" />
                                             <ValidationMessage For="@(() => employee.EmerName)" class="mb-2 valmessage" />
                                        </div>
                                         <div class="flex-grow-1">
                                             <MudText Typo="Typo.body2">Relationship</MudText>
                                             <MudSelect @bind-Value="employee.EmerRelationshipId" Class="@_slectClasssRela" DisableUnderLine Margin="Margin.Dense">
                                                 <MudSelectItem Value=0 Disabled>---Select---</MudSelectItem>
                                                @foreach (var rel in EmerRelationshipsL)
                                                {
                                                    <MudSelectItem Value="@rel.Id">@rel.Name</MudSelectItem>
                                                }
                                            </MudSelect>
                                        </div>
                                         <div class="flex-grow-1">
                                            <MudText Typo="Typo.body2">Address</MudText>
                                            <InputText Class="@_txfieldClasssEA" @bind-Value="employee.EmerAddress" />
                                             <ValidationMessage For="@(() => employee.EmerAddress)" class="mb-2 valmessage" />
                                        </div>
                                         <div class="flex-grow-1">
                                            <MudText Typo="Typo.body2">Mobile #</MudText>
                                            <MudNumericField HideSpinButtons="true" @bind-Value="employee.EmerMobNum" Class="@_txfieldClasssEMN" DisableUnderLine Margin="Margin.Dense" Adornment="Adornment.Start" AdornmentText="+63" MaxLength="10" For="@(() => employee.EmerMobNum)" />
                                         </div>
                                    </div>
                                </div>

                                <MudItem xs="12" Class="d-flex justify-content-center mt-5">
                                     <MudButton EndIcon="@Icons.Material.Rounded.KeyboardArrowDown" Class="btnnext" ButtonType="ButtonType.Submit">NEXT</MudButton>
                                </MudItem>
                            </MudCardContent>
                        </MudCard>
                    </MudItem>
                </EditForm>

                 <MudItem xs="12">
                     <div class="d-flex flex-grow-1 justify-content-center">
                         <MudDivider DividerType="DividerType.Middle" Class="my-2 w-25 justify-content-center" Style="border: 2px solid #78909C; border-radius: 5px;" />
                     </div>
                </MudItem>
                <MudItem xs="12">
                    <EditForm Model="address" OnValidSubmit="() => Activate2(2)" class="d-flex flex-column flex-grow-1" style="margin-top: 13px;">
                        <DataAnnotationsValidator/>
                        <span class="spantitle">Address</span>
                         <MudCard Class="mdcard1" Elevation="0">
                             <MudCardContent>
                                 <span class="spantitle">Present Address</span>
                                 <div class="d-flex flex-column flex-grow-1 mb-3">
                                     <div class="d-flex flex-wrap gap-lg-4 gap-sm-2 mb-2">
                                         <div class="flex-grow-1">
                                             <MudText Typo="Typo.body2">(Unit/House/Building/Street Number, Street Name, Barangay Name)</MudText>
                                             <InputText id="bb" Class="txf1 w-100 mt-1" @bind-Value="address.CurrentAdd" />
                                             <ValidationMessage For="@(() => address.CurrentAdd)" class="mb-2 valmessage" />
                                         </div>
                                     </div>
                                     <div class="d-flex flex-wrap gap-lg-4 gap-sm-2 mb-2">
                                         <div class="flex-grow-1">
                                             <MudText Typo="Typo.body2">City</MudText>
                                              <InputText Class="txf1 w-100 mt-1" @bind-Value="address.CurrentCity" />
                                             <ValidationMessage For="@(() => address.CurrentCity)" class="mb-2 valmessage" />
                                         </div>
                                         <div class="flex-grow-1">
                                             <MudText Typo="Typo.body2">Province</MudText>
                                              <InputText Class="txf1 w-100 mt-1" @bind-Value="address.CurrentProvince" />
                                             <ValidationMessage For="@(() => address.CurrentProvince)" class="mb-2 valmessage" />
                                         </div>
                                         <div class="flex-grow-1">
                                             <MudText Typo="Typo.body2">ZipCode</MudText>
                                              <InputText Class="txf1 w-100 mt-1" @bind-Value="address.CurrentZipCode" />
                                             <ValidationMessage For="@(() => address.CurrentZipCode)" class="mb-2 valmessage" />
                                         </div>
                                         <div class="flex-grow-1">
                                             <MudText Typo="Typo.body2">Country</MudText>
                                             <InputText Class="txf1 w-100 mt-1" @bind-Value="address.CurrentCountry" />
                                             <ValidationMessage For="@(() => address.CurrentCountry)" class="mb-2 valmessage" />
                                         </div>
                                     </div>
                                     <span class="spantitle">Permanent Address</span>
                                     <div class="d-flex flex-wrap gap-lg-4 gap-sm-2 mb-2">
                                         <div class="flex-grow-1">
                                             <MudText Typo="Typo.body2">(Unit/House/Building/Street Number, Street Name, Barangay Name)</MudText>
                                              <InputText Class="txf1 w-100 mt-1" @bind-Value="address.PermanentAdd" />
                                             <ValidationMessage For="@(() => address.PermanentAdd)" class="mb-2 valmessage" />
                                         </div>
                                     </div>
                                     <div class="d-flex flex-wrap gap-lg-4 gap-sm-2 mb-2">
                                         <div class="flex-grow-1">
                                             <MudText Typo="Typo.body2">City</MudText>
                                              <InputText Class="txf1 w-100 mt-1" @bind-Value="address.PermanentCity" />
                                             <ValidationMessage For="@(() => address.PermanentCity)" class="mb-2 valmessage" />
                                         </div>
                                         <div class="flex-grow-1">
                                             <MudText Typo="Typo.body2">Province</MudText>
                                              <InputText Class="txf1 w-100 mt-1" @bind-Value="address.PermanentProvince" />
                                             <ValidationMessage For="@(() => address.PermanentProvince)" class="mb-2 valmessage" />
                                         </div>
                                         <div class="flex-grow-1">
                                             <MudText Typo="Typo.body2">ZipCode</MudText>
                                              <InputText Class="txf1 w-100 mt-1" @bind-Value="address.PermanentZipCode" />
                                             <ValidationMessage For="@(() => address.PermanentZipCode)" class="mb-2 valmessage" />
                                         </div>
                                         <div class="flex-grow-1">
                                             <MudText Typo="Typo.body2">Country</MudText>
                                              <InputText Class="txf1 w-100 mt-1" @bind-Value="address.PermanentCountry" />
                                             <ValidationMessage For="@(() => address.PermanentCountry)" class="mb-2 valmessage" />
                                         </div>
                                     </div>
                                 </div>
                                 <MudItem xs="12" Class="d-flex justify-content-between mt-5">
                                     <MudButton StartIcon="@Icons.Material.Rounded.NavigateBefore" Class="btnnext" OnClick="@(()=>Activate(0))" style="background-color: #C5CFD2;">BACK</MudButton>
                                     <MudButton EndIcon="@Icons.Material.Rounded.NavigateNext" Class="btnnext" ButtonType="ButtonType.Submit">NEXT</MudButton>
                                 </MudItem>
                             </MudCardContent>
                         </MudCard>
                    </EditForm>                
                </MudItem>
            </MudGrid>
        </MudTabPanel>

        @* ====================================================================================  EDUCATION  ==================================================================================== *@

        <MudTabPanel TabContent="tabHeader(2)" >
            <MudGrid>
                 <MudItem xs="12" Style="padding-top: 0px;">
                     <MudCard Class="mdcard1" Elevation="0">
                        <MudCardContent>
                            <div class="d-flex flex-column flex-grow-1">
                                <div class="d-flex flex-grow-1 justify-content-between align-items-center mb-2">
                                    <span class="spantitle">Primary</span>
                                    <div>
                                        <MudTooltip  Text="Click to remove Primary">
                                            <MudIconButton Class="p-0 addminbtn" OnClick="RemovePrimary" Icon="@Icons.Material.Rounded.RemoveCircle" />
                                        </MudTooltip>
                                        <MudTooltip Text="Click to add more Primary">
                                            <MudIconButton Class="p-0 addminbtn" OnClick="() => AddNewPrimary(employee.Verify_Id)" Icon="@Icons.Material.Rounded.AddCircle" />
                                        </MudTooltip>
                                    </div>                                
                                </div>
                                @if (listOfPrimary.Any())
                                {
                                    @foreach (var pri in listOfPrimary)
                                    {
                                        <div class="mb-3 divSchool">
                                            <div class="d-flex flex-wrap gap-lg-4 gap-sm-2 mb-1">
                                                <div class="flex-grow-1">
                                                    <MudText Typo="Typo.body2">Name of School</MudText>
                                                    <MudTextField @bind-Value="pri.PriSchoolName" Class="txf" DisableUnderLine Margin="Margin.Dense" />
                                                </div>
                                                <div class="flex-grow-1">
                                                     <MudText Typo="Typo.body2">School Location</MudText>
                                                    <MudTextField @bind-Value="pri.PriSchoolLoc" Class="txf" DisableUnderLine Margin="Margin.Dense" />
                                                </div>
                                            </div>
                                             <div class="d-flex flex-wrap gap-lg-4 gap-sm-2">
                                                <div class="flex-grow-1">
                                                    <MudText Typo="Typo.body2">Award</MudText>
                                                    <MudTextField @bind-Value="pri.PriAward" Class="txf" DisableUnderLine Margin="Margin.Dense" />
                                                </div>
                                                 <div class="flex-grow-1">
                                                     <MudText Typo="Typo.body2">School Year</MudText>
                                                    <MudTextField @bind-Value="pri.PriSchoolYear" Class="txf" DisableUnderLine Margin="Margin.Dense" />
                                                 </div>
                                            </div>
                                        </div>
                                        
                                    }
                                }
                                else
                                {
                                    @foreach (var pri in listOfPrimary)
                                    {
                                        <MudContainer MaxWidth="MaxWidth.ExtraLarge">
                                            <MudCard>
                                                <MudCardContent>
                                                    <p>No Primary information available.</p>
                                                </MudCardContent>
                                            </MudCard>
                                        </MudContainer>
                                    }
                                }
                            </div>
                        </MudCardContent>
                    </MudCard>
                </MudItem>
                <MudItem xs="12">
                    <MudCard Class="mdcard1" Elevation="0">
                        <MudCardContent>       
                            <div class="d-flex flex-column flex-grow-1">
                                <div class="d-flex flex-grow-1 justify-content-between align-items-center mb-2">
                                    <span class="spantitle">Secondary</span>
                                    <div>
                                        <MudTooltip Text="Click to remove Secondary">
                                            <MudIconButton Class="p-0 addminbtn" OnClick="RemoveSecondary" Icon="@Icons.Material.Rounded.RemoveCircle" />
                                        </MudTooltip>
                                        <MudTooltip Text="Click to add more Secondary">
                                            <MudIconButton Class="p-0 addminbtn" OnClick="() => AddNewSecondary(employee.Verify_Id)" Icon="@Icons.Material.Rounded.AddCircle" />
                                        </MudTooltip>
                                    </div>
                                </div>
                               
                                @if (listOfSecondary.Any())
                                {
                                    @foreach (var sec in listOfSecondary)
                                    {
                                        <div class="mb-3 divSchool">
                                            <div class="d-flex flex-wrap gap-lg-4 gap-sm-2 mb-1">
                                                <div class="flex-grow-1">
                                                    <MudText Typo="Typo.body2">Name of School</MudText>
                                                    <MudTextField @bind-Value="sec.SecSchoolName" Class="txf" DisableUnderLine Margin="Margin.Dense" />
                                                 </div>
                                                 <div class="flex-grow-1">
                                                     <MudText Typo="Typo.body2">School Location</MudText>
                                                     <MudTextField @bind-Value="sec.SecSchoolLoc" Class="txf" DisableUnderLine Margin="Margin.Dense" />
                                                 </div>
                                             </div>
                                             <div class="d-flex flex-wrap gap-lg-4 gap-sm-2">
                                                 <div class="flex-grow-1">
                                                     <MudText Typo="Typo.body2">Award</MudText>
                                                     <MudTextField @bind-Value="sec.SecAward" Class="txf" DisableUnderLine Margin="Margin.Dense" />
                                                 </div>
                                                 <div class="flex-grow-1">
                                                     <MudText Typo="Typo.body2">School Year</MudText>
                                                     <MudTextField @bind-Value="sec.SecSchoolYear" Class="txf" DisableUnderLine Margin="Margin.Dense" />
                                                 </div>
                                             </div>
                                         </div>
                                    }
                                }
                                else
                                {
                                    <MudContainer MaxWidth="MaxWidth.ExtraLarge">
                                         <MudCard>
                                             <MudCardContent>
                                                  <p>No Secondary information available.</p>
                                             </MudCardContent>
                                         </MudCard>
                                    </MudContainer>
                                   
                                }
                            </div>
                        </MudCardContent>
                    </MudCard>
                </MudItem>
                <MudItem xs="12" Style="padding-bottom: 0px;">
                    <div class="d-flex flex-grow-1 align-items-center">
                        <MudCheckBox @bind-Checked="IsListaddshs" Color="Color.Primary"></MudCheckBox><span class="spantitle">Senior High School</span>
                    </div>
                </MudItem>
                @if (IsListaddshs)
                {
                    <MudItem xs="12" Style="padding-top: 0px;">
                        <MudCard Class="mdcard1" Elevation="0" Style="padding-top: 0px;">
                            <MudCardContent Style="padding-top: 0px;">
                                <div class="d-flex flex-column flex-grow-1">
                                    <div class="d-flex flex-grow-1 justify-content-end align-items-center mb-2">
                                        <div>
                                            <MudTooltip Text="Click to remove SHS">
                                                <MudIconButton Class="p-0 addminbtn" OnClick="RemoveShs" Icon="@Icons.Material.Rounded.RemoveCircle" />
                                            </MudTooltip>
                                            <MudTooltip Text="Click to add more SHS">
                                                <MudIconButton Class="p-0 addminbtn" OnClick="() => AddNewShs(employee.Verify_Id)" Icon="@Icons.Material.Rounded.AddCircle" />
                                            </MudTooltip>
                                        </div>
                                    </div>

                                    @if (listOfShs.Any())
                                    {
                                        @foreach (var shs in listOfShs)
                                        {
                                            <div class="mb-3 divSchool">
                                                <div class="d-flex flex-wrap gap-lg-4 gap-sm-2 mb-1">
                                                    <div class="flex-grow-1">
                                                        <MudText Typo="Typo.body2">Name of School</MudText>
                                                        <MudTextField @bind-Value="shs.ShsSchoolName" Class="txf" DisableUnderLine Margin="Margin.Dense" />
                                                     </div>
                                                     <div class="flex-grow-1">
                                                         <MudText Typo="Typo.body2">School Location</MudText>
                                                         <MudTextField @bind-Value="shs.ShsSchoolLoc" Class="txf" DisableUnderLine Margin="Margin.Dense" />
                                                     </div>
                                                 </div>
                                                 <div class="d-flex flex-wrap gap-lg-4 gap-sm-2">
                                                     <div class="flex-grow-1">
                                                         <MudText Typo="Typo.body2">Award</MudText>
                                                         <MudTextField @bind-Value="shs.ShsAward" Class="txf" DisableUnderLine Margin="Margin.Dense" />
                                                     </div>
                                                     <div class="flex-grow-1">
                                                         <MudText Typo="Typo.body2">School Year</MudText>
                                                         <MudTextField @bind-Value="shs.ShsSchoolYear" Class="txf" DisableUnderLine Margin="Margin.Dense" />
                                                     </div>
                                                 </div>
                                             </div>
                                        }
                                    }
                                    else
                                    {
                                        <MudContainer MaxWidth="MaxWidth.ExtraLarge">
                                            <MudCard>
                                                <MudCardContent>
                                                    <p>No SHS information available.</p>
                                                </MudCardContent>
                                            </MudCard>
                                        </MudContainer>
                                    }
                                </div>
                            </MudCardContent>
                        </MudCard>
                    </MudItem>
                }
                <MudItem xs="12" Style="padding-bottom: 0px;">
                    <div class="d-flex flex-grow-1 align-items-center">
                        <MudCheckBox @bind-Checked="IsListaddcoll" Color="Color.Primary"></MudCheckBox><span class="spantitle">College</span>
                    </div>
                </MudItem>
                @if (IsListaddcoll)
                {
                    <MudItem xs="12" Style="padding-top: 0px;">
                        <MudCard Class="mdcard1" Elevation="0" Style="padding-top: 0px;">
                            <MudCardContent Style="padding-top: 0px;">
                                <div class="d-flex flex-column flex-grow-1">
                                    <div class="d-flex flex-grow-1 justify-content-end align-items-center mb-2">
                                        <div>
                                            <MudTooltip Text="Click to remove College">
                                                <MudIconButton Class="p-0 addminbtn" OnClick="RemoveCollege" Icon="@Icons.Material.Rounded.RemoveCircle" />
                                            </MudTooltip>
                                            <MudTooltip Text="Click to add more College">
                                                <MudIconButton Class="p-0 addminbtn" OnClick="() => AddNewCollege(employee.Verify_Id)" Icon="@Icons.Material.Rounded.AddCircle" />
                                            </MudTooltip>
                                        </div>
                                    </div>

                                    @if (listOfCollege.Any())
                                    {
                                        @foreach (var col in listOfCollege)
                                        {
                                            <div class="mb-3 divSchool">
                                                <div class="d-flex flex-wrap gap-lg-4 gap-sm-2 mb-1">
                                                    <div class="flex-grow-1">
                                                                    <MudText Typo="Typo.body2">Name of School</MudText>
                                                        <MudTextField @bind-Value="col.CollSchoolName" Class="txf" DisableUnderLine Margin="Margin.Dense" />
                                                     </div>
                                                     <div class="flex-grow-1">
                                                         <MudText Typo="Typo.body2">School Location</MudText>
                                                         <MudTextField @bind-Value="col.CollSchoolLoc" Class="txf" DisableUnderLine Margin="Margin.Dense" />
                                                     </div>
                                                 </div>
                                                 <div class="d-flex flex-wrap gap-lg-4 gap-sm-2">
                                                     <div class="flex-grow-1">
                                                         <MudText Typo="Typo.body2">Award</MudText>
                                                         <MudTextField @bind-Value="col.CollAward" Class="txf" DisableUnderLine Margin="Margin.Dense" />
                                                     </div>
                                                     <div class="flex-grow-1">
                                                         <MudText Typo="Typo.body2">Course</MudText>
                                                         <MudTextField @bind-Value="col.CollCourse" Class="txf" DisableUnderLine Margin="Margin.Dense" />
                                                     </div>
                                                     <div class="flex-grow-1">
                                                         <MudText Typo="Typo.body2">School Year</MudText>
                                                         <MudTextField @bind-Value="col.CollSchoolYear" Class="txf" DisableUnderLine Margin="Margin.Dense" />
                                                     </div>
                                                 </div>
                                             </div>
                                        }
                                    }
                                    else
                                    {
                                        <MudContainer MaxWidth="MaxWidth.ExtraLarge">
                                            <MudCard>
                                                <MudCardContent>
                                                    <p>No College information available.</p>
                                                </MudCardContent>
                                            </MudCard>
                                        </MudContainer>
                                    }
                                </div>
                            </MudCardContent>
                        </MudCard>
                    </MudItem>
                }
                <MudItem xs="12" Style="padding-bottom: 0px;">
                    <div class="d-flex flex-grow-1 align-items-center">
                        <MudCheckBox @bind-Checked="IsListaddmas" Color="Color.Primary"></MudCheckBox><span class="spantitle">Masteral</span>
                    </div>
                </MudItem>
                @if (IsListaddmas)
                {
                    <MudItem xs="12" Style="padding-top: 0px;">
                        <MudCard Class="mdcard1" Elevation="0" Style="padding-top: 0px;">
                            <MudCardContent Style="padding-top: 0px;">
                                <div class="d-flex flex-column flex-grow-1">
                                    <div class="d-flex flex-grow-1 justify-content-end align-items-center mb-2">
                                        <div>
                                            <MudTooltip Text="Click to remove Masteral">
                                                <MudIconButton Class="p-0 addminbtn" OnClick="RemoveMasteral" Icon="@Icons.Material.Rounded.RemoveCircle" />
                                            </MudTooltip>
                                            <MudTooltip Text="Click to add more Masteral">
                                                <MudIconButton Class="p-0 addminbtn" OnClick="() => AddNewMasteral(employee.Verify_Id)" Icon="@Icons.Material.Rounded.AddCircle" />
                                            </MudTooltip>
                                        </div>
                                    </div>

                                    @if (listOfMasteral.Any())
                                    {
                                        @foreach (var mas in listOfMasteral)
                                        {
                                            <div class="mb-3 divSchool">
                                                <div class="d-flex flex-wrap gap-lg-4 gap-sm-2 mb-1">
                                                    <div class="flex-grow-1">
                                                        <MudText Typo="Typo.body2">Name of School</MudText>
                                                        <MudTextField @bind-Value="mas.MasSchoolName" Class="txf" DisableUnderLine Margin="Margin.Dense" />
                                                     </div>
                                                     <div class="flex-grow-1">
                                                         <MudText Typo="Typo.body2">School Location</MudText>
                                                         <MudTextField @bind-Value="mas.MasSchoolLoc" Class="txf" DisableUnderLine Margin="Margin.Dense" />
                                                     </div>
                                                 </div>
                                                 <div class="d-flex flex-wrap gap-lg-4 gap-sm-2">
                                                     <div class="flex-grow-1">
                                                         <MudText Typo="Typo.body2">Award</MudText>
                                                         <MudTextField @bind-Value="mas.MasAward" Class="txf" DisableUnderLine Margin="Margin.Dense" />
                                                     </div>
                                                      <div class="flex-grow-1">
                                                         <MudText Typo="Typo.body2">Course</MudText>
                                                         <MudTextField @bind-Value="mas.MasCourse" Class="txf" DisableUnderLine Margin="Margin.Dense" />
                                                     </div>
                                                     <div class="flex-grow-1">
                                                         <MudText Typo="Typo.body2">School Year</MudText>
                                                         <MudTextField @bind-Value="mas.MasSchoolYear" Class="txf" DisableUnderLine Margin="Margin.Dense" />
                                                     </div>
                                                 </div>
                                             </div>
                                        }
                                    }
                                    else
                                    {
                                        <MudContainer MaxWidth="MaxWidth.ExtraLarge">
                                            <MudCard>
                                                <MudCardContent>
                                                    <p>No Masteral information available.</p>
                                                </MudCardContent>
                                            </MudCard>
                                        </MudContainer>
                                    }
                                </div>
                            </MudCardContent>
                        </MudCard>
                    </MudItem>
                }
                <MudItem xs="12" Style="padding-bottom: 0px;">
                    <div class="d-flex flex-grow-1 align-items-center">
                        <MudCheckBox @bind-Checked="IsListadddoc" Color="Color.Primary"></MudCheckBox><span class="spantitle">Doctorate</span>
                    </div>
                </MudItem>
                @if (IsListadddoc)
                {
                    <MudItem xs="12" Style="padding-top: 0px;">
                        <MudCard Class="mdcard1" Elevation="0" Style="padding-top: 0px;">
                            <MudCardContent Style="padding-top: 0px;">
                                <div class="d-flex flex-column flex-grow-1">
                                    <div class="d-flex flex-grow-1 justify-content-end align-items-center mb-2">
                                        <div>
                                            <MudTooltip Text="Click to remove Doctorate">
                                                <MudIconButton Class="p-0 addminbtn" OnClick="RemoveDoctorate" Icon="@Icons.Material.Rounded.RemoveCircle" />
                                            </MudTooltip>
                                            <MudTooltip Text="Click to add more Doctorate">
                                                <MudIconButton Class="p-0 addminbtn" OnClick="() => AddNewDoctorate(employee.Verify_Id)" Icon="@Icons.Material.Rounded.AddCircle" />
                                            </MudTooltip>
                                        </div>
                                    </div>

                                    @if (listOfDoctorate.Any())
                                    {
                                        @foreach (var doc in listOfDoctorate)
                                        {
                                            <div class="mb-3 divSchool">
                                                <div class="d-flex flex-wrap gap-lg-4 gap-sm-2 mb-1">
                                                    <div class="flex-grow-1">
                                                        <MudText Typo="Typo.body2">Name of School</MudText>
                                                        <MudTextField @bind-Value="doc.DocSchoolName" Class="txf" DisableUnderLine Margin="Margin.Dense" />
                                                     </div>
                                                     <div class="flex-grow-1">
                                                         <MudText Typo="Typo.body2">School Location</MudText>
                                                         <MudTextField @bind-Value="doc.DocSchoolLoc" Class="txf" DisableUnderLine Margin="Margin.Dense" />
                                                     </div>
                                                 </div>
                                                 <div class="d-flex flex-wrap gap-lg-4 gap-sm-2">
                                                     <div class="flex-grow-1">
                                                         <MudText Typo="Typo.body2">Award</MudText>
                                                         <MudTextField @bind-Value="doc.DocAward" Class="txf" DisableUnderLine Margin="Margin.Dense" />
                                                     </div>
                                                     <div class="flex-grow-1">
                                                         <MudText Typo="Typo.body2">Course</MudText>
                                                         <MudTextField @bind-Value="doc.DocCourse" Class="txf" DisableUnderLine Margin="Margin.Dense" />
                                                     </div>
                                                     <div class="flex-grow-1">
                                                         <MudText Typo="Typo.body2">School Year</MudText>
                                                         <MudTextField @bind-Value="doc.DocSchoolYear" Class="txf" DisableUnderLine Margin="Margin.Dense" />
                                                     </div>
                                                 </div>
                                             </div>
                                        }
                                    }
                                    else
                                    {
                                        <MudContainer MaxWidth="MaxWidth.ExtraLarge">
                                            <MudCard>
                                                <MudCardContent>
                                                    <p>No Doctorate information available.</p>
                                                </MudCardContent>
                                            </MudCard>
                                        </MudContainer>
                                    }
                                </div>
                            </MudCardContent>
                        </MudCard>
                    </MudItem>
                }
                <MudItem xs="12" Style="padding-bottom: 0px;">
                    <div class="d-flex flex-grow-1 align-items-center">
                        <MudCheckBox @bind-Checked="IsListaddothers" Color="Color.Primary"></MudCheckBox><span class="spantitle">Other</span>
                    </div>
                </MudItem>
                @if (IsListaddothers)
                {
                    <MudItem xs="12" Style="padding-top: 0px;">
                        <MudCard Class="mdcard1" Elevation="0" Style="padding-top: 0px;">
                            <MudCardContent Style="padding-top: 0px;">
                                <div class="d-flex flex-column flex-grow-1">
                                    <div class="d-flex flex-grow-1 justify-content-end align-items-center mb-2">
                                        <div>
                                            <MudTooltip Text="Click to remove Other">
                                                <MudIconButton Class="p-0 addminbtn" OnClick="RemoveOthers" Icon="@Icons.Material.Rounded.RemoveCircle" />
                                            </MudTooltip>
                                            <MudTooltip Text="Click to add more Other">
                                                <MudIconButton Class="p-0 addminbtn" OnClick="() => AddNewOthers(employee.Verify_Id)" Icon="@Icons.Material.Rounded.AddCircle" />
                                            </MudTooltip>
                                        </div>
                                    </div>

                                    @if (listOfOthers.Any())
                                    {
                                        @foreach (var other in listOfOthers)
                                        {
                                            <div class="mb-3 divSchool">
                                                <div class="d-flex flex-wrap gap-lg-4 gap-sm-2 mb-1">
                                                    <div class="flex-grow-1">
                                                        <MudText Typo="Typo.body2">School Type</MudText>
                                                        <MudTextField @bind-Value="other.OthersSchoolType" Class="txf" DisableUnderLine Margin="Margin.Dense" />
                                                     </div>
                                                    <div class="flex-grow-1">
                                                        <MudText Typo="Typo.body2">Name of School</MudText>
                                                        <MudTextField @bind-Value="other.OthersSchoolName" Class="txf" DisableUnderLine Margin="Margin.Dense" />
                                                     </div>
                                                     <div class="flex-grow-1">
                                                         <MudText>School Location</MudText>
                                                         <MudTextField @bind-Value="other.OthersSchoolLoc" Class="txf" DisableUnderLine Margin="Margin.Dense" />
                                                     </div>
                                                 </div>
                                                 <div class="d-flex flex-wrap gap-lg-4 gap-sm-2">
                                                     <div class="flex-grow-1">
                                                         <MudText Typo="Typo.body2">Award</MudText>
                                                         <MudTextField @bind-Value="other.OthersAward" Class="txf" DisableUnderLine Margin="Margin.Dense" />
                                                     </div>
                                                     <div class="flex-grow-1">
                                                         <MudText Typo="Typo.body2">Course</MudText>
                                                         <MudTextField @bind-Value="other.OthersCourse" Class="txf" DisableUnderLine Margin="Margin.Dense" />
                                                     </div>
                                                     <div class="flex-grow-1">
                                                         <MudText Typo="Typo.body2">School Year</MudText>
                                                         <MudTextField @bind-Value="other.OthersSchoolYear" Class="txf" DisableUnderLine Margin="Margin.Dense" />
                                                     </div>
                                                 </div>
                                             </div>
                                        }
                                    }
                                    else
                                    {
                                        <MudContainer MaxWidth="MaxWidth.ExtraLarge">
                                            <MudCard>
                                                <MudCardContent>
                                                    <p>No Other information available.</p>
                                                </MudCardContent>
                                            </MudCard>
                                        </MudContainer>
                                    }
                                </div>
                            </MudCardContent>
                        </MudCard>
                    </MudItem>
                }
                <MudItem xs="12" Class="d-flex justify-content-between mt-0">
                    <MudButton StartIcon="@Icons.Material.Rounded.NavigateBefore" Class="btnnext" OnClick="@(()=>Activate2(1))" style="background-color: #C5CFD2;">BACK</MudButton>
                    <MudButton EndIcon="@Icons.Material.Rounded.NavigateNext" Class="btnnext" OnClick="@(()=>Activate2(3))">NEXT</MudButton>
                </MudItem>
            </MudGrid>
        </MudTabPanel>

        @* ====================================================================================  LICENCE  ==================================================================================== *@

        <MudTabPanel TabContent="tabHeader(3)">
            <MudGrid>
                <MudItem xs="12" Style="padding-top: 0px;">
                    <MudCard Class="mdcard1" Elevation="0" Style="padding-top: 0px;">
                        <MudCardContent>
                            <div class="d-flex flex-column flex-grow-1">
                                <div class="d-flex flex-grow-1 justify-content-between align-items-center mb-2">
                                    <span class="spantitle">Licences</span>
                                    <div>
                                        <MudTooltip Text="Click to remove Licences">
                                            <MudIconButton Class="p-0 addminbtn" OnClick="RemoveLicense" Icon="@Icons.Material.Rounded.RemoveCircle" />
                                        </MudTooltip>
                                        <MudTooltip Text="Click to add more Licences">
                                            <MudIconButton Class="p-0 addminbtn" OnClick="() => AddNewLicense(employee.Verify_Id)" Icon="@Icons.Material.Rounded.AddCircle" />
                                        </MudTooltip>
                                    </div>
                                </div>
                                @if (listofLicense.Any())
                                {
                                    @foreach (var lis in listofLicense)
                                    {
                                        <div class="mb-3 divSchool">
                                            <div class="d-flex flex-wrap gap-lg-4 gap-sm-2 mb-1">
                                                <div class="flex-grow-1">
                                                    <MudText Typo="Typo.body2">Professional Licenses/Board Examinations Taken</MudText>
                                                    <MudTextField @bind-Value="lis.Examination" Class="txf" DisableUnderLine Margin="Margin.Dense" />
                                                 </div>
                                                  <div class="flex-grow-1">
                                                     <MudText Typo="Typo.body2">Date(mm/dd/yy)</MudText>
                                                     <MudDatePicker Class="txf" DisableUnderLine @bind-Date="lis.Date" Mask="@(new DateMask("MM/dd/yyyy"))" DateFormat="MM/dd/yyyy" Editable="true" Margin="Margin.Dense" />
                                                 </div>
                                             </div>
                                             <div class="d-flex flex-wrap gap-lg-4 gap-sm-2 align-items-center">
                                                 <div class="flex-grow-1">
                                                     <MudText Typo="Typo.body2">License No.</MudText>
                                                     <MudTextField @bind-Value="lis.LicenseNo" Class="txf" DisableUnderLine Margin="Margin.Dense" />
                                                 </div>
                                                <div class="flex-grow-1">
                                                     <MudText Typo="Typo.body2">Rating %</MudText>
                                                     <MudTextField @bind-Value="lis.Rating" Class="txf" DisableUnderLine Margin="Margin.Dense" />
                                                 </div>
                                             </div>
                                         </div>
                                    }
                                }
                                else
                                {
                                    @foreach (var pri in listofLicense)
                                    {
                                        <MudContainer MaxWidth="MaxWidth.ExtraLarge">
                                            <MudCard>
                                                <MudCardContent>
                                                    <p>No Licenses information available.</p>
                                                </MudCardContent>
                                            </MudCard>
                                        </MudContainer>
                                    }
                                }
                            </div>
                        </MudCardContent>
                    </MudCard>
                </MudItem>
                <MudItem xs="12">
                    <MudCard Class="mdcard1" Elevation="0">
                        <MudCardContent>       
                            <div class="d-flex flex-column flex-grow-1">
                                <div class="d-flex flex-grow-1 justify-content-between align-items-center mb-2">
                                    <span class="spantitle">Trainings</span>
                                    <div>
                                        <MudTooltip Text="Click to remove Trainings">
                                            <MudIconButton Class="p-0 addminbtn" OnClick="RemoveTrainings" Icon="@Icons.Material.Rounded.RemoveCircle" />
                                        </MudTooltip>
                                        <MudTooltip Text="Click to add more Trainings">
                                            <MudIconButton Class="p-0 addminbtn" OnClick="() => AddNewTrainings(employee.Verify_Id)" Icon="@Icons.Material.Rounded.AddCircle" />
                                        </MudTooltip>
                                    </div>
                                </div>
                               
                                @if (listOfTrainings.Any())
                                {
                                    @foreach (var train in listOfTrainings)
                                    {
                                        <div class="mb-3 divSchool">
                                            <div class="d-flex flex-wrap gap-lg-4 gap-sm-2 mb-1 align-items-center">
                                                <div class="flex-grow-1">
                                                    <MudText Typo="Typo.body2">Title</MudText>
                                                    <MudTextField @bind-Value="train.TrainingName" Class="txf" DisableUnderLine Margin="Margin.Dense" />
                                                 </div>
                                                 <div class="flex-grow-1">
                                                     <MudText Typo="Typo.body2">Sponsor / Speaker</MudText>
                                                     <MudTextField @bind-Value="train.SponsorSpeaker" Class="txf" DisableUnderLine Margin="Margin.Dense" />
                                                 </div>
                                                 <div class="flex-grow-1">
                                                     <MudText Typo="Typo.body2">Date Attended(mm/dd/yyyy)</MudText>
                                                     <MudDatePicker Class="txf" DisableUnderLine @bind-Date="train.TrainingDate" Mask="@(new DateMask("MM/dd/yyyy"))" DateFormat="MM/dd/yyyy" Editable="true" Margin="Margin.Dense" />
                                                 </div>
                                             </div>
                                         </div>
                                    }
                                }
                                else
                                {
                                    <MudContainer MaxWidth="MaxWidth.ExtraLarge">
                                         <MudCard>
                                             <MudCardContent>
                                                  <p>No Trainings information available.</p>
                                             </MudCardContent>
                                         </MudCard>
                                    </MudContainer>
                                   
                                }
                            </div>
                        </MudCardContent>
                    </MudCard>
                </MudItem>
                 <MudItem xs="12" Class="d-flex justify-content-between mt-5">
                    <MudButton StartIcon="@Icons.Material.Rounded.NavigateBefore" Class="btnnext" OnClick="@(()=>Activate2(2))" style="background-color: #C5CFD2;">BACK</MudButton>
                    <MudButton EndIcon="@Icons.Material.Rounded.NavigateNext" Class="btnnext" OnClick="@(()=>Activate2(4))">NEXT</MudButton>
                </MudItem>
            </MudGrid>
        </MudTabPanel>

        @* ====================================================================================  PAYROLL  ==================================================================================== *@

        <MudTabPanel TabContent="tabHeader(4)">
            <MudGrid>
                <EditForm Model="payroll" OnValidSubmit="CreateEmployee" class="d-flex flex-column flex-grow-1" style="margin-top: 13px;">
                    <DataAnnotationsValidator />
                    <MudItem xs="12" Style="padding-top: 0px;">
                    <MudCard Class="mdcard1" Elevation="0" Style="padding-top: 0px;">
                        <MudCardContent>
                            <div class="d-flex flex-column flex-grow-1">
                                <div class="d-flex flex-grow-1 justify-content-between align-items-center mb-2">
                                    <span class="spantitle">Documents</span>
                                </div>
                                <div class="mb-3 divSchool">
                                    <div class="d-flex flex-wrap gap-lg-4 gap-sm-2 mb-1">
                                        <div class="flex-grow-1">
                                            <MudText Typo="Typo.body2">Rate</MudText>
                                                 <InputText Class="txf1 w-100 mt-1" @bind-Value="payroll.Rate" />
                                                 <ValidationMessage For="@(() => payroll.Rate)" class="mb-2 valmessage" />
                                         </div>
                                         <div class="flex-grow-1">
                                             <MudText Typo="Typo.body2">Rate Type</MudText>
                                             <MudSelect Class="@slectClasssRT" DisableUnderLine @bind-Value="payroll.RateTypeId" Margin="Margin.Dense">
                                                 <MudSelectItem Value=0 Disabled>---Select---</MudSelectItem>
                                                @foreach (var rate in RateTypeL)
                                                {
                                                    <MudSelectItem Value="@rate.Id">@rate.Name</MudSelectItem>
                                                }
                                            </MudSelect>
                                         </div>
                                          <div class="flex-grow-1">
                                             <MudText Typo="Typo.body2">Cash-Bond</MudText>
                                                <MudSelect Class="@slectClasssCB" DisableUnderLine @bind-Value="payroll.CashbondId" Margin="Margin.Dense">
                                                 <MudSelectItem Value=0 Disabled>---Select---</MudSelectItem>
                                                @foreach (var cb in CashbondL)
                                                {
                                                    <MudSelectItem Value="@cb.Id">@cb.Name</MudSelectItem>
                                                }
                                            </MudSelect>
                                         </div>
                                     </div>
                                    <div class="d-flex flex-wrap gap-lg-4 gap-sm-2">
                                         <div class="flex-grow-1">
                                             <MudText Typo="Typo.body2">Meal Allowance</MudText>
                                                 <InputText Class="txf1 w-100 mt-1" @bind-Value="payroll.MealAllowance" />
                                                 <ValidationMessage For="@(() => payroll.MealAllowance)" class="mb-2 valmessage" />
                                         </div>
                                          <div class="flex-grow-1">
                                             <MudText Typo="Typo.body2">Biometric Id No.</MudText>
                                             <InputText Class="txf1 w-100 mt-1" @bind-Value="payroll.BiometricID" />
                                                 <ValidationMessage For="@(() => payroll.BiometricID)" class="mb-2 valmessage" />
                                         </div>
                                         <div class="flex-grow-1">
                                             <MudText Typo="Typo.body2">Bank Account</MudText>
                                                <InputText Class="txf1 w-100 mt-1" MaxLength="10" @bind-Value="payroll.BankAcc" />
                                                 <ValidationMessage For="@(() => payroll.BankAcc)" class="mb-2 valmessage" />
                                         </div>
                                     </div>
                                 </div>
                            </div>
                        </MudCardContent>
                    </MudCard>
                </MudItem>
                <MudItem xs="12" Style="padding-top: 0px;">
                    <MudCard Class="mdcard1" Elevation="0" Style="padding-top: 0px;">
                        <MudCardContent>
                            <div class="d-flex flex-column flex-grow-1">
                                <div class="d-flex flex-grow-1 justify-content-between align-items-center mb-2">
                                     <span class="spantitle">Statutory Documents</span>
                                </div>
                                <div class="mb-3 divSchool">
                                    <div class="d-flex flex-wrap gap-lg-4 gap-sm-2 mb-1">
                                         <div class="flex-grow-1">
                                             <MudText Typo="Typo.body2">PHIC No.</MudText>
                                             <InputText Class="txf1 w-100 mt-1" @bind-Value="payroll.PhilHealthNum" MaxLength="12"/>
                                                 <ValidationMessage For="@(() => payroll.PhilHealthNum)" class="mb-2 valmessage" />
                                         </div>
                                          <div class="flex-grow-1">
                                                <MudText Typo="Typo.body2">HDMF No.</MudText>
                                             <InputText Class="txf1 w-100 mt-1" @bind-Value="payroll.HDMFNum" MaxLength="12"/>
                                                 <ValidationMessage For="@(() => payroll.HDMFNum)" class="mb-2 valmessage" />
                                         </div>
                                     </div>
                                     <div class="d-flex flex-wrap gap-lg-4 gap-sm-2">
                                         <div class="flex-grow-1">
                                             <MudText Typo="Typo.body2">SSS No.</MudText>
                                             <InputText Class="txf1 w-100 mt-1" @bind-Value="payroll.SSSNum" MaxLength="12"/>
                                                 <ValidationMessage For="@(() => payroll.SSSNum)" class="mb-2 valmessage" />
                                         </div>
                                          <div class="flex-grow-1">
                                                <MudText Typo="Typo.body2">TIN No.</MudText>
                                                <InputText Class="txf1 w-100 mt-1" @bind-Value="payroll.TINNum" MaxLength="12" />
                                                 <ValidationMessage For="@(() => payroll.TINNum)" class="mb-2 valmessage" />
                                         </div>
                                     </div>
                                 </div>
                            </div>
                        </MudCardContent>
                    </MudCard>
                </MudItem>
                 <MudItem xs="12" Style="padding-top: 0px;">
                     <MudCard Class="mdcard1" Elevation="0" Style="padding-top: 0px;">
                         <MudCardContent>
                             <div class="d-flex flex-column flex-grow-1">
                                 <div class="d-flex flex-grow-1 justify-content-between align-items-center mb-2">
                                     <span class="spantitle">Schedule</span>
                                 </div>
                                 <div class="mb-3 divSchool">
                                     <div class="d-flex flex-wrap gap-lg-4 gap-sm-2 mb-1">
                                         <div class="flex-grow-1">
                                             <MudText Typo="Typo.body2">Schedule Type</MudText>
                                                <MudSelect Class="@slectClasssST" DisableUnderLine @bind-Value="payroll.ScheduleTypeId" Margin="Margin.Dense">
                                                 <MudSelectItem Value=0 Disabled>---Select---</MudSelectItem>
                                                @foreach (var sched in ScheduleTypeL)
                                                {
                                                    <MudSelectItem Value="@sched.Id">@sched.Name</MudSelectItem>
                                                }
                                            </MudSelect>
                                         </div>
                                         @if (payroll.ScheduleTypeId != 0) {
                                            <div class="flex-grow-1">
                                                <MudText Typo="Typo.body2">Time In</MudText>

                                                @foreach (var item in ScheduleTypeL.Where(s => s.Id == payroll.ScheduleTypeId))
                                                {
                                                    if (item.Id == payroll.ScheduleTypeId)
                                                    {
                                                        <MudTextField @bind-Value="item.TimeIn" Class="txf" DisableUnderLine Margin="Margin.Dense" ReadOnly="true"/>
                                                    }
                                                }
                                            </div>
                                            <div class="flex-grow-1">
                                                <MudText Typo="Typo.body2">Time Out</MudText>

                                                @foreach (var item in ScheduleTypeL.Where(s => s.Id == payroll.ScheduleTypeId))
                                                {
                                                    if (item.Id == payroll.ScheduleTypeId)
                                                    {
                                                        <MudTextField @bind-Value="item.TimeOut" Class="txf" DisableUnderLine Margin="Margin.Dense" ReadOnly="true" />
                                                    }
                                                }
                                            </div>
                                        }
                                        else
                                        {
                                             <div class="flex-grow-1">
                                                <MudText Typo="Typo.body2">Time In</MudText>
                                                <MudTextField T="string" Class="txf" DisableUnderLine Margin="Margin.Dense" ReadOnly="true" />
                                             </div>
                                            <div class="flex-grow-1">
                                                <MudText Typo="Typo.body2">Time Out</MudText>
                                                <MudTextField T="string" Class="txf" DisableUnderLine Margin="Margin.Dense" ReadOnly="true" />
                                             </div>
                                        }

                                     </div>
                                    <div class="d-flex flex-wrap gap-lg-4 gap-sm-2 mb-1 align-items-center">
                                        <div class="flex-grow-1">
                                            <MudText Typo="Typo.body2">Rest Day</MudText>
                                                <MudSelect Class="@slectClasssRD" DisableUnderLine @bind-Value="payroll.RestDayId" Margin="Margin.Dense">
                                                 <MudSelectItem Value=0 Disabled>---Select---</MudSelectItem>
                                                @foreach (var restday in RestDayL)
                                                {
                                                    <MudSelectItem Value="@restday.Id">@restday.Name</MudSelectItem>
                                                }
                                            </MudSelect>
                                         </div>
                                         <MudSpacer/>
                                     </div>
                                 </div>
                             </div>
                         </MudCardContent>
                     </MudCard>
                 </MudItem>
                <MudItem xs="12" Style="padding-top: 0px;">
                    <MudCard Class="mdcard1" Elevation="0" Style="padding-top: 0px;">
                        <MudCardContent>
                            <div class="d-flex flex-column flex-grow-1">
                                <div class="d-flex flex-grow-1 justify-content-between align-items-center mb-2">
                                    <span class="spantitle">Files</span>
                                </div>
                                <div class="mb-3 divSchool">
                                    <div class="d-flex flex-wrap gap-lg-4 gap-sm-2 mb-1">
                                        <div class="flex-grow-1">
                                            @for (int i = 0; i < listOfDocuments.Count; i++)
                                            {
                                                var index = i;
                                                var docs = listOfDocuments[i];
                                                @if (docs.PdfFile != null)
                                                {
                                                <MudText Typo="@Typo.h6">@docs.PdfFile.Count() File@(docs.PdfFile.Count() == 1 ? "" : "s"):</MudText>
                                                <MudList>
                                                    @foreach (var file in docs.PdfFile)
                                                    {
                                                        <MudListItem Icon="@Icons.Material.Filled.AttachFile" @key="@file">

                                                            @file.Name <code>@file.Size bytes</code>
                                                        </MudListItem>
                                                    }
                                                </MudList>
                                                    <MudCardActions Style="display:flex; justify-content: center; padding-bottom:10px; margin-bottom:-15px;">
                                                        <MudFileUpload T="IBrowserFile" OnFilesChanged="e => UpPdfSec12(e, index)" Accept=".pdf">
                                                                <ButtonTemplate Context="fileContext">
                                                                    <MudButton HtmlTag="label" Variant="Variant.Filled" Color="Color.Primary" StartIcon="@Icons.Material.Filled.CloudUpload" for="@fileContext" Style="text-transform: none;">Upload Files</MudButton>
                                                            </ButtonTemplate>
                                                        </MudFileUpload>
                                                    </MudCardActions>
                                                }
                                            }
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </MudCardContent>
                    </MudCard>
                </MudItem>
                <MudItem xs="12" Class="d-flex justify-content-between mt-5">
                        <MudButton StartIcon="@Icons.Material.Rounded.NavigateBefore" Class="btnnext" OnClick="@(()=>Activate2(3))" style="background-color: #C5CFD2;">BACK</MudButton>
                        <MudButton EndIcon="@Icons.Material.Rounded.Save" Class="btnnext" ButtonType="ButtonType.Submit">SUBMIT</MudButton>
                </MudItem>
                </EditForm>
            </MudGrid>
        </MudTabPanel>
    </MudTabs>
</div>
