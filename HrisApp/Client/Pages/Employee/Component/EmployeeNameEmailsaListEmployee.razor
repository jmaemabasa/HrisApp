<style>
    /*EMPLOYMENT AVATAR CLASS*/
    .statusRegular {
        border: 2px solid #9BB67C;
    }

    .statusProbationary {
        border: 2px solid #ebc878;
    }

    .statusCasual {
        border: 2px solid #6096B4;
    }

    .statusFixedTerm {
        border: 2px solid #7F669D;
    }

    .statusProjectBased {
        border: 2px solid #6B240C;
    }
</style>

<MudAvatar Class="@StatusAvatarColor(employee.EmploymentStatus?.Name)">
    <img class="imgavatar" src="@ImageData" style="width: inherit;height: inherit;border-radius: inherit;" />
</MudAvatar>

@code {
    #nullable disable
    [Parameter]
    public string verify { get; set; }
    EmployeeT employee = new();

    private string ImageData;

    protected override async Task OnParametersSetAsync()
    {
        employee = await EmployeeService.GetSingleEmployeeByVerId(verify);
        try
        {
            await EmployeeImg(verify);//image
        }
        catch (Exception)
        {
            if (employee.GenderId == 1)
            {
                ImageData = string.Format("images/avatarmaleholder.jpg");
            }
            else
            {
                ImageData = string.Format("images/avatarfemaleholder.jpg");
            }
        }
    }


    private async Task EmployeeImg(string verifyCode)
    {
        var imagemodel = await ImageService.GetImageData(verifyCode);
        if (imagemodel != null)
        {
            var base642 = Convert.ToBase64String(imagemodel);
            ImageData = string.Format("data:image/png;base64,{0}", base642);
        }
    }

    private static string StatusAvatarColor(string status)
    {
        return status switch
        {
            "Regular" => "statusRegular",
            "Probationary" => "statusProbationary",
            "Casual" => "statusCasual",
            "Fixed Term" => "statusFixedTerm",
            "Project Based" => "statusProjectBased",
            _ => "",
        };
    }
}

