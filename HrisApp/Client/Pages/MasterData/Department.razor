@page "/department"
@inject IDepartmentService DepartmentService
@inject IDivisionService DivisionService
@inject IDialogService DialogService
@attribute [Authorize]

<PageTitle>Department Management</PageTitle>

<div class="mb-5 mt-3">
    <div class="d-flex flex-row mt-5 justify-content-between">
        <h3 class="m-0">Department Management</h3>
        <MudButton OnClick="OpenAddDepartment" Variant="Variant.Filled" Size="Size.Medium" StartIcon="@Icons.Material.Rounded.Add" Class="btnadd">Add Department</MudButton>
    </div>
</div>

<div class="box w-auto">
    <MudTable Class="stable" Items="departmentList" Context="Departments" FixedHeader="true" Elevation="0" Height="620px" HorizontalScrollbar="true" Dense="true" Hover="true" Bordered="false" Striped="true" Filter="new Func<DepartmentT,bool>(FilterFunc1)" @bind-SelectedItem="selectedItem1">
        
        <ToolBarContent>
            <div class="d-flex flex-grow-1 mb-3">
                <div class="d-flex flex-grow-1 flex-wrap justify-content-between">
                    <MudItem xs="12" lg="3">
                        <MudSelect class="dddiv" T="int" ValueChanged="searchh" Margin="Margin.Dense" DisableUnderLine>
                            <MudSelectItem Value=0>All Division</MudSelectItem>
                            @foreach (var div in Divisions)
                            {
                                <MudSelectItem Value="@div.Id">@div.Name</MudSelectItem>
                            }
                        </MudSelect>
                    </MudItem>
                    <MudItem xs="12" lg="4">
                        <MudTextField DisableUnderLine @bind-Value="searchString1" Placeholder="Search" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="tsearch mb-5" Immediate=true Margin="Margin.Dense" />
                    </MudItem>
                </div>
            </div>        
        </ToolBarContent>
        <HeaderContent>
             <MudTh Class="col-4" Style="background: #e9ecef;">
                <div class="d-flex justify-content-between">
                    <div class="" >Division</div>
                    <div class="">
                        <MudIcon Icon="@Icons.Material.Filled.KeyboardArrowRight" Title="Favorite" />
                    </div>
                </div>
            </MudTh>
             <MudTh Class="col-4" Style="font-weight: bold; background: #e9ecef;">Department</MudTh>
             <MudTh Style="background: #e9ecef;">Action</MudTh>
        </HeaderContent>
        <RowTemplate>

            <MudTd DataLabel="Division">
                <div class="d-flex justify-content-between">
                    @foreach (var div in DivisionService.DivisionTs)
                    {
                        if (div.Id == Departments.DivisionId)
                        {
                            <div class="">@div.Name</div>
                        }
                    }
                    <div class="">
                        <MudIcon Icon="@Icons.Material.Filled.KeyboardArrowRight" Title="Favorite" Style="margin-left: 20px; color: #90A4AE;" />
                    </div>
                </div>
            </MudTd>
            <MudTd DataLabel="Department" Style="font-weight: bold;">@Departments.Name</MudTd>

            <MudTd>
                <MudIconButton Class="btnedit" OnClick="(() => OpenUpdateDepartment(Departments.Id))" Icon="@Icons.Material.Rounded.Edit" aria-label="Edit"></MudIconButton>
            </MudTd>

        </RowTemplate>
        <PagerContent>
            <MudTablePager PageSizeOptions="new int[] { 10, 25, int.MaxValue }" InfoFormat="@($"Right {infoFormat}")" HorizontalAlignment="HorizontalAlignment.Right" />
        </PagerContent>
    </MudTable>
</div>



@code {
    private int searchDiv;

    private async Task searchh(int div)
    {
        await Task.Delay(10);
        if (div == 0)
        {
            await DepartmentService.GetDepartment();
            departmentList = DepartmentService.DepartmentTs;
        }
        else
        {
            departmentList = await DepartmentService.GetDeptByDivision(div);
        }

    }
}