<MudDialog>
    <DialogContent>
        <MudTextField Label="Name" @bind-Value="obj.External_Name" Variant="Variant.Outlined"></MudTextField>
    </DialogContent>
    <DialogActions>
        <div style="padding: 5px 13px 11px 13px;">
            <button type="button" class="btn cancel" @onclick="Cancel">Cancel</button>
            <button type="button" class="save btn" @onclick="UpdateObj">Save</button>
        </div>
    </DialogActions>
</MudDialog>


@code {
    #nullable disable
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }
    [Parameter]
    public int Id { get; set; }


    private PosMPExternalT obj = new();


    void Cancel() => MudDialog.Cancel();


    protected override async Task OnParametersSetAsync()
    {
        //division = DivisionService.DivisionTs.Find(d => d.Id == Id);
        obj = await ManpowerService.GetSingleExternal(Id);
    }

    async Task UpdateObj()
    {
        if (obj == null)
            return;

        if (string.IsNullOrWhiteSpace(obj.External_Name))
        {
            // await ShowErrorMessageBox("Please enter a valid name!");
            GlobalConfigService.OpenWarningDialog("Please enter a valid name.");
        }
        else
        {
            MudDialog.Close();

            var confirmResult = await Swal.FireAsync(new SweetAlertOptions
                {
                    Title = "Confirmation",
                    Text = "Are you sure you want to update the " + obj.External_Name + "?",
                    Icon = SweetAlertIcon.Question,
                    ShowCancelButton = true,
                    ConfirmButtonText = "Yes",
                    CancelButtonText = "No"
                });

            if (confirmResult.IsConfirmed)
            {
                await ManpowerService.UpdateExternal(obj);
                await AuditlogService.CreateLog(Int32.Parse(GlobalConfigService.User_Id), "UPDATE", "Content", DateTime.Now);

                _toastService.ShowSuccess(obj.External_Name + " Updated Successfully!");

                await ManpowerService.GetExternal();
                var newList = ManpowerService.PosMPExternalTs;
                StateService.SetState("ExternalList", newList);
            }
        }
    }
}
