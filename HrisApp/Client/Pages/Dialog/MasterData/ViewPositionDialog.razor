<style>
    .divsingledetails {
        background-color: #424242;
        padding: 7px 15px 7px 15px;
        border-radius: 10px;
    }

    .cont {
        background-color: #FAFAF5;
        padding-top: 10px;
    }

    .mud-chip-outlined {
        color: #fafaf5 !important;
    }

    .clsemployee{
        cursor: pointer;
    }

    .clsemployee:hover {
        background-color: rgba(250, 250, 245, .1);
    }
</style>


<MudDialog Style="background-color: #FAFAF5">
    <DialogContent>
        <MudTabs Elevation="0" Rounded="true" ApplyEffectsToContainer="true" PanelClass="pa-6" >
            <MudTabPanel Text="Additional Info">
                <div class="d-flex flex-column gap-2 cont mb-1">
                    <span style="margin-bottom: 5px; font-size: 16px; color: #424242"><b>Additional Info</b></span>
                    @if (position.PositionType == "Permanent")
                    {
                        <div class="divsingledetails mb-1">
                            <MudText Align="Align.Start" Style="color: #FAFAF5;" Typo="Typo.caption">Position Type</MudText>
                            <MudText Align="Align.Start" Style="color: #FAFAF5; font-weight:bold;" Typo="Typo.body2">@(string.IsNullOrWhiteSpace(position.PositionType) ? "No Information." : position.PositionType)</MudText>
                            </div>
                    }
                    else
                    {
                        <div class="d-flex gap-2 mb-1">
                            <div class="divsingledetails col-6">
                                <MudText Align="Align.Start" Style="color: #FAFAF5;" Typo="Typo.caption">Position Type</MudText>
                                <MudText Align="Align.Start" Style="color: #FAFAF5; font-weight:bold;" Typo="Typo.body2">@(string.IsNullOrWhiteSpace(position.PositionType) ? "No Information." : position.PositionType)</MudText>
                                </div>
                                <div class="divsingledetails col-6">
                                    <MudText Align="Align.Start" Style="color: #FAFAF5;" Typo="Typo.caption">Duration</MudText>
                                    <MudText Align="Align.Start" Style="color: #FAFAF5; font-weight:bold;" Typo="Typo.body2">@(string.IsNullOrWhiteSpace(position.TemporaryDuration) ? "No Information." : position.TemporaryDuration)</MudText>
                                </div>
                            </div>
                    }
                    <span style="font-size: 16px; color: #424242"><b>Manpower Sourcing</b></span>

                    @if (position.Manpower == "Internal")
                    {
                        <div class="divsingledetails mb-1">
                            <MudText Align="Align.Start" Style="color: #FAFAF5;" Typo="Typo.caption">Manpower Source</MudText>
                            <MudText Align="Align.Start" Style="color: #FAFAF5; font-weight:bold;" Typo="Typo.body2">@position.Manpower</MudText>
                        </div>
                    }
                    else
                    {
                        <div class="d-flex gap-2 mb-1">
                            <div class="divsingledetails col-6">
                                <MudText Align="Align.Start" Style="color: #FAFAF5;" Typo="Typo.caption">Manpower Source</MudText>
                                <MudText Align="Align.Start" Style="color: #FAFAF5; font-weight:bold;" Typo="Typo.body2">@position.Manpower</MudText>
                            </div>
                            <div class="divsingledetails col-6">
                                <MudText Align="Align.Start" Style="color: #FAFAF5;" Typo="Typo.caption">Agency</MudText>
                                @if (position.PosMPExternalId == 0)
                                {
                                    <MudText Align="Align.Start" Style="color: #FAFAF5; font-weight:bold;" Typo="Typo.body2">No Information.</MudText>
                                }
                                else
                                {
                                    @foreach (var item in ExternalsL)
                                    {
                                        if (item.Id == position.PosMPExternalId)
                                        {
                                            <MudText Align="Align.Start" Style="color: #FAFAF5; font-weight:bold;" Typo="Typo.body2">@item.External_Name</MudText>
                                        }
                                    }
                                }
                            </div>
                        </div>
                    }
                    <span style="margin-bottom: 5px; font-size: 16px; color: #424242"><b>Positions</b></span>
                    <div class="d-flex flex-column gap-2">
                        @foreach (var item in SubPositionsL)
                        {
                            <div class="divsingledetails d-flex gap-2">
                                <div class="col-3 border border-info border-start-0 border-top-0 border-bottom-0">
                                    <MudText Align="Align.Start" Style="color: #FAFAF5;" Typo="Typo.caption">@item.Description</MudText>
                                    <MudText Align="Align.Start" Style="color: #FAFAF5; font-weight:bold;" Typo="Typo.body2">@item.SubPosCode</MudText>
                                </div>
                                <div class="col-2 border border-info border-start-0 border-top-0 border-bottom-0">
                                    <MudText Align="Align.Start" Style="color: #FAFAF5;" Typo="Typo.caption">Status</MudText>
                                    <MudText Align="Align.Start" Style="color: #FAFAF5; font-weight:bold;" Typo="Typo.body2">
                                        @if (item.Status == "Active")
                                        {
                                            <span style="color: #00C853">@item.Status</span>
                                        }else
                                        {
                                            <span style="color: #F44336">@item.Status</span>
                                        }
                                    </MudText>
                                </div>

                                @if (item.Status == "Active" || (item.Status == "Inactive" && item.Emp_VerifyId != ""))
                                {
                                    <div class="col-2 border border-info border-start-0 border-top-0 border-bottom-0">
                                        <MudText Align="Align.Start" Style="color: #FAFAF5;" Typo="Typo.caption">Active Date</MudText>
                                        <MudText Align="Align.Start" Style="color: #FAFAF5; font-weight:bold;" Typo="Typo.body2">@item.ActiveDate?.ToString("MM/dd/yyyy")</MudText>
                                    </div>
                                    <div class="col-3 clsemployee border border-info border-start-0 border-top-0 border-bottom-0" @onclick="@(() => GoToEmployee(item.Emp_VerifyId))">
                                        <EmployeeinPosition verify="@item.Emp_VerifyId" />
                                    </div>
                                }
                               
                                @if (item.InActiveDate != null)
                                {
                                    <div class="">
                                        <MudText Align="Align.Start" Style="color: #FAFAF5;" Typo="Typo.caption">Inactive Date</MudText>
                                        <MudText Align="Align.Start" Style="color: #FAFAF5; font-weight:bold;" Typo="Typo.body2">@item.InActiveDate?.ToString("MM/dd/yyyy")</MudText>
                                    </div>
                                }
                            </div>
                        }
                    </div>
                </div>
            </MudTabPanel>
            <MudTabPanel Text="Qualification Requirements">
                <div class="d-flex flex-column gap-2 cont">
                    <span style="font-size: 16px; color: #424242"><b>Qualication Requirements</b></span>
                        <div class="divsingledetails">
                            <MudText Align="Align.Start" Style="color: #FAFAF5;" Typo="Typo.caption">Job Summary</MudText>
                            <MudText Align="Align.Start" Style="color: #FAFAF5; font-weight:bold;" Typo="Typo.body2">@(string.IsNullOrWhiteSpace(position.JobSummary) ? "No Information." : position.JobSummary)</MudText>
                        </div>
                        <div class="divsingledetails d-flex flex-column">
                            <MudText Align="Align.Start" Style="color: #FAFAF5;" Typo="Typo.caption">Education</MudText>
                            <div class="d-flex flex-wrap">
                                @if (EducL.Count != 0)
                                {
                                @foreach (var item in EducL)
                                    {
                                        <MudChip Text="orange" Variant="Variant.Filled" Style="color: #424242; background-color: #fafaf5;">@item.EducName</MudChip>
                                    }
                                }
                                else
                                {
                                    <span style="font-weight: bold;color: #fafaf5">No Information</span>
                                }
                            </div>
                        </div>
                        <div class="divsingledetails d-flex flex-column">
                            <MudText Align="Align.Start" Style="color: #FAFAF5;" Typo="Typo.caption">Work Experience</MudText>
                            <div class="d-flex flex-wrap">
                                @if (WorkExpL.Count != 0)
                            {
                                @foreach (var item in WorkExpL)
                                {
                                    <MudChip Text="orange" Variant="Variant.Filled" Style="color: #424242; background-color: #fafaf5;">@item.ExpName</MudChip>
                                }
                            }
                            else
                            {
                                <span style="font-weight: bold;color: #fafaf5">No Information</span>
                            }
                            </div>
                        </div>
                    <div class="divsingledetails d-flex flex-column">
                        <MudText Align="Align.Start" Style="color: #FAFAF5;" Typo="Typo.caption">Technical Skills</MudText>
                        <div class="d-flex flex-wrap">
                            @if (TechSkillsL.Count != 0)
                            {
                                @foreach (var item in TechSkillsL)
                                {
                                    <MudChip Text="orange" Variant="Variant.Filled" Color="Color.Secondary">@item.SkillName</MudChip>
                                }
                            }
                            else
                            {
                                <span style="font-weight: bold;color: #fafaf5">No Information</span>
                            }
                        </div>
                    </div>
                    <div class="divsingledetails d-flex flex-column">
                        <MudText Align="Align.Start" Style="color: #FAFAF5;" Typo="Typo.caption">Knowledge Of</MudText>
                        <div class="d-flex flex-wrap">
                            @if (KnowledgesL.Count != 0)
                            {
                                @foreach (var item in KnowledgesL)
                                {
                                    <MudChip Text="orange" Variant="Variant.Filled" Color="Color.Info">@item.KnowName</MudChip>
                                }
                            }
                            else
                            {
                                <span style="font-weight: bold;color: #fafaf5">No Information</span>
                            }
                        </div>
                    </div>
                    <div class="divsingledetails d-flex flex-column">
                        <MudText Align="Align.Start" Style="color: #FAFAF5;" Typo="Typo.caption">Computer Application</MudText>
                        <div class="d-flex flex-wrap">
                            @if (ComAppsL.Count != 0)
                            {
                                @foreach (var item in ComAppsL)
                                {
                                    <MudChip Text="orange" Variant="Variant.Filled" Color="Color.Tertiary">@item.ComName</MudChip>
                                }
                            }
                            else
                            {
                                <span style="font-weight: bold;color: #fafaf5">No Information</span>
                            }
                        </div>
                    </div>
                    <div class="divsingledetails">
                        <MudText Align="Align.Start" Style="color: #FAFAF5;" Typo="Typo.caption">Other Compotencies</MudText>
                        <MudText Align="Align.Start" Style="color: #FAFAF5; font-weight:bold;" Typo="Typo.body2">@(string.IsNullOrWhiteSpace(position.OtherCompetencies) ? "No Information." : position.OtherCompetencies)</MudText>
                        </div>
                        <div class="divsingledetails">
                            <MudText Align="Align.Start" Style="color: #FAFAF5;" Typo="Typo.caption">Restrictions</MudText>
                            <MudText Align="Align.Start" Style="color: #FAFAF5; font-weight:bold;" Typo="Typo.body2">@(string.IsNullOrWhiteSpace(position.Restrictions) ? "No Information." : position.Restrictions)</MudText>
                        </div>
                    </div>
            </MudTabPanel>
        </MudTabs>
        </DialogContent>
        <DialogActions>
            <MudButton Color="Color.Primary" OnClick="Close">Ok</MudButton>
        </DialogActions>
    </MudDialog>

    @code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }
    [Parameter]
    public int Id { get; set; }

    public string InternalName = "";
    public string ExternalName = "";

    PositionT position = new();

    private List<AreaT> AreasL = new();
    private List<PosMPInternalT> InternalsL = new();
    private List<PosMPExternalT> ExternalsL = new();
    private List<PositionTechSkillT> TechSkillsL = new();
    private List<PositionKnowledgeT> KnowledgesL = new();
    private List<PositionComAppT> ComAppsL = new();
    private List<PositionWorkExpT> WorkExpL = new();
    private List<PositionEducT> EducL = new();
    private List<SubPositionT> SubPositionsL = new();
    private List<EmployeeT> EmployeesL = new();


    protected override async Task OnInitializedAsync()
    {
        await AreaService.GetArea();
        AreasL = AreaService.AreaTs;

        await ManpowerService.GetInternal();
        InternalsL = ManpowerService.PosMPInternalTs;

        await ManpowerService.GetExternal();
        ExternalsL = ManpowerService.PosMPExternalTs;

        await PositionService.GetSubPosition();

        await EmployeeService.GetEmployee();
        EmployeesL = EmployeeService.EmployeeTs;

    }

    protected override async Task OnParametersSetAsync()
    {
        position = await PositionService.GetSinglePosition((int)Id);
        TechSkillsL = await PositionService.GetTechSkill(position.PosCode);
        KnowledgesL = await PositionService.GetKnowledge(position.PosCode);
        ComAppsL = await PositionService.GetComApp(position.PosCode);
        WorkExpL = await PositionService.GetWorkExp(position.PosCode);
        EducL = await PositionService.GetEduc(position.PosCode);

        SubPositionsL = PositionService.SubPositionTs.Where(x => x.PosCode == position.PosCode).ToList();
    }


    void Close() => MudDialog.Close(DialogResult.Ok(true));
    void GoToEmployee(string verid)
    {
        foreach (var item in EmployeesL)
        {
            if (item.Verify_Id == verid)
            {
                NavigationManager.NavigateTo($"/employee/edit/{item.Id}");
            }
        }
       
    }
}
