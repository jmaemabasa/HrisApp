<MudDialog>
    <DialogContent>
        @* Select Division *@
        <div class="d-flex flex-column divcont">
            <div class="d-flex flex-column">
                <div class="flex-grow-1">
                    <MudText Typo="Typo.body2">Division</MudText>
                    <MudSelect @bind-Value="selectedDivision" Variant="Variant.Outlined" Margin="Margin.Dense" Style="margin-bottom:5px;">
                        <MudSelectItem Disabled="true" Value="0">---Select Division---</MudSelectItem>
                        @foreach (var div in Division)
                        {
                            <MudSelectItem Value="@div.Id">@div.Name</MudSelectItem>
                        }
                    </MudSelect>
                </div>
                @if (selectedDivision != 0)
                {
                    var selectedCategoryObject = Division.FirstOrDefault(c => c.Id == selectedDivision);
                    if (selectedCategoryObject != null)
                    {
                        var departments = Department.Where(d => d.DivisionId == selectedCategoryObject.Id).ToList();
                        @* Select Department *@
                        <div class="flex-grow-1">
                            <MudText Typo="Typo.body2">Department</MudText>
                            <MudSelect @bind-Value="selectedDepartment" Variant="Variant.Outlined" Margin="Margin.Dense" Style="margin-bottom:5px;">
                                <MudSelectItem Disabled="true" Value="0">---Select Department---</MudSelectItem>
                                @foreach (var department in departments)
                                {
                                    <MudSelectItem Value="@department.Id">@department.Name</MudSelectItem>
                                }
                            </MudSelect>
                        </div>
                    }
                }

                @if (selectedDepartment != 0)
                {
                    var departmentHasSections = Sections.Any(s => s.DepartmentId == selectedDepartment);
                    if (departmentHasSections)
                    {
                        var departmentSections = Sections.Where(s => s.DepartmentId == selectedDepartment).ToList();
                        @* Select Section *@
                        <div class="flex-grow-1">
                            <MudText Typo="Typo.body2">Section</MudText>
                            <MudSelect @bind-Value="selectedSection" Variant="Variant.Outlined" Margin="Margin.Dense" Style="margin-bottom: 5px;">
                                <MudSelectItem Disabled="true" Value="0">---Select Section---</MudSelectItem>
                                @foreach (var sec in departmentSections)
                                {
                                    <MudSelectItem Value="@sec.Id">@sec.Name</MudSelectItem>
                                }
                            </MudSelect>
                        </div>

                        if (selectedSection != 0)
                        {
                            <div class="flex-grow-1">
                                <MudText Typo="Typo.body2">Position</MudText>
                                <MudSelect T="int" ValueChanged="PosChange" Variant="Variant.Outlined" Margin="Margin.Dense" Style="margin-bottom:5px;">
                                    <MudSelectItem Disabled="true" Value="0">---Select Position---</MudSelectItem>
                                    @foreach (var div in Positions.Where(x => x.DivisionId == selectedDivision && x.DepartmentId == selectedDepartment && x.SectionId == selectedSection))
                                    {
                                        <MudSelectItem Value="@div.Id">@div.Name</MudSelectItem>
                                    }
                                </MudSelect>
                            </div>
                            <div class="flex-grow-1">
                                <MudText Typo="Typo.body2">Code</MudText>
                                <MudTextField @bind-Value="Roles_Code" ReadOnly Variant="Variant.Outlined" Margin="Margin.Dense" Style="margin-bottom: 5px;" />
                            </div>

                            <div class="flex-grow-1">
                                <MudText Typo="Typo.body2">Reporting To</MudText>
                                <MudSelect T="string" @bind-Value="@selecteReportTo" HelperText="Code / Description" Variant="Variant.Outlined" Margin="Margin.Dense" Style="margin-bottom:5px;">
                                    <MudSelectItem Disabled="true" Value="selecteReportToHolder">---Select---</MudSelectItem>
                                    @foreach (var subPos in SubPositions.Where(subPos =>
                                   {
                                       var correspondingPosition = Positions.FirstOrDefault(pos => pos.PosCode == subPos.PosCode);
                                       return correspondingPosition != null && correspondingPosition.Supervisory == "Yes";
                                   }).Where(x => x.DivisionId == selectedDivision && x.DepartmentId == selectedDepartment && x.SectionId == selectedSection))
                                    {
                                        <MudSelectItem Value="@subPos.SubPosCode">@subPos.SubPosCode / @subPos.Description</MudSelectItem>
                                    }
                                </MudSelect>
                            </div>

                        }
                    }
                    else
                    {
                        <div class="flex-grow-1">
                            <MudText Typo="Typo.body2">Position</MudText>
                            <MudSelect T="int" ValueChanged="PosChange" Variant="Variant.Outlined" Margin="Margin.Dense" Style="margin-bottom:5px;">
                                <MudSelectItem Disabled="true" Value="0">---Select Position---</MudSelectItem>
                                @foreach (var div in Positions.Where(x => x.DivisionId == selectedDivision && x.DepartmentId == selectedDepartment))
                                {
                                    <MudSelectItem Value="@div.Id">@div.Name</MudSelectItem>
                                }
                            </MudSelect>
                        </div>
                        <div class="flex-grow-1">
                            <MudText Typo="Typo.body2">Code</MudText>
                            <MudTextField @bind-Value="Roles_Code" ReadOnly Variant="Variant.Outlined" Margin="Margin.Dense" Style="margin-bottom: 5px;" />
                        </div>

                        <div class="flex-grow-1">
                            <MudText Typo="Typo.body2">Reporting To</MudText>
                            <MudSelect T="string" @bind-Value="@selecteReportTo" HelperText="Code / Description" Variant="Variant.Outlined" Margin="Margin.Dense" Style="margin-bottom:5px;">
                                <MudSelectItem Disabled="true" Value="selecteReportToHolder">---Select---</MudSelectItem>
                                @foreach (var subPos in SubPositions.Where(subPos =>
                                {
                                    var correspondingPosition = Positions.FirstOrDefault(pos => pos.PosCode == subPos.PosCode);
                                    return correspondingPosition != null && correspondingPosition.Supervisory == "Yes";
                                }).Where(x => x.DivisionId == selectedDivision && x.DepartmentId == selectedDepartment))
                                {
                                    <MudSelectItem Value="@subPos.SubPosCode">@subPos.SubPosCode / @subPos.Description</MudSelectItem>
                                }
                            </MudSelect>
                        </div>
                    }
                }


            </div>
        </div>
    </DialogContent>
    <DialogActions>
        <div style="padding: 5px 13px 11px 13px;">
            <button type="button" class="btn cancel" @onclick="Cancel">Cancel</button>
            <button type="button" class="save btn" @onclick="ConfirmCreatePositionAsync">Save</button>
        </div>
    </DialogActions>
</MudDialog>
