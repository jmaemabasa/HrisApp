// <auto-generated />
using System;
using HrisApp.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HrisApp.Server.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240226085846_MainAssAcc1")]
    partial class MainAssAcc1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.22")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("HrisApp.Shared.Models.Announcement.AnnouncementT", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Ann_Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ann_Desc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ann_Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateEnd")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateStart")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StatusId");

                    b.ToTable("AnnouncementT");
                });

            modelBuilder.Entity("HrisApp.Shared.Models.App_Education.App_CollegeT", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CollAward")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CollCourse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CollSchoolLoc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CollSchoolName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CollSchoolYear")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Verify_Id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("App_CollegeT");
                });

            modelBuilder.Entity("HrisApp.Shared.Models.App_Education.App_DoctorateT", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("DocAward")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocCourse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocSchoolLoc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocSchoolName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocSchoolYear")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Verify_Id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("App_DoctorateT");
                });

            modelBuilder.Entity("HrisApp.Shared.Models.App_Education.App_MasteralT", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("MasAward")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MasCourse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MasSchoolLoc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MasSchoolName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MasSchoolYear")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Verify_Id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("App_MasteralT");
                });

            modelBuilder.Entity("HrisApp.Shared.Models.App_Education.App_OtherEducT", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("OthersAward")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OthersCourse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OthersSchoolLoc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OthersSchoolName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OthersSchoolType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OthersSchoolYear")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Verify_Id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("App_OtherEducT");
                });

            modelBuilder.Entity("HrisApp.Shared.Models.App_Education.App_PrimaryT", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("PriAward")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PriSchoolLoc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PriSchoolName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PriSchoolYear")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Verify_Id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("App_PrimaryT");
                });

            modelBuilder.Entity("HrisApp.Shared.Models.App_Education.App_SecondaryT", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("SecAward")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecSchoolLoc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecSchoolName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecSchoolYear")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Verify_Id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("App_SecondaryT");
                });

            modelBuilder.Entity("HrisApp.Shared.Models.App_Education.App_SeniorHST", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ShsAward")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShsSchoolLoc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShsSchoolName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShsSchoolYear")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Verify_Id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("App_SeniorHST");
                });

            modelBuilder.Entity("HrisApp.Shared.Models.App_LiscenseAndTraining.App_LicenseT", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Examination")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LicenseNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rating")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Verify_Id")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("App_LicenseT");
                });

            modelBuilder.Entity("HrisApp.Shared.Models.App_LiscenseAndTraining.App_TrainingT", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("SponsorSpeaker")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TrainingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TrainingName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Verify_Id")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("App_TrainingT");
                });

            modelBuilder.Entity("HrisApp.Shared.Models.Application.App_AddressT", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CurrentAdd")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrentBrgy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrentCity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrentCountry")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrentProvince")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrentZipCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PermanentAdd")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PermanentBrgy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PermanentCity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PermanentCountry")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PermanentProvince")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PermanentZipCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Verify_Id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("App_AddressT");
                });

            modelBuilder.Entity("HrisApp.Shared.Models.Application.App_Family.App_ChildrenT", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("App_ChildrenName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("App_ChildrenOccupation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("App_VerifyId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("App_ChildrenT");
                });

            modelBuilder.Entity("HrisApp.Shared.Models.Application.App_Family.App_SiblingT", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("App_SiblingName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("App_SiblingOccupation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("App_VerifyId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("App_SiblingT");
                });

            modelBuilder.Entity("HrisApp.Shared.Models.Application.App_LiscenseAndTraining.App_OtherAwardsT", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("DateReceived")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Verify_Id")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("App_OtherAwardsT");
                });

            modelBuilder.Entity("HrisApp.Shared.Models.Application.App_ProfBackground.App_ProfBackgroundT", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("App_BasicSalary")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("App_CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("App_DateFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("App_DateTo")
                        .HasColumnType("datetime2");

                    b.Property<string>("App_Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("App_RSLeaving")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("App_VerifyId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("App_ProfBackgroundT");
                });

            modelBuilder.Entity("HrisApp.Shared.Models.Application.App_SelfDeclarationT", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("App_VerifyId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Q1Ans")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Q1Dtls")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Q2Ans")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Q2Dtls")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Q3Ans")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Q3Dtls")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Q4Ans")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Q4Dtls")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Q5Ans")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Q5Dtls")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Q6Ans")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Q6Dtls")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Q7Ans")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Q7Dtls")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Q8Ans")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Q8Dtls")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("App_SelfDeclarationT");
                });

            modelBuilder.Entity("HrisApp.Shared.Models.Application.ApplicantT", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("App_Age")
                        .HasColumnType("int");

                    b.Property<string>("App_Citizenship")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("App_CivilStatusId")
                        .HasColumnType("int");

                    b.Property<string>("App_ContactNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("App_DOB")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("App_Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("App_EmerAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("App_EmerMobNum")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("App_EmerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("App_EmerRelationshipId")
                        .HasColumnType("int");

                    b.Property<string>("App_ExpSalary")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("App_FatherName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("App_FatherOccupation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("App_FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("App_GenderId")
                        .HasColumnType("int");

                    b.Property<int?>("App_Height")
                        .HasColumnType("int");

                    b.Property<string>("App_LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("App_MiddleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("App_MotherName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("App_MotherOccupation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("App_PagIbig")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("App_Philhealth")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("App_PosApplied1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("App_PosApplied2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("App_PresSalary")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("App_ReligionId")
                        .HasColumnType("int");

                    b.Property<string>("App_SSS")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("App_SourceApp")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("App_SpouseName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("App_SpouseOccupation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("App_Suffix")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("App_TIN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("App_VerifyId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("App_Weight")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateApplied")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("App_CivilStatusId");

                    b.HasIndex("App_EmerRelationshipId");

                    b.HasIndex("App_GenderId");

                    b.HasIndex("App_ReligionId");

                    b.ToTable("ApplicantT");
                });

            modelBuilder.Entity("HrisApp.Shared.Models.Assets.AssetAccessoryT", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Asset")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AssetStatusId")
                        .HasColumnType("int");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<string>("EUF")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("InUseStatusDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("MainAssetDateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("MainAssetId")
                        .HasColumnType("int");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("PurchaseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Remarks")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Serial")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StatusDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("SubCategoryId")
                        .HasColumnType("int");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AssetStatusId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("MainAssetId");

                    b.HasIndex("SubCategoryId");

                    b.HasIndex("TypeId");

                    b.ToTable("AssetAccessoryT");
                });

            modelBuilder.Entity("HrisApp.Shared.Models.Assets.AssetCategoryT", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ACat_Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ACat_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AssetCategoryT");
                });

            modelBuilder.Entity("HrisApp.Shared.Models.Assets.AssetMasterT", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Asset")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AssetNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AssetStatusId")
                        .HasColumnType("int");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("ClientIP")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeviceID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("InUseStatusDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastCheckDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MacAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordAdmin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Processor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PurchaseAmount")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("PurchaseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RAM")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Serial")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StatusDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Storage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StorageType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SubCategoryId")
                        .HasColumnType("int");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.Property<string>("UsernameAdmin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorksationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AssetStatusId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("SubCategoryId");

                    b.HasIndex("TypeId");

                    b.ToTable("AssetMasterT");
                });

            modelBuilder.Entity("HrisApp.Shared.Models.Assets.AssetSubCategoryT", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ASubCat_Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ASubCat_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("AssetSubCategoryT");
                });

            modelBuilder.Entity("HrisApp.Shared.Models.Assets.AssetTypesT", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AType_Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AType_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AssetTypesT");
                });

            modelBuilder.Entity("HrisApp.Shared.Models.Assets.MainAssetAccessoriesT", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AssetAccessoryId")
                        .HasColumnType("int");

                    b.Property<string>("AssetMasterCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AssetMasterId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateStatusChanged")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUsed")
                        .HasColumnType("datetime2");

                    b.Property<int>("SubCategoryId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AssetAccessoryId");

                    b.HasIndex("AssetMasterId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("SubCategoryId");

                    b.ToTable("MainAssetAccessoriesT");
                });

            modelBuilder.Entity("HrisApp.Shared.Models.Attendance.AttendanceRecordT", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AC_No")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Exception")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NewState")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Operation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Time")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("AttendanceRecordT");
                });

            modelBuilder.Entity("HrisApp.Shared.Models.Attendance.ShiftTimetableT", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<TimeSpan?>("Begin_C_In")
                        .IsRequired()
                        .HasColumnType("time");

                    b.Property<TimeSpan?>("Begin_C_Out")
                        .IsRequired()
                        .HasColumnType("time");

                    b.Property<TimeSpan?>("Ending_C_In")
                        .IsRequired()
                        .HasColumnType("time");

                    b.Property<TimeSpan?>("Ending_C_Out")
                        .IsRequired()
                        .HasColumnType("time");

                    b.Property<int>("Late_Time")
                        .HasColumnType("int");

                    b.Property<int>("LeaveEarly_Time")
                        .HasColumnType("int");

                    b.Property<int>("Minute_Count")
                        .HasColumnType("int");

                    b.Property<bool>("Must_C_In")
                        .HasColumnType("bit");

                    b.Property<bool>("Must_C_Out")
                        .HasColumnType("bit");

                    b.Property<TimeSpan?>("OffDuty_Time")
                        .IsRequired()
                        .HasColumnType("time");

                    b.Property<TimeSpan?>("OnDuty_Time")
                        .IsRequired()
                        .HasColumnType("time");

                    b.Property<string>("Timetable_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Workday_Count")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ShiftTimetableT");
                });

            modelBuilder.Entity("HrisApp.Shared.Models.Audit.AuditlogsT", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeUserId")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeUserId");

                    b.ToTable("AuditlogsT");
                });

            modelBuilder.Entity("HrisApp.Shared.Models.Dashboard.DailyTotalPlantillaT", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("TotalPlantilla")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("DailyTotalPlantillaT");
                });

            modelBuilder.Entity("HrisApp.Shared.Models.Emp_Education.Emp_CollegeT", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CollAward")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CollCourse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CollSchoolLoc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CollSchoolName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CollSchoolYear")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Verify_Id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Emp_CollegeT");
                });

            modelBuilder.Entity("HrisApp.Shared.Models.Emp_Education.Emp_DoctorateT", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("DocAward")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocCourse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocSchoolLoc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocSchoolName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocSchoolYear")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Verify_Id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Emp_DoctorateT");
                });

            modelBuilder.Entity("HrisApp.Shared.Models.Emp_Education.Emp_MasteralT", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("MasAward")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MasCourse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MasSchoolLoc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MasSchoolName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MasSchoolYear")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Verify_Id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Emp_MasteralT");
                });

            modelBuilder.Entity("HrisApp.Shared.Models.Emp_Education.Emp_OtherEducT", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("OthersAward")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OthersCourse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OthersSchoolLoc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OthersSchoolName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OthersSchoolType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OthersSchoolYear")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Verify_Id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Emp_OtherEducT");
                });

            modelBuilder.Entity("HrisApp.Shared.Models.Emp_Education.Emp_PrimaryT", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("PriAward")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PriSchoolLoc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PriSchoolName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PriSchoolYear")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Verify_Id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Emp_PrimaryT");
                });

            modelBuilder.Entity("HrisApp.Shared.Models.Emp_Education.Emp_SecondaryT", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("SecAward")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecSchoolLoc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecSchoolName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecSchoolYear")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Verify_Id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Emp_SecondaryT");
                });

            modelBuilder.Entity("HrisApp.Shared.Models.Emp_Education.Emp_SeniorHST", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ShsAward")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShsSchoolLoc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShsSchoolName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShsSchoolYear")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Verify_Id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Emp_SeniorHST");
                });

            modelBuilder.Entity("HrisApp.Shared.Models.Emp_LiscenseAndTraining.Emp_LicenseT", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Examination")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LicenseNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rating")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Verify_Id")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Emp_LicenseT");
                });

            modelBuilder.Entity("HrisApp.Shared.Models.Emp_LiscenseAndTraining.Emp_TrainingT", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("SponsorSpeaker")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TrainingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TrainingName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Verify_Id")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Emp_TrainingT");
                });

            modelBuilder.Entity("HrisApp.Shared.Models.Emp_Payroll.Emp_PayrollT", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("BankAcc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BiometricID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CashbondId")
                        .HasColumnType("int");

                    b.Property<string>("HDMFNum")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MealAllowance")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Paytype")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhilHealthNum")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RateTypeId")
                        .HasColumnType("int");

                    b.Property<int>("RestDayId")
                        .HasColumnType("int");

                    b.Property<string>("SSSNum")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Salary")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ScheduleTypeId")
                        .HasColumnType("int");

                    b.Property<string>("TINNum")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Verify_Id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CashbondId");

                    b.HasIndex("RateTypeId");

                    b.HasIndex("RestDayId");

                    b.HasIndex("ScheduleTypeId");

                    b.ToTable("Emp_PayrollT");
                });

            modelBuilder.Entity("HrisApp.Shared.Models.Employee.Emp_AddressT", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CurrentAdd")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrentBrgy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrentCity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrentCountry")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrentProvince")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrentZipCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PermanentAdd")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PermanentBrgy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PermanentCity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PermanentCountry")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PermanentProvince")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PermanentZipCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Verify_Id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Emp_AddressT");
                });

            modelBuilder.Entity("HrisApp.Shared.Models.Employee.Emp_EmploymentDateT", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("CasualEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CasualStartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmpmentStatusId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FixedEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FixedStartDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ProbationEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ProbationStartDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ProjEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ProjStartDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("RegularizationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ResignationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Verify_Id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Emp_EmploymentDateT");
                });

            modelBuilder.Entity("HrisApp.Shared.Models.Employee.Emp_EvaluationT", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("DateEvaluate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateHired")
                        .HasColumnType("datetime2");

                    b.Property<string>("Eval1Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Eval2Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Eval3Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Eval4Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Eval5Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Eval6Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EvalStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TimesEvaluate")
                        .HasColumnType("int");

                    b.Property<string>("Verify_Id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Emp_EvaluationT");
                });

            modelBuilder.Entity("HrisApp.Shared.Models.Employee.Emp_LeaveCreditT", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("EL")
                        .HasColumnType("int");

                    b.Property<int>("ML")
                        .HasColumnType("int");

                    b.Property<int>("OL")
                        .HasColumnType("int");

                    b.Property<int>("PL")
                        .HasColumnType("int");

                    b.Property<int>("SL")
                        .HasColumnType("int");

                    b.Property<int>("VL")
                        .HasColumnType("int");

                    b.Property<string>("Verify_Id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Emp_LeaveCreditT");
                });

            modelBuilder.Entity("HrisApp.Shared.Models.Employee.Emp_LeaveHistoryT", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("From")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("InsertedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("LeaveType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoOfDays")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Purpose")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReadStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("To")
                        .HasColumnType("datetime2");

                    b.Property<string>("Verify_Id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Emp_LeaveHistoryT");
                });

            modelBuilder.Entity("HrisApp.Shared.Models.Employee.Emp_PosHistoryT", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("DateEnded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateStarted")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("NewAreaId")
                        .HasColumnType("int");

                    b.Property<int>("NewDepartmentId")
                        .HasColumnType("int");

                    b.Property<int>("NewDivisionId")
                        .HasColumnType("int");

                    b.Property<int>("NewPositionId")
                        .HasColumnType("int");

                    b.Property<int>("NewSectionId")
                        .HasColumnType("int");

                    b.Property<string>("Verify_Id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("newPositionCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Emp_PosHistoryT");
                });

            modelBuilder.Entity("HrisApp.Shared.Models.Employee.Emp_ProfBackgroundT", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("BasicSalary")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateTo")
                        .HasColumnType("datetime2");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RSLeaving")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Verify_Id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Emp_ProfBackgroundT");
                });

            modelBuilder.Entity("HrisApp.Shared.Models.Employee.EmployeeT", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<int>("AreaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Birthdate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CivilStatusId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateHired")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateInactiveStatus")
                        .HasColumnType("datetime2");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<int>("DivisionId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmerAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmerMobNum")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmerRelationshipId")
                        .HasColumnType("int");

                    b.Property<string>("EmployeeNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmploymentStatusId")
                        .HasColumnType("int");

                    b.Property<string>("Extension")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GenderId")
                        .HasColumnType("int");

                    b.Property<int?>("Height")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MobileNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nationality")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PositionId")
                        .HasColumnType("int");

                    b.Property<int>("ReligionId")
                        .HasColumnType("int");

                    b.Property<int>("SectionId")
                        .HasColumnType("int");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<string>("Verify_Id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Weight")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AreaId");

                    b.HasIndex("CivilStatusId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("DivisionId");

                    b.HasIndex("EmerRelationshipId");

                    b.HasIndex("EmploymentStatusId");

                    b.HasIndex("GenderId");

                    b.HasIndex("ReligionId");

                    b.HasIndex("StatusId");

                    b.ToTable("EmployeeT");
                });

            modelBuilder.Entity("HrisApp.Shared.Models.Images.DocumentT", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<int>("DivisionId")
                        .HasColumnType("int");

                    b.Property<string>("EmployeeNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Img_Contenttype")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Img_Data")
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTime>("Img_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Img_Filename")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Img_URL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Verify_Id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("DivisionId");

                    b.ToTable("DocumentT");
                });

            modelBuilder.Entity("HrisApp.Shared.Models.Images.EmpPictureT", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<int>("DivisionId")
                        .HasColumnType("int");

                    b.Property<string>("EmployeeNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Img_Contenttype")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Img_Data")
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTime>("Img_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Img_Filename")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Img_URL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Verify_Id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("DivisionId");

                    b.ToTable("EmpPictureT");
                });

            modelBuilder.Entity("HrisApp.Shared.Models.MasterData.AreaT", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AreaT");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Davao"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Digos"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Kidapawan"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Cotabato"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Calinan"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Gumalang"
                        });
                });

            modelBuilder.Entity("HrisApp.Shared.Models.MasterData.DepartmentT", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("DivisionId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DepartmentT");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DivisionId = 1,
                            Name = "Sonic 1"
                        },
                        new
                        {
                            Id = 2,
                            DivisionId = 1,
                            Name = "Sonic 2"
                        },
                        new
                        {
                            Id = 3,
                            DivisionId = 1,
                            Name = "Sonic 3 Digos"
                        },
                        new
                        {
                            Id = 4,
                            DivisionId = 1,
                            Name = "Sonic 3 Kidapawan"
                        },
                        new
                        {
                            Id = 5,
                            DivisionId = 1,
                            Name = "Sonic 3 Cotabato"
                        },
                        new
                        {
                            Id = 6,
                            DivisionId = 1,
                            Name = "URIC"
                        },
                        new
                        {
                            Id = 7,
                            DivisionId = 1,
                            Name = "UFS"
                        },
                        new
                        {
                            Id = 8,
                            DivisionId = 1,
                            Name = "GCash"
                        },
                        new
                        {
                            Id = 9,
                            DivisionId = 2,
                            Name = "General Accounting"
                        },
                        new
                        {
                            Id = 10,
                            DivisionId = 2,
                            Name = "Sales Accounting"
                        },
                        new
                        {
                            Id = 11,
                            DivisionId = 2,
                            Name = "Information Technology"
                        },
                        new
                        {
                            Id = 12,
                            DivisionId = 2,
                            Name = "Treasury"
                        },
                        new
                        {
                            Id = 16,
                            DivisionId = 3,
                            Name = "Warehouse"
                        },
                        new
                        {
                            Id = 17,
                            DivisionId = 3,
                            Name = "Transport"
                        },
                        new
                        {
                            Id = 18,
                            DivisionId = 3,
                            Name = "Inventory Planning and Principal Relations"
                        },
                        new
                        {
                            Id = 19,
                            DivisionId = 3,
                            Name = "Order Processing"
                        },
                        new
                        {
                            Id = 20,
                            DivisionId = 3,
                            Name = "Logistics"
                        },
                        new
                        {
                            Id = 21,
                            DivisionId = 4,
                            Name = "Human Resource"
                        },
                        new
                        {
                            Id = 22,
                            DivisionId = 4,
                            Name = "General Services"
                        },
                        new
                        {
                            Id = 23,
                            DivisionId = 5,
                            Name = "Canaan"
                        },
                        new
                        {
                            Id = 24,
                            DivisionId = 5,
                            Name = "RTL"
                        },
                        new
                        {
                            Id = 25,
                            DivisionId = 5,
                            Name = "Pullet"
                        });
                });

            modelBuilder.Entity("HrisApp.Shared.Models.MasterData.DivisionT", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DivisionT");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Sales Operations"
                        },
                        new
                        {
                            Id = 2,
                            Name = "FAMS"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Supply Chain Management Service"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Central Administration"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Agro Industrial"
                        });
                });

            modelBuilder.Entity("HrisApp.Shared.Models.MasterData.LeaveTypesT", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Unit")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("LeaveTypesT");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "EL",
                            Description = "Day",
                            Name = "Emergency",
                            Unit = 1.0
                        },
                        new
                        {
                            Id = 2,
                            Code = "ML",
                            Description = "Day",
                            Name = "Maternity",
                            Unit = 1.0
                        },
                        new
                        {
                            Id = 3,
                            Code = "PL",
                            Description = "Day",
                            Name = "Paternity",
                            Unit = 1.0
                        },
                        new
                        {
                            Id = 4,
                            Code = "SL",
                            Description = "Day",
                            Name = "Sick",
                            Unit = 1.0
                        },
                        new
                        {
                            Id = 5,
                            Code = "VL",
                            Description = "Day",
                            Name = "Vacation",
                            Unit = 1.0
                        },
                        new
                        {
                            Id = 6,
                            Code = "OL",
                            Description = "Day",
                            Name = "Other",
                            Unit = 1.0
                        });
                });

            modelBuilder.Entity("HrisApp.Shared.Models.MasterData.PositionComAppT", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ComName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PosCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VerifyId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PositionComAppT");
                });

            modelBuilder.Entity("HrisApp.Shared.Models.MasterData.PositionEducT", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("EducName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PosCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VerifyId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PositionEducT");
                });

            modelBuilder.Entity("HrisApp.Shared.Models.MasterData.PositionKnowledgeT", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("KnowName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PosCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VerifyId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PositionKnowledgeT");
                });

            modelBuilder.Entity("HrisApp.Shared.Models.MasterData.PositionT", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AreaId")
                        .HasColumnType("int");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<int>("DivisionId")
                        .HasColumnType("int");

                    b.Property<string>("JobSummary")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Manpower")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherCompetencies")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Plantilla")
                        .HasColumnType("int");

                    b.Property<string>("PosCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PosEducation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PosMPExternalId")
                        .HasColumnType("int");

                    b.Property<string>("PositionType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Restrictions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SectionId")
                        .HasColumnType("int");

                    b.Property<string>("TemporaryDuration")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VerifyId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkExperience")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PositionT");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AreaId = 1,
                            DepartmentId = 1,
                            DivisionId = 1,
                            JobSummary = "",
                            Manpower = "Internal",
                            Name = "FSS",
                            OtherCompetencies = "",
                            Plantilla = 1,
                            PosCode = "S101",
                            PosEducation = "",
                            PosMPExternalId = 0,
                            PositionType = "",
                            Restrictions = "",
                            SectionId = 0,
                            TemporaryDuration = "",
                            VerifyId = "",
                            WorkExperience = ""
                        },
                        new
                        {
                            Id = 2,
                            AreaId = 1,
                            DepartmentId = 1,
                            DivisionId = 1,
                            JobSummary = "",
                            Manpower = "Internal",
                            Name = "Feeder",
                            OtherCompetencies = "",
                            Plantilla = 2,
                            PosCode = "S102",
                            PosEducation = "",
                            PosMPExternalId = 0,
                            PositionType = "",
                            Restrictions = "",
                            SectionId = 0,
                            TemporaryDuration = "",
                            VerifyId = "",
                            WorkExperience = ""
                        },
                        new
                        {
                            Id = 3,
                            AreaId = 1,
                            DepartmentId = 1,
                            DivisionId = 1,
                            JobSummary = "",
                            Manpower = "Internal",
                            Name = "FCCR",
                            OtherCompetencies = "",
                            Plantilla = 2,
                            PosCode = "S103",
                            PosEducation = "",
                            PosMPExternalId = 0,
                            PositionType = "",
                            Restrictions = "",
                            SectionId = 0,
                            TemporaryDuration = "",
                            VerifyId = "",
                            WorkExperience = ""
                        },
                        new
                        {
                            Id = 4,
                            AreaId = 1,
                            DepartmentId = 4,
                            DivisionId = 1,
                            JobSummary = "",
                            Manpower = "Internal",
                            Name = "FSS",
                            OtherCompetencies = "",
                            Plantilla = 1,
                            PosCode = "S3K01",
                            PosEducation = "",
                            PosMPExternalId = 0,
                            PositionType = "",
                            Restrictions = "",
                            SectionId = 0,
                            TemporaryDuration = "",
                            VerifyId = "",
                            WorkExperience = ""
                        },
                        new
                        {
                            Id = 5,
                            AreaId = 1,
                            DepartmentId = 4,
                            DivisionId = 1,
                            JobSummary = "",
                            Manpower = "Internal",
                            Name = "DT Booking/ GT Booking",
                            OtherCompetencies = "",
                            Plantilla = 1,
                            PosCode = "S3K02",
                            PosEducation = "",
                            PosMPExternalId = 0,
                            PositionType = "",
                            Restrictions = "",
                            SectionId = 0,
                            TemporaryDuration = "",
                            VerifyId = "",
                            WorkExperience = ""
                        },
                        new
                        {
                            Id = 6,
                            AreaId = 1,
                            DepartmentId = 4,
                            DivisionId = 1,
                            JobSummary = "",
                            Manpower = "Internal",
                            Name = "DSS",
                            OtherCompetencies = "",
                            Plantilla = 1,
                            PosCode = "S3K03",
                            PosEducation = "",
                            PosMPExternalId = 0,
                            PositionType = "",
                            Restrictions = "",
                            SectionId = 0,
                            TemporaryDuration = "",
                            VerifyId = "",
                            WorkExperience = ""
                        },
                        new
                        {
                            Id = 7,
                            AreaId = 1,
                            DepartmentId = 4,
                            DivisionId = 1,
                            JobSummary = "",
                            Manpower = "Internal",
                            Name = "PM Salesman",
                            OtherCompetencies = "",
                            Plantilla = 1,
                            PosCode = "S3K04",
                            PosEducation = "",
                            PosMPExternalId = 0,
                            PositionType = "",
                            Restrictions = "",
                            SectionId = 0,
                            TemporaryDuration = "",
                            VerifyId = "",
                            WorkExperience = ""
                        },
                        new
                        {
                            Id = 8,
                            AreaId = 1,
                            DepartmentId = 4,
                            DivisionId = 1,
                            JobSummary = "",
                            Manpower = "Internal",
                            Name = "OMNI Feeder",
                            OtherCompetencies = "",
                            Plantilla = 3,
                            PosCode = "S3K05",
                            PosEducation = "",
                            PosMPExternalId = 0,
                            PositionType = "",
                            Restrictions = "",
                            SectionId = 0,
                            TemporaryDuration = "",
                            VerifyId = "",
                            WorkExperience = ""
                        },
                        new
                        {
                            Id = 9,
                            AreaId = 1,
                            DepartmentId = 4,
                            DivisionId = 1,
                            JobSummary = "",
                            Manpower = "Internal",
                            Name = "FCCR",
                            OtherCompetencies = "",
                            Plantilla = 1,
                            PosCode = "S3K06",
                            PosEducation = "",
                            PosMPExternalId = 0,
                            PositionType = "",
                            Restrictions = "",
                            SectionId = 0,
                            TemporaryDuration = "",
                            VerifyId = "",
                            WorkExperience = ""
                        },
                        new
                        {
                            Id = 10,
                            AreaId = 1,
                            DepartmentId = 5,
                            DivisionId = 1,
                            JobSummary = "",
                            Manpower = "Internal",
                            Name = "FSS",
                            OtherCompetencies = "",
                            Plantilla = 1,
                            PosCode = "S3C01",
                            PosEducation = "",
                            PosMPExternalId = 0,
                            PositionType = "",
                            Restrictions = "",
                            SectionId = 0,
                            TemporaryDuration = "",
                            VerifyId = "",
                            WorkExperience = ""
                        },
                        new
                        {
                            Id = 11,
                            AreaId = 1,
                            DepartmentId = 5,
                            DivisionId = 1,
                            JobSummary = "",
                            Manpower = "Internal",
                            Name = "DT Booking/ GT Booking",
                            OtherCompetencies = "",
                            Plantilla = 2,
                            PosCode = "S3C02",
                            PosEducation = "",
                            PosMPExternalId = 0,
                            PositionType = "",
                            Restrictions = "",
                            SectionId = 0,
                            TemporaryDuration = "",
                            VerifyId = "",
                            WorkExperience = ""
                        },
                        new
                        {
                            Id = 12,
                            AreaId = 1,
                            DepartmentId = 5,
                            DivisionId = 1,
                            JobSummary = "",
                            Manpower = "Internal",
                            Name = "DSS",
                            OtherCompetencies = "",
                            Plantilla = 1,
                            PosCode = "S3C03",
                            PosEducation = "",
                            PosMPExternalId = 0,
                            PositionType = "",
                            Restrictions = "",
                            SectionId = 0,
                            TemporaryDuration = "",
                            VerifyId = "",
                            WorkExperience = ""
                        },
                        new
                        {
                            Id = 13,
                            AreaId = 1,
                            DepartmentId = 5,
                            DivisionId = 1,
                            JobSummary = "",
                            Manpower = "Internal",
                            Name = "OMNI Feeder",
                            OtherCompetencies = "",
                            Plantilla = 3,
                            PosCode = "S3C04",
                            PosEducation = "",
                            PosMPExternalId = 0,
                            PositionType = "",
                            Restrictions = "",
                            SectionId = 0,
                            TemporaryDuration = "",
                            VerifyId = "",
                            WorkExperience = ""
                        },
                        new
                        {
                            Id = 14,
                            AreaId = 1,
                            DepartmentId = 5,
                            DivisionId = 1,
                            JobSummary = "",
                            Manpower = "Internal",
                            Name = "FCCR",
                            OtherCompetencies = "",
                            Plantilla = 1,
                            PosCode = "S3C05",
                            PosEducation = "",
                            PosMPExternalId = 0,
                            PositionType = "",
                            Restrictions = "",
                            SectionId = 0,
                            TemporaryDuration = "",
                            VerifyId = "",
                            WorkExperience = ""
                        },
                        new
                        {
                            Id = 15,
                            AreaId = 1,
                            DepartmentId = 6,
                            DivisionId = 1,
                            JobSummary = "",
                            Manpower = "Internal",
                            Name = "Operations Manager",
                            OtherCompetencies = "",
                            Plantilla = 1,
                            PosCode = "URIC01",
                            PosEducation = "",
                            PosMPExternalId = 0,
                            PositionType = "",
                            Restrictions = "",
                            SectionId = 0,
                            TemporaryDuration = "",
                            VerifyId = "",
                            WorkExperience = ""
                        },
                        new
                        {
                            Id = 16,
                            AreaId = 1,
                            DepartmentId = 6,
                            DivisionId = 1,
                            JobSummary = "",
                            Manpower = "Internal",
                            Name = "HAPI Supervisor",
                            OtherCompetencies = "",
                            Plantilla = 1,
                            PosCode = "URICHAP01",
                            PosEducation = "",
                            PosMPExternalId = 0,
                            PositionType = "",
                            Restrictions = "",
                            SectionId = 4,
                            TemporaryDuration = "",
                            VerifyId = "",
                            WorkExperience = ""
                        },
                        new
                        {
                            Id = 17,
                            AreaId = 1,
                            DepartmentId = 6,
                            DivisionId = 1,
                            JobSummary = "",
                            Manpower = "Internal",
                            Name = "HAPI Dealer Coor",
                            OtherCompetencies = "",
                            Plantilla = 4,
                            PosCode = "URICHAP02",
                            PosEducation = "",
                            PosMPExternalId = 0,
                            PositionType = "",
                            Restrictions = "",
                            SectionId = 4,
                            TemporaryDuration = "",
                            VerifyId = "",
                            WorkExperience = ""
                        },
                        new
                        {
                            Id = 18,
                            AreaId = 1,
                            DepartmentId = 6,
                            DivisionId = 1,
                            JobSummary = "",
                            Manpower = "Internal",
                            Name = "Field Sales Supervisor",
                            OtherCompetencies = "",
                            Plantilla = 1,
                            PosCode = "URICSER01",
                            PosEducation = "",
                            PosMPExternalId = 0,
                            PositionType = "",
                            Restrictions = "",
                            SectionId = 5,
                            TemporaryDuration = "",
                            VerifyId = "",
                            WorkExperience = ""
                        },
                        new
                        {
                            Id = 19,
                            AreaId = 1,
                            DepartmentId = 6,
                            DivisionId = 1,
                            JobSummary = "",
                            Manpower = "Internal",
                            Name = "MAG Supervisor",
                            OtherCompetencies = "",
                            Plantilla = 1,
                            PosCode = "URICSER02",
                            PosEducation = "",
                            PosMPExternalId = 0,
                            PositionType = "",
                            Restrictions = "",
                            SectionId = 5,
                            TemporaryDuration = "",
                            VerifyId = "",
                            WorkExperience = ""
                        },
                        new
                        {
                            Id = 20,
                            AreaId = 1,
                            DepartmentId = 6,
                            DivisionId = 1,
                            JobSummary = "",
                            Manpower = "Internal",
                            Name = "GTAS",
                            OtherCompetencies = "",
                            Plantilla = 5,
                            PosCode = "URICSER03",
                            PosEducation = "",
                            PosMPExternalId = 0,
                            PositionType = "",
                            Restrictions = "",
                            SectionId = 5,
                            TemporaryDuration = "",
                            VerifyId = "",
                            WorkExperience = ""
                        },
                        new
                        {
                            Id = 21,
                            AreaId = 1,
                            DepartmentId = 6,
                            DivisionId = 1,
                            JobSummary = "",
                            Manpower = "Internal",
                            Name = "SMS",
                            OtherCompetencies = "",
                            Plantilla = 11,
                            PosCode = "URICSER04",
                            PosEducation = "",
                            PosMPExternalId = 0,
                            PositionType = "",
                            Restrictions = "",
                            SectionId = 5,
                            TemporaryDuration = "",
                            VerifyId = "",
                            WorkExperience = ""
                        },
                        new
                        {
                            Id = 22,
                            AreaId = 1,
                            DepartmentId = 6,
                            DivisionId = 1,
                            JobSummary = "",
                            Manpower = "Internal",
                            Name = "NAO Supervisor",
                            OtherCompetencies = "",
                            Plantilla = 1,
                            PosCode = "URICEXP01",
                            PosEducation = "",
                            PosMPExternalId = 0,
                            PositionType = "",
                            Restrictions = "",
                            SectionId = 6,
                            TemporaryDuration = "",
                            VerifyId = "",
                            WorkExperience = ""
                        },
                        new
                        {
                            Id = 23,
                            AreaId = 1,
                            DepartmentId = 6,
                            DivisionId = 1,
                            JobSummary = "",
                            Manpower = "Internal",
                            Name = "NAO",
                            OtherCompetencies = "",
                            Plantilla = 2,
                            PosCode = "URICEXP02",
                            PosEducation = "",
                            PosMPExternalId = 0,
                            PositionType = "",
                            Restrictions = "",
                            SectionId = 6,
                            TemporaryDuration = "",
                            VerifyId = "",
                            WorkExperience = ""
                        },
                        new
                        {
                            Id = 24,
                            AreaId = 1,
                            DepartmentId = 6,
                            DivisionId = 1,
                            JobSummary = "",
                            Manpower = "Internal",
                            Name = "HAPI NAO",
                            OtherCompetencies = "",
                            Plantilla = 4,
                            PosCode = "URICEXP02",
                            PosEducation = "",
                            PosMPExternalId = 0,
                            PositionType = "",
                            Restrictions = "",
                            SectionId = 6,
                            TemporaryDuration = "",
                            VerifyId = "",
                            WorkExperience = ""
                        },
                        new
                        {
                            Id = 25,
                            AreaId = 1,
                            DepartmentId = 6,
                            DivisionId = 1,
                            JobSummary = "",
                            Manpower = "Internal",
                            Name = "IT & Support Services Staff",
                            OtherCompetencies = "",
                            Plantilla = 1,
                            PosCode = "URICDTE01",
                            PosEducation = "",
                            PosMPExternalId = 0,
                            PositionType = "",
                            Restrictions = "",
                            SectionId = 7,
                            TemporaryDuration = "",
                            VerifyId = "",
                            WorkExperience = ""
                        },
                        new
                        {
                            Id = 26,
                            AreaId = 1,
                            DepartmentId = 6,
                            DivisionId = 1,
                            JobSummary = "",
                            Manpower = "Internal",
                            Name = "Teleservices Support Staff / Online Coor",
                            OtherCompetencies = "",
                            Plantilla = 1,
                            PosCode = "URICDTE02",
                            PosEducation = "",
                            PosMPExternalId = 0,
                            PositionType = "",
                            Restrictions = "",
                            SectionId = 7,
                            TemporaryDuration = "",
                            VerifyId = "",
                            WorkExperience = ""
                        },
                        new
                        {
                            Id = 27,
                            AreaId = 1,
                            DepartmentId = 8,
                            DivisionId = 1,
                            JobSummary = "",
                            Manpower = "Internal",
                            Name = "Field Sales Manager",
                            OtherCompetencies = "",
                            Plantilla = 1,
                            PosCode = "GCASH01",
                            PosEducation = "",
                            PosMPExternalId = 0,
                            PositionType = "",
                            Restrictions = "",
                            SectionId = 0,
                            TemporaryDuration = "",
                            VerifyId = "",
                            WorkExperience = ""
                        },
                        new
                        {
                            Id = 28,
                            AreaId = 1,
                            DepartmentId = 8,
                            DivisionId = 1,
                            JobSummary = "",
                            Manpower = "Internal",
                            Name = "Field Sales Supervisor",
                            OtherCompetencies = "",
                            Plantilla = 1,
                            PosCode = "GCASH02",
                            PosEducation = "",
                            PosMPExternalId = 0,
                            PositionType = "",
                            Restrictions = "",
                            SectionId = 0,
                            TemporaryDuration = "",
                            VerifyId = "",
                            WorkExperience = ""
                        },
                        new
                        {
                            Id = 29,
                            AreaId = 1,
                            DepartmentId = 8,
                            DivisionId = 1,
                            JobSummary = "",
                            Manpower = "Internal",
                            Name = "Field Sales Supervisor",
                            OtherCompetencies = "",
                            Plantilla = 1,
                            PosCode = "GCASHSER01",
                            PosEducation = "",
                            PosMPExternalId = 0,
                            PositionType = "",
                            Restrictions = "",
                            SectionId = 8,
                            TemporaryDuration = "",
                            VerifyId = "",
                            WorkExperience = ""
                        },
                        new
                        {
                            Id = 30,
                            AreaId = 1,
                            DepartmentId = 8,
                            DivisionId = 1,
                            JobSummary = "",
                            Manpower = "Internal",
                            Name = "Sonic DSP",
                            OtherCompetencies = "",
                            Plantilla = 4,
                            PosCode = "GCASHSER02",
                            PosEducation = "",
                            PosMPExternalId = 0,
                            PositionType = "",
                            Restrictions = "",
                            SectionId = 8,
                            TemporaryDuration = "",
                            VerifyId = "",
                            WorkExperience = ""
                        },
                        new
                        {
                            Id = 31,
                            AreaId = 1,
                            DepartmentId = 8,
                            DivisionId = 1,
                            JobSummary = "",
                            Manpower = "Internal",
                            Name = "DSP (Commando/Incubator)",
                            OtherCompetencies = "",
                            Plantilla = 6,
                            PosCode = "GCASHSER03",
                            PosEducation = "",
                            PosMPExternalId = 0,
                            PositionType = "",
                            Restrictions = "",
                            SectionId = 8,
                            TemporaryDuration = "",
                            VerifyId = "",
                            WorkExperience = ""
                        },
                        new
                        {
                            Id = 32,
                            AreaId = 1,
                            DepartmentId = 8,
                            DivisionId = 1,
                            JobSummary = "",
                            Manpower = "Internal",
                            Name = "Ambassador",
                            OtherCompetencies = "",
                            Plantilla = 2,
                            PosCode = "GCASHEXP01",
                            PosEducation = "",
                            PosMPExternalId = 0,
                            PositionType = "",
                            Restrictions = "",
                            SectionId = 9,
                            TemporaryDuration = "",
                            VerifyId = "",
                            WorkExperience = ""
                        },
                        new
                        {
                            Id = 33,
                            AreaId = 1,
                            DepartmentId = 8,
                            DivisionId = 1,
                            JobSummary = "",
                            Manpower = "Internal",
                            Name = "Merchandiser",
                            OtherCompetencies = "",
                            Plantilla = 3,
                            PosCode = "GCASHMER01",
                            PosEducation = "",
                            PosMPExternalId = 0,
                            PositionType = "",
                            Restrictions = "",
                            SectionId = 10,
                            TemporaryDuration = "",
                            VerifyId = "",
                            WorkExperience = ""
                        },
                        new
                        {
                            Id = 34,
                            AreaId = 1,
                            DepartmentId = 8,
                            DivisionId = 1,
                            JobSummary = "",
                            Manpower = "Internal",
                            Name = "Scan to Pay",
                            OtherCompetencies = "",
                            Plantilla = 3,
                            PosCode = "GCASHSCA01",
                            PosEducation = "",
                            PosMPExternalId = 0,
                            PositionType = "",
                            Restrictions = "",
                            SectionId = 11,
                            TemporaryDuration = "",
                            VerifyId = "",
                            WorkExperience = ""
                        },
                        new
                        {
                            Id = 35,
                            AreaId = 1,
                            DepartmentId = 9,
                            DivisionId = 2,
                            JobSummary = "",
                            Manpower = "Internal",
                            Name = "Team Leader/Supervisor",
                            OtherCompetencies = "",
                            Plantilla = 1,
                            PosCode = "GAINV01",
                            PosEducation = "",
                            PosMPExternalId = 0,
                            PositionType = "",
                            Restrictions = "",
                            SectionId = 12,
                            TemporaryDuration = "",
                            VerifyId = "",
                            WorkExperience = ""
                        },
                        new
                        {
                            Id = 36,
                            AreaId = 1,
                            DepartmentId = 9,
                            DivisionId = 2,
                            JobSummary = "",
                            Manpower = "Internal",
                            Name = "Trade Payable Staff",
                            OtherCompetencies = "",
                            Plantilla = 2,
                            PosCode = "GAINV02",
                            PosEducation = "",
                            PosMPExternalId = 0,
                            PositionType = "",
                            Restrictions = "",
                            SectionId = 12,
                            TemporaryDuration = "",
                            VerifyId = "",
                            WorkExperience = ""
                        },
                        new
                        {
                            Id = 37,
                            AreaId = 1,
                            DepartmentId = 9,
                            DivisionId = 2,
                            JobSummary = "",
                            Manpower = "Internal",
                            Name = "Non Trade Payable Staff",
                            OtherCompetencies = "",
                            Plantilla = 1,
                            PosCode = "GAINV03",
                            PosEducation = "",
                            PosMPExternalId = 0,
                            PositionType = "",
                            Restrictions = "",
                            SectionId = 12,
                            TemporaryDuration = "",
                            VerifyId = "",
                            WorkExperience = ""
                        },
                        new
                        {
                            Id = 38,
                            AreaId = 1,
                            DepartmentId = 9,
                            DivisionId = 2,
                            JobSummary = "",
                            Manpower = "Internal",
                            Name = "Team Leader/Supervisor",
                            OtherCompetencies = "",
                            Plantilla = 1,
                            PosCode = "GAGEN01",
                            PosEducation = "",
                            PosMPExternalId = 0,
                            PositionType = "",
                            Restrictions = "",
                            SectionId = 13,
                            TemporaryDuration = "",
                            VerifyId = "",
                            WorkExperience = ""
                        },
                        new
                        {
                            Id = 39,
                            AreaId = 1,
                            DepartmentId = 9,
                            DivisionId = 2,
                            JobSummary = "",
                            Manpower = "Internal",
                            Name = "Gen Accounting Staff",
                            OtherCompetencies = "",
                            Plantilla = 3,
                            PosCode = "GAGEN02",
                            PosEducation = "",
                            PosMPExternalId = 0,
                            PositionType = "",
                            Restrictions = "",
                            SectionId = 13,
                            TemporaryDuration = "",
                            VerifyId = "",
                            WorkExperience = ""
                        },
                        new
                        {
                            Id = 40,
                            AreaId = 1,
                            DepartmentId = 9,
                            DivisionId = 2,
                            JobSummary = "",
                            Manpower = "Internal",
                            Name = "Team Leader/Supervisor",
                            OtherCompetencies = "",
                            Plantilla = 1,
                            PosCode = "GATAX01",
                            PosEducation = "",
                            PosMPExternalId = 0,
                            PositionType = "",
                            Restrictions = "",
                            SectionId = 14,
                            TemporaryDuration = "",
                            VerifyId = "",
                            WorkExperience = ""
                        },
                        new
                        {
                            Id = 41,
                            AreaId = 1,
                            DepartmentId = 9,
                            DivisionId = 2,
                            JobSummary = "",
                            Manpower = "Internal",
                            Name = "Tax and Compliance Staff",
                            OtherCompetencies = "",
                            Plantilla = 3,
                            PosCode = "GATAX02",
                            PosEducation = "",
                            PosMPExternalId = 0,
                            PositionType = "",
                            Restrictions = "",
                            SectionId = 14,
                            TemporaryDuration = "",
                            VerifyId = "",
                            WorkExperience = ""
                        },
                        new
                        {
                            Id = 42,
                            AreaId = 1,
                            DepartmentId = 10,
                            DivisionId = 2,
                            JobSummary = "",
                            Manpower = "Internal",
                            Name = "Team Leader",
                            OtherCompetencies = "",
                            Plantilla = 1,
                            PosCode = "SAACC01",
                            PosEducation = "",
                            PosMPExternalId = 0,
                            PositionType = "",
                            Restrictions = "",
                            SectionId = 15,
                            TemporaryDuration = "",
                            VerifyId = "",
                            WorkExperience = ""
                        },
                        new
                        {
                            Id = 43,
                            AreaId = 1,
                            DepartmentId = 10,
                            DivisionId = 2,
                            JobSummary = "",
                            Manpower = "Internal",
                            Name = "Accounts Receivable Staff",
                            OtherCompetencies = "",
                            Plantilla = 4,
                            PosCode = "SAACC02",
                            PosEducation = "",
                            PosMPExternalId = 0,
                            PositionType = "",
                            Restrictions = "",
                            SectionId = 15,
                            TemporaryDuration = "",
                            VerifyId = "",
                            WorkExperience = ""
                        },
                        new
                        {
                            Id = 44,
                            AreaId = 1,
                            DepartmentId = 10,
                            DivisionId = 2,
                            JobSummary = "",
                            Manpower = "Internal",
                            Name = "Credit and Collection Staff",
                            OtherCompetencies = "",
                            Plantilla = 6,
                            PosCode = "SACRE01",
                            PosEducation = "",
                            PosMPExternalId = 0,
                            PositionType = "",
                            Restrictions = "",
                            SectionId = 16,
                            TemporaryDuration = "",
                            VerifyId = "",
                            WorkExperience = ""
                        },
                        new
                        {
                            Id = 45,
                            AreaId = 1,
                            DepartmentId = 10,
                            DivisionId = 2,
                            JobSummary = "",
                            Manpower = "Internal",
                            Name = "C&C - Billings to Customer",
                            OtherCompetencies = "",
                            Plantilla = 1,
                            PosCode = "SACRE02",
                            PosEducation = "",
                            PosMPExternalId = 0,
                            PositionType = "",
                            Restrictions = "",
                            SectionId = 16,
                            TemporaryDuration = "",
                            VerifyId = "",
                            WorkExperience = ""
                        },
                        new
                        {
                            Id = 46,
                            AreaId = 1,
                            DepartmentId = 10,
                            DivisionId = 2,
                            JobSummary = "",
                            Manpower = "Internal",
                            Name = "Billing to Cash Settlement Staff",
                            OtherCompetencies = "",
                            Plantilla = 1,
                            PosCode = "SABIL01",
                            PosEducation = "",
                            PosMPExternalId = 0,
                            PositionType = "",
                            Restrictions = "",
                            SectionId = 17,
                            TemporaryDuration = "",
                            VerifyId = "",
                            WorkExperience = ""
                        },
                        new
                        {
                            Id = 47,
                            AreaId = 1,
                            DepartmentId = 11,
                            DivisionId = 2,
                            JobSummary = "",
                            Manpower = "Internal",
                            Name = "Manager",
                            OtherCompetencies = "",
                            Plantilla = 1,
                            PosCode = "IT01",
                            PosEducation = "",
                            PosMPExternalId = 0,
                            PositionType = "",
                            Restrictions = "",
                            SectionId = 0,
                            TemporaryDuration = "",
                            VerifyId = "",
                            WorkExperience = ""
                        },
                        new
                        {
                            Id = 48,
                            AreaId = 1,
                            DepartmentId = 11,
                            DivisionId = 2,
                            JobSummary = "",
                            Manpower = "Internal",
                            Name = "IT Associate",
                            OtherCompetencies = "",
                            Plantilla = 2,
                            PosCode = "IT02",
                            PosEducation = "",
                            PosMPExternalId = 0,
                            PositionType = "",
                            Restrictions = "",
                            SectionId = 0,
                            TemporaryDuration = "",
                            VerifyId = "",
                            WorkExperience = ""
                        },
                        new
                        {
                            Id = 49,
                            AreaId = 1,
                            DepartmentId = 11,
                            DivisionId = 2,
                            JobSummary = "",
                            Manpower = "Internal",
                            Name = "IT Staff",
                            OtherCompetencies = "",
                            Plantilla = 3,
                            PosCode = "IT03",
                            PosEducation = "",
                            PosMPExternalId = 0,
                            PositionType = "",
                            Restrictions = "",
                            SectionId = 0,
                            TemporaryDuration = "",
                            VerifyId = "",
                            WorkExperience = ""
                        },
                        new
                        {
                            Id = 50,
                            AreaId = 1,
                            DepartmentId = 12,
                            DivisionId = 2,
                            JobSummary = "",
                            Manpower = "Internal",
                            Name = "Cash Operations Head",
                            OtherCompetencies = "",
                            Plantilla = 1,
                            PosCode = "TREASURYCAS01",
                            PosEducation = "",
                            PosMPExternalId = 0,
                            PositionType = "",
                            Restrictions = "",
                            SectionId = 18,
                            TemporaryDuration = "",
                            VerifyId = "",
                            WorkExperience = ""
                        },
                        new
                        {
                            Id = 51,
                            AreaId = 1,
                            DepartmentId = 12,
                            DivisionId = 2,
                            JobSummary = "",
                            Manpower = "Internal",
                            Name = "Davao Cashier",
                            OtherCompetencies = "",
                            Plantilla = 3,
                            PosCode = "TREASURYCAS02",
                            PosEducation = "",
                            PosMPExternalId = 0,
                            PositionType = "",
                            Restrictions = "",
                            SectionId = 18,
                            TemporaryDuration = "",
                            VerifyId = "",
                            WorkExperience = ""
                        },
                        new
                        {
                            Id = 52,
                            AreaId = 1,
                            DepartmentId = 12,
                            DivisionId = 2,
                            JobSummary = "",
                            Manpower = "Internal",
                            Name = "Cotabato Cashier",
                            OtherCompetencies = "",
                            Plantilla = 1,
                            PosCode = "TREASURYCAS03",
                            PosEducation = "",
                            PosMPExternalId = 0,
                            PositionType = "",
                            Restrictions = "",
                            SectionId = 18,
                            TemporaryDuration = "",
                            VerifyId = "",
                            WorkExperience = ""
                        },
                        new
                        {
                            Id = 53,
                            AreaId = 1,
                            DepartmentId = 12,
                            DivisionId = 2,
                            JobSummary = "",
                            Manpower = "Internal",
                            Name = "Kidapawan Cashier",
                            OtherCompetencies = "",
                            Plantilla = 1,
                            PosCode = "TREASURYCAS04",
                            PosEducation = "",
                            PosMPExternalId = 0,
                            PositionType = "",
                            Restrictions = "",
                            SectionId = 18,
                            TemporaryDuration = "",
                            VerifyId = "",
                            WorkExperience = ""
                        },
                        new
                        {
                            Id = 54,
                            AreaId = 1,
                            DepartmentId = 12,
                            DivisionId = 2,
                            JobSummary = "",
                            Manpower = "Internal",
                            Name = "Digos Cashier",
                            OtherCompetencies = "",
                            Plantilla = 1,
                            PosCode = "TREASURYCAS05",
                            PosEducation = "",
                            PosMPExternalId = 0,
                            PositionType = "",
                            Restrictions = "",
                            SectionId = 18,
                            TemporaryDuration = "",
                            VerifyId = "",
                            WorkExperience = ""
                        });
                });

            modelBuilder.Entity("HrisApp.Shared.Models.MasterData.PositionTechSkillT", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("PosCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SkillName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VerifyId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PositionTechSkillT");
                });

            modelBuilder.Entity("HrisApp.Shared.Models.MasterData.PositionWorkExpT", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ExpName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PosCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VerifyId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PositionWorkExpT");
                });

            modelBuilder.Entity("HrisApp.Shared.Models.MasterData.PosMPExternalT", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("External_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("External_VerifyId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PosMPExternalT");
                });

            modelBuilder.Entity("HrisApp.Shared.Models.MasterData.PosMPInternalT", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Internal_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Internal_VerifyId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PosMPInternalT");
                });

            modelBuilder.Entity("HrisApp.Shared.Models.MasterData.ScheduleTypeT", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TimeIn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TimeOut")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ScheduleTypeT");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Regular",
                            TimeIn = "08:00 AM",
                            TimeOut = "05:00 PM"
                        });
                });

            modelBuilder.Entity("HrisApp.Shared.Models.MasterData.SectionT", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<int>("DivisionId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SectionT");

                    b.HasData(
                        new
                        {
                            Id = 4,
                            DepartmentId = 6,
                            DivisionId = 1,
                            Name = "Hapi Dealer"
                        },
                        new
                        {
                            Id = 5,
                            DepartmentId = 6,
                            DivisionId = 1,
                            Name = "Servicing"
                        },
                        new
                        {
                            Id = 6,
                            DepartmentId = 6,
                            DivisionId = 1,
                            Name = "Expansion"
                        },
                        new
                        {
                            Id = 7,
                            DepartmentId = 6,
                            DivisionId = 1,
                            Name = "DTEX"
                        },
                        new
                        {
                            Id = 8,
                            DepartmentId = 8,
                            DivisionId = 1,
                            Name = "Servicing"
                        },
                        new
                        {
                            Id = 9,
                            DepartmentId = 8,
                            DivisionId = 1,
                            Name = "Expansion"
                        },
                        new
                        {
                            Id = 10,
                            DepartmentId = 8,
                            DivisionId = 1,
                            Name = "Merchandising"
                        },
                        new
                        {
                            Id = 11,
                            DepartmentId = 8,
                            DivisionId = 1,
                            Name = "Scan To Pay"
                        },
                        new
                        {
                            Id = 12,
                            DepartmentId = 9,
                            DivisionId = 1,
                            Name = "Inventory and Accnts. Payable"
                        },
                        new
                        {
                            Id = 13,
                            DepartmentId = 9,
                            DivisionId = 1,
                            Name = "General Accounting"
                        },
                        new
                        {
                            Id = 14,
                            DepartmentId = 9,
                            DivisionId = 1,
                            Name = "Tax and Compliance"
                        },
                        new
                        {
                            Id = 15,
                            DepartmentId = 10,
                            DivisionId = 1,
                            Name = "Accounts Receivable"
                        },
                        new
                        {
                            Id = 16,
                            DepartmentId = 10,
                            DivisionId = 1,
                            Name = "Credit and Collection"
                        },
                        new
                        {
                            Id = 17,
                            DepartmentId = 10,
                            DivisionId = 1,
                            Name = "Billing to Cash Settlement"
                        },
                        new
                        {
                            Id = 18,
                            DepartmentId = 12,
                            DivisionId = 1,
                            Name = "Cash Operations"
                        });
                });

            modelBuilder.Entity("HrisApp.Shared.Models.MasterData.SubPositionT", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("ActiveDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("AreaId")
                        .HasColumnType("int");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DivisionId")
                        .HasColumnType("int");

                    b.Property<string>("Emp_VerifyId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("InActiveDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PosCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SectionId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubPosCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SubPositionT");
                });

            modelBuilder.Entity("HrisApp.Shared.Models.StaticData.AssetStatusT", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AssetStatusT");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "IN USED"
                        },
                        new
                        {
                            Id = 2,
                            Name = "NOT USED"
                        },
                        new
                        {
                            Id = 3,
                            Name = "FOR REPAIR"
                        },
                        new
                        {
                            Id = 4,
                            Name = "IN SERVICE CENTER"
                        },
                        new
                        {
                            Id = 5,
                            Name = "FOR DISPOSAL"
                        },
                        new
                        {
                            Id = 6,
                            Name = "DISPOSED"
                        });
                });

            modelBuilder.Entity("HrisApp.Shared.Models.StaticData.CashBondT", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CashBondT");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Yes"
                        },
                        new
                        {
                            Id = 2,
                            Name = "No"
                        });
                });

            modelBuilder.Entity("HrisApp.Shared.Models.StaticData.CivilStatusT", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CivilStatusT");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Single"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Married"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Widowed"
                        });
                });

            modelBuilder.Entity("HrisApp.Shared.Models.StaticData.EmerRelationshipT", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EmerRelationshipT");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Mother"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Father"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Spouse"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Sibling"
                        });
                });

            modelBuilder.Entity("HrisApp.Shared.Models.StaticData.EmploymentStatusT", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EmploymentStatusT");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Regular"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Probationary"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Casual"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Fixed Term"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Project Based"
                        });
                });

            modelBuilder.Entity("HrisApp.Shared.Models.StaticData.GenderT", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("GenderT");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Male"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Female"
                        });
                });

            modelBuilder.Entity("HrisApp.Shared.Models.StaticData.InactiveStatusT", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("InactiveStatusT");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Active"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Resigned"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Terminated"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Awol"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Retired"
                        });
                });

            modelBuilder.Entity("HrisApp.Shared.Models.StaticData.RateTypeT", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RateTypeT");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Monthly"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Daily"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Hourly"
                        });
                });

            modelBuilder.Entity("HrisApp.Shared.Models.StaticData.ReligionT", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ReligionT");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Roman Catholic"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Iglesia ni Cristo"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Evangelicals (PCEC)"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Non-Roman Catholic"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Protestant (NCCP)"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Aglipayan"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Seventh-day Adventist"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Bible Baptist Church"
                        },
                        new
                        {
                            Id = 9,
                            Name = "United Church of Christ in the Philippines"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Jehovah's Witnesses"
                        },
                        new
                        {
                            Id = 11,
                            Name = "None"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Others"
                        });
                });

            modelBuilder.Entity("HrisApp.Shared.Models.StaticData.RestDayT", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RestDayT");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Sunday"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Monday"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Tuesday"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Wednesday"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Thursday"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Friday"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Saturday"
                        });
                });

            modelBuilder.Entity("HrisApp.Shared.Models.StaticData.StatusT", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("StatusT");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Active"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Inactive"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Resigned"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Terminated"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Awol"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Retired"
                        });
                });

            modelBuilder.Entity("HrisApp.Shared.Models.User.UserMasterT", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Emp_VerifyId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("LoginStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("ReferralCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("UserMasterT");
                });

            modelBuilder.Entity("HrisApp.Shared.Models.User.UserRoleT", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserRoleT");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "System Administrator",
                            RoleCode = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Name = "User",
                            RoleCode = "User"
                        },
                        new
                        {
                            Id = 3,
                            Name = "HR",
                            RoleCode = "HR"
                        });
                });

            modelBuilder.Entity("HrisApp.Shared.Models.Announcement.AnnouncementT", b =>
                {
                    b.HasOne("HrisApp.Shared.Models.StaticData.StatusT", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Status");
                });

            modelBuilder.Entity("HrisApp.Shared.Models.Application.ApplicantT", b =>
                {
                    b.HasOne("HrisApp.Shared.Models.StaticData.CivilStatusT", "App_CivilStatus")
                        .WithMany()
                        .HasForeignKey("App_CivilStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HrisApp.Shared.Models.StaticData.EmerRelationshipT", "App_EmerRelationship")
                        .WithMany()
                        .HasForeignKey("App_EmerRelationshipId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HrisApp.Shared.Models.StaticData.GenderT", "App_Gender")
                        .WithMany()
                        .HasForeignKey("App_GenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HrisApp.Shared.Models.StaticData.ReligionT", "App_Religion")
                        .WithMany()
                        .HasForeignKey("App_ReligionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("App_CivilStatus");

                    b.Navigation("App_EmerRelationship");

                    b.Navigation("App_Gender");

                    b.Navigation("App_Religion");
                });

            modelBuilder.Entity("HrisApp.Shared.Models.Assets.AssetAccessoryT", b =>
                {
                    b.HasOne("HrisApp.Shared.Models.StaticData.AssetStatusT", "AssetStatus")
                        .WithMany()
                        .HasForeignKey("AssetStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HrisApp.Shared.Models.Assets.AssetCategoryT", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HrisApp.Shared.Models.Assets.AssetMasterT", "MainAsset")
                        .WithMany()
                        .HasForeignKey("MainAssetId");

                    b.HasOne("HrisApp.Shared.Models.Assets.AssetSubCategoryT", "SubCategory")
                        .WithMany()
                        .HasForeignKey("SubCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HrisApp.Shared.Models.Assets.AssetTypesT", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AssetStatus");

                    b.Navigation("Category");

                    b.Navigation("MainAsset");

                    b.Navigation("SubCategory");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("HrisApp.Shared.Models.Assets.AssetMasterT", b =>
                {
                    b.HasOne("HrisApp.Shared.Models.StaticData.AssetStatusT", "AssetStatus")
                        .WithMany()
                        .HasForeignKey("AssetStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HrisApp.Shared.Models.Assets.AssetCategoryT", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HrisApp.Shared.Models.Assets.AssetSubCategoryT", "SubCategory")
                        .WithMany()
                        .HasForeignKey("SubCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HrisApp.Shared.Models.Assets.AssetTypesT", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AssetStatus");

                    b.Navigation("Category");

                    b.Navigation("SubCategory");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("HrisApp.Shared.Models.Assets.AssetSubCategoryT", b =>
                {
                    b.HasOne("HrisApp.Shared.Models.Assets.AssetCategoryT", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("HrisApp.Shared.Models.Assets.MainAssetAccessoriesT", b =>
                {
                    b.HasOne("HrisApp.Shared.Models.Assets.AssetAccessoryT", "AssetAccessory")
                        .WithMany()
                        .HasForeignKey("AssetAccessoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HrisApp.Shared.Models.Assets.AssetMasterT", "AssetMaster")
                        .WithMany()
                        .HasForeignKey("AssetMasterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HrisApp.Shared.Models.Assets.AssetCategoryT", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HrisApp.Shared.Models.Assets.AssetSubCategoryT", "SubCategory")
                        .WithMany()
                        .HasForeignKey("SubCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AssetAccessory");

                    b.Navigation("AssetMaster");

                    b.Navigation("Category");

                    b.Navigation("SubCategory");
                });

            modelBuilder.Entity("HrisApp.Shared.Models.Audit.AuditlogsT", b =>
                {
                    b.HasOne("HrisApp.Shared.Models.Employee.EmployeeT", "EmployeeUSer")
                        .WithMany()
                        .HasForeignKey("EmployeeUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmployeeUSer");
                });

            modelBuilder.Entity("HrisApp.Shared.Models.Emp_Payroll.Emp_PayrollT", b =>
                {
                    b.HasOne("HrisApp.Shared.Models.StaticData.CashBondT", "Cashbond")
                        .WithMany()
                        .HasForeignKey("CashbondId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HrisApp.Shared.Models.StaticData.RateTypeT", "RateType")
                        .WithMany()
                        .HasForeignKey("RateTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HrisApp.Shared.Models.StaticData.RestDayT", "RestDay")
                        .WithMany()
                        .HasForeignKey("RestDayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HrisApp.Shared.Models.MasterData.ScheduleTypeT", "ScheduleType")
                        .WithMany()
                        .HasForeignKey("ScheduleTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cashbond");

                    b.Navigation("RateType");

                    b.Navigation("RestDay");

                    b.Navigation("ScheduleType");
                });

            modelBuilder.Entity("HrisApp.Shared.Models.Employee.EmployeeT", b =>
                {
                    b.HasOne("HrisApp.Shared.Models.MasterData.AreaT", "Area")
                        .WithMany()
                        .HasForeignKey("AreaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HrisApp.Shared.Models.StaticData.CivilStatusT", "CivilStatus")
                        .WithMany()
                        .HasForeignKey("CivilStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HrisApp.Shared.Models.MasterData.DepartmentT", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HrisApp.Shared.Models.MasterData.DivisionT", "Division")
                        .WithMany()
                        .HasForeignKey("DivisionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HrisApp.Shared.Models.StaticData.EmerRelationshipT", "EmerRelationship")
                        .WithMany()
                        .HasForeignKey("EmerRelationshipId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HrisApp.Shared.Models.StaticData.EmploymentStatusT", "EmploymentStatus")
                        .WithMany()
                        .HasForeignKey("EmploymentStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HrisApp.Shared.Models.StaticData.GenderT", "Gender")
                        .WithMany()
                        .HasForeignKey("GenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HrisApp.Shared.Models.StaticData.ReligionT", "Religion")
                        .WithMany()
                        .HasForeignKey("ReligionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HrisApp.Shared.Models.StaticData.StatusT", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Area");

                    b.Navigation("CivilStatus");

                    b.Navigation("Department");

                    b.Navigation("Division");

                    b.Navigation("EmerRelationship");

                    b.Navigation("EmploymentStatus");

                    b.Navigation("Gender");

                    b.Navigation("Religion");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("HrisApp.Shared.Models.Images.DocumentT", b =>
                {
                    b.HasOne("HrisApp.Shared.Models.MasterData.DepartmentT", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HrisApp.Shared.Models.MasterData.DivisionT", "Division")
                        .WithMany()
                        .HasForeignKey("DivisionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("Division");
                });

            modelBuilder.Entity("HrisApp.Shared.Models.Images.EmpPictureT", b =>
                {
                    b.HasOne("HrisApp.Shared.Models.MasterData.DepartmentT", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HrisApp.Shared.Models.MasterData.DivisionT", "Division")
                        .WithMany()
                        .HasForeignKey("DivisionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("Division");
                });

            modelBuilder.Entity("HrisApp.Shared.Models.User.UserMasterT", b =>
                {
                    b.HasOne("HrisApp.Shared.Models.Employee.EmployeeT", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });
#pragma warning restore 612, 618
        }
    }
}
